/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: steam/steam.i

#define SWIGMODULE steam

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include <stdlib.h>

#include "../sdk/public/steam/steam_api.h"
#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_steam_fb253aa6b5654893(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_steam_fb253aa6b5654893(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_k_cubSaltSize_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cubSaltSize;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_GIDNil_get_steam_fb253aa6b5654893() {
  GID_t result;
  long long _swig_go_result;
  
  
  result = (GID_t)(GID_t)k_GIDNil;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_TxnIDNil_get_steam_fb253aa6b5654893() {
  GID_t result;
  long long _swig_go_result;
  
  
  result = (GID_t)(GID_t)k_TxnIDNil;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_TxnIDUnknown_get_steam_fb253aa6b5654893() {
  GID_t result;
  long long _swig_go_result;
  
  
  result = (GID_t)(GID_t)k_TxnIDUnknown;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_JobIDNil_get_steam_fb253aa6b5654893() {
  JobID_t result;
  long long _swig_go_result;
  
  
  result = (JobID_t)(JobID_t)k_JobIDNil;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_uPackageIdFreeSub_get_steam_fb253aa6b5654893() {
  PackageId_t result;
  intgo _swig_go_result;
  
  
  result = (PackageId_t)(PackageId_t)k_uPackageIdFreeSub;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_uPackageIdInvalid_get_steam_fb253aa6b5654893() {
  PackageId_t result;
  intgo _swig_go_result;
  
  
  result = (PackageId_t)(PackageId_t)k_uPackageIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_uBundleIdInvalid_get_steam_fb253aa6b5654893() {
  BundleId_t result;
  intgo _swig_go_result;
  
  
  result = (BundleId_t)(BundleId_t)k_uBundleIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_uAppIdInvalid_get_steam_fb253aa6b5654893() {
  AppId_t result;
  intgo _swig_go_result;
  
  
  result = (AppId_t)(AppId_t)k_uAppIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_ulAssetClassIdInvalid_get_steam_fb253aa6b5654893() {
  AssetClassId_t result;
  long long _swig_go_result;
  
  
  result = (AssetClassId_t)(AssetClassId_t)k_ulAssetClassIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_uPhysicalItemIdInvalid_get_steam_fb253aa6b5654893() {
  PhysicalItemId_t result;
  intgo _swig_go_result;
  
  
  result = (PhysicalItemId_t)(PhysicalItemId_t)k_uPhysicalItemIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_uDepotIdInvalid_get_steam_fb253aa6b5654893() {
  DepotId_t result;
  intgo _swig_go_result;
  
  
  result = (DepotId_t)(DepotId_t)k_uDepotIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_uCellIDInvalid_get_steam_fb253aa6b5654893() {
  CellID_t result;
  intgo _swig_go_result;
  
  
  result = (CellID_t)(CellID_t)k_uCellIDInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_uAPICallInvalid_get_steam_fb253aa6b5654893() {
  SteamAPICall_t result;
  long long _swig_go_result;
  
  
  result = (SteamAPICall_t)(SteamAPICall_t)k_uAPICallInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_uPartnerIdInvalid_get_steam_fb253aa6b5654893() {
  PartnerId_t result;
  intgo _swig_go_result;
  
  
  result = (PartnerId_t)(PartnerId_t)k_uPartnerIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_uManifestIdInvalid_get_steam_fb253aa6b5654893() {
  ManifestId_t result;
  long long _swig_go_result;
  
  
  result = (ManifestId_t)(ManifestId_t)k_uManifestIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_ulSiteIdInvalid_get_steam_fb253aa6b5654893() {
  SiteId_t result;
  long long _swig_go_result;
  
  
  result = (SiteId_t)(SiteId_t)k_ulSiteIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_EUniverseInvalid_steam_fb253aa6b5654893() {
  EUniverse result;
  intgo _swig_go_result;
  
  
  result = k_EUniverseInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUniversePublic_steam_fb253aa6b5654893() {
  EUniverse result;
  intgo _swig_go_result;
  
  
  result = k_EUniversePublic;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUniverseBeta_steam_fb253aa6b5654893() {
  EUniverse result;
  intgo _swig_go_result;
  
  
  result = k_EUniverseBeta;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUniverseInternal_steam_fb253aa6b5654893() {
  EUniverse result;
  intgo _swig_go_result;
  
  
  result = k_EUniverseInternal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUniverseDev_steam_fb253aa6b5654893() {
  EUniverse result;
  intgo _swig_go_result;
  
  
  result = k_EUniverseDev;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUniverseMax_steam_fb253aa6b5654893() {
  EUniverse result;
  intgo _swig_go_result;
  
  
  result = k_EUniverseMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultOK_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultOK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultFail_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultFail;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultNoConnection_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultNoConnection;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidPassword_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidPassword;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultLoggedInElsewhere_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultLoggedInElsewhere;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidProtocolVer_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidProtocolVer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidParam_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidParam;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultFileNotFound_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultFileNotFound;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultBusy_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultBusy;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidState_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidState;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidName_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidName;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidEmail_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidEmail;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultDuplicateName_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultDuplicateName;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccessDenied_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccessDenied;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultTimeout_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultTimeout;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultBanned_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultBanned;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountNotFound_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountNotFound;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidSteamID_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidSteamID;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultServiceUnavailable_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultServiceUnavailable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultNotLoggedOn_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultNotLoggedOn;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultPending_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultPending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultEncryptionFailure_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultEncryptionFailure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInsufficientPrivilege_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInsufficientPrivilege;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultLimitExceeded_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultLimitExceeded;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultRevoked_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultRevoked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultExpired_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultExpired;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAlreadyRedeemed_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAlreadyRedeemed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultDuplicateRequest_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultDuplicateRequest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAlreadyOwned_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAlreadyOwned;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultIPNotFound_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultIPNotFound;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultPersistFailed_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultPersistFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultLockingFailed_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultLockingFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultLogonSessionReplaced_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultLogonSessionReplaced;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultConnectFailed_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultConnectFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultHandshakeFailed_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultHandshakeFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultIOFailure_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultIOFailure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultRemoteDisconnect_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultRemoteDisconnect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultShoppingCartNotFound_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultShoppingCartNotFound;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultBlocked_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultBlocked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultIgnored_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultIgnored;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultNoMatch_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultNoMatch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountDisabled_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountDisabled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultServiceReadOnly_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultServiceReadOnly;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountNotFeatured_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountNotFeatured;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAdministratorOK_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAdministratorOK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultContentVersion_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultContentVersion;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultTryAnotherCM_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultTryAnotherCM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultPasswordRequiredToKickSession_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultPasswordRequiredToKickSession;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAlreadyLoggedInElsewhere_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAlreadyLoggedInElsewhere;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultSuspended_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultSuspended;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultCancelled_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultCancelled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultDataCorruption_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultDataCorruption;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultDiskFull_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultDiskFull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultRemoteCallFailed_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultRemoteCallFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultPasswordUnset_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultPasswordUnset;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultExternalAccountUnlinked_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultExternalAccountUnlinked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultPSNTicketInvalid_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultPSNTicketInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultExternalAccountAlreadyLinked_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultExternalAccountAlreadyLinked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultRemoteFileConflict_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultRemoteFileConflict;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultIllegalPassword_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultIllegalPassword;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultSameAsPreviousValue_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultSameAsPreviousValue;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountLogonDenied_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountLogonDenied;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultCannotUseOldPassword_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultCannotUseOldPassword;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidLoginAuthCode_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidLoginAuthCode;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountLogonDeniedNoMail_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountLogonDeniedNoMail;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultHardwareNotCapableOfIPT_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultHardwareNotCapableOfIPT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultIPTInitError_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultIPTInitError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultParentalControlRestricted_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultParentalControlRestricted;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultFacebookQueryError_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultFacebookQueryError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultExpiredLoginAuthCode_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultExpiredLoginAuthCode;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultIPLoginRestrictionFailed_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultIPLoginRestrictionFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountLockedDown_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountLockedDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountLogonDeniedVerifiedEmailRequired_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountLogonDeniedVerifiedEmailRequired;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultNoMatchingURL_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultNoMatchingURL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultBadResponse_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultBadResponse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultRequirePasswordReEntry_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultRequirePasswordReEntry;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultValueOutOfRange_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultValueOutOfRange;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultUnexpectedError_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultUnexpectedError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultDisabled_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultDisabled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidCEGSubmission_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidCEGSubmission;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultRestrictedDevice_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultRestrictedDevice;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultRegionLocked_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultRegionLocked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultRateLimitExceeded_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultRateLimitExceeded;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountLoginDeniedNeedTwoFactor_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountLoginDeniedNeedTwoFactor;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultItemDeleted_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultItemDeleted;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountLoginDeniedThrottle_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountLoginDeniedThrottle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultTwoFactorCodeMismatch_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultTwoFactorCodeMismatch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultTwoFactorActivationCodeMismatch_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultTwoFactorActivationCodeMismatch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountAssociatedToMultiplePartners_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountAssociatedToMultiplePartners;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultNotModified_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultNotModified;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultNoMobileDevice_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultNoMobileDevice;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultTimeNotSynced_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultTimeNotSynced;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultSmsCodeFailed_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultSmsCodeFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountLimitExceeded_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountLimitExceeded;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountActivityLimitExceeded_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountActivityLimitExceeded;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultPhoneActivityLimitExceeded_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultPhoneActivityLimitExceeded;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultRefundToWallet_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultRefundToWallet;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultEmailSendFailure_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultEmailSendFailure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultNotSettled_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultNotSettled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultNeedCaptcha_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultNeedCaptcha;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultGSLTDenied_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultGSLTDenied;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultGSOwnerDenied_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultGSOwnerDenied;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInvalidItemType_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInvalidItemType;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultIPBanned_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultIPBanned;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultGSLTExpired_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultGSLTExpired;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultInsufficientFunds_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultInsufficientFunds;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultTooManyPending_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultTooManyPending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultNoSiteLicensesFound_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultNoSiteLicensesFound;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultWGNetworkSendExceeded_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultWGNetworkSendExceeded;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultAccountNotFriends_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultAccountNotFriends;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EResultLimitedUserAccount_steam_fb253aa6b5654893() {
  EResult result;
  intgo _swig_go_result;
  
  
  result = k_EResultLimitedUserAccount;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultOK_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultOK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultNotInitialized_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultNotInitialized;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultNotRecording_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultNotRecording;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultNoData_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultNoData;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultBufferTooSmall_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultBufferTooSmall;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultDataCorrupted_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultDataCorrupted;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultRestricted_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultRestricted;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultUnsupportedCodec_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultUnsupportedCodec;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultReceiverOutOfDate_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultReceiverOutOfDate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVoiceResultReceiverDidNotAnswer_steam_fb253aa6b5654893() {
  EVoiceResult result;
  intgo _swig_go_result;
  
  
  result = k_EVoiceResultReceiverDidNotAnswer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyInvalid_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyInvalidVersion_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyInvalidVersion;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyGeneric_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyGeneric;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyNotLoggedOn_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyNotLoggedOn;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyNoLicense_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyNoLicense;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyCheater_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyCheater;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyLoggedInElseWhere_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyLoggedInElseWhere;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyUnknownText_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyUnknownText;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyIncompatibleAnticheat_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyIncompatibleAnticheat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyMemoryCorruption_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyMemoryCorruption;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenyIncompatibleSoftware_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenyIncompatibleSoftware;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenySteamConnectionLost_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenySteamConnectionLost;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenySteamConnectionError_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenySteamConnectionError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenySteamResponseTimedOut_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenySteamResponseTimedOut;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenySteamValidationStalled_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenySteamValidationStalled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EDenySteamOwnerLeftGuestUser_steam_fb253aa6b5654893() {
  EDenyReason result;
  intgo _swig_go_result;
  
  
  result = k_EDenySteamOwnerLeftGuestUser;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_HAuthTicketInvalid_get_steam_fb253aa6b5654893() {
  HAuthTicket result;
  intgo _swig_go_result;
  
  
  result = (HAuthTicket)(HAuthTicket)k_HAuthTicketInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_EBeginAuthSessionResultOK_steam_fb253aa6b5654893() {
  EBeginAuthSessionResult result;
  intgo _swig_go_result;
  
  
  result = k_EBeginAuthSessionResultOK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBeginAuthSessionResultInvalidTicket_steam_fb253aa6b5654893() {
  EBeginAuthSessionResult result;
  intgo _swig_go_result;
  
  
  result = k_EBeginAuthSessionResultInvalidTicket;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBeginAuthSessionResultDuplicateRequest_steam_fb253aa6b5654893() {
  EBeginAuthSessionResult result;
  intgo _swig_go_result;
  
  
  result = k_EBeginAuthSessionResultDuplicateRequest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBeginAuthSessionResultInvalidVersion_steam_fb253aa6b5654893() {
  EBeginAuthSessionResult result;
  intgo _swig_go_result;
  
  
  result = k_EBeginAuthSessionResultInvalidVersion;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBeginAuthSessionResultGameMismatch_steam_fb253aa6b5654893() {
  EBeginAuthSessionResult result;
  intgo _swig_go_result;
  
  
  result = k_EBeginAuthSessionResultGameMismatch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBeginAuthSessionResultExpiredTicket_steam_fb253aa6b5654893() {
  EBeginAuthSessionResult result;
  intgo _swig_go_result;
  
  
  result = k_EBeginAuthSessionResultExpiredTicket;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponseOK_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponseOK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponseUserNotConnectedToSteam_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponseUserNotConnectedToSteam;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponseNoLicenseOrExpired_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponseNoLicenseOrExpired;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponseVACBanned_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponseVACBanned;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponseLoggedInElseWhere_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponseLoggedInElseWhere;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponseVACCheckTimedOut_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponseVACCheckTimedOut;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponseAuthTicketCanceled_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponseAuthTicketCanceled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponseAuthTicketInvalidAlreadyUsed_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponseAuthTicketInvalidAlreadyUsed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponseAuthTicketInvalid_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponseAuthTicketInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAuthSessionResponsePublisherIssuedBan_steam_fb253aa6b5654893() {
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  
  result = k_EAuthSessionResponsePublisherIssuedBan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserHasLicenseResultHasLicense_steam_fb253aa6b5654893() {
  EUserHasLicenseForAppResult result;
  intgo _swig_go_result;
  
  
  result = k_EUserHasLicenseResultHasLicense;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserHasLicenseResultDoesNotHaveLicense_steam_fb253aa6b5654893() {
  EUserHasLicenseForAppResult result;
  intgo _swig_go_result;
  
  
  result = k_EUserHasLicenseResultDoesNotHaveLicense;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserHasLicenseResultNoAuth_steam_fb253aa6b5654893() {
  EUserHasLicenseForAppResult result;
  intgo _swig_go_result;
  
  
  result = k_EUserHasLicenseResultNoAuth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeInvalid_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeIndividual_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeIndividual;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeMultiseat_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeMultiseat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeGameServer_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeGameServer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeAnonGameServer_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeAnonGameServer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypePending_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypePending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeContentServer_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeContentServer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeClan_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeClan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeChat_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeChat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeConsoleUser_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeConsoleUser;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeAnonUser_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeAnonUser;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAccountTypeMax_steam_fb253aa6b5654893() {
  EAccountType result;
  intgo _swig_go_result;
  
  
  result = k_EAccountTypeMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppReleaseState_Unknown_steam_fb253aa6b5654893() {
  EAppReleaseState result;
  intgo _swig_go_result;
  
  
  result = k_EAppReleaseState_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppReleaseState_Unavailable_steam_fb253aa6b5654893() {
  EAppReleaseState result;
  intgo _swig_go_result;
  
  
  result = k_EAppReleaseState_Unavailable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppReleaseState_Prerelease_steam_fb253aa6b5654893() {
  EAppReleaseState result;
  intgo _swig_go_result;
  
  
  result = k_EAppReleaseState_Prerelease;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppReleaseState_PreloadOnly_steam_fb253aa6b5654893() {
  EAppReleaseState result;
  intgo _swig_go_result;
  
  
  result = k_EAppReleaseState_PreloadOnly;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppReleaseState_Released_steam_fb253aa6b5654893() {
  EAppReleaseState result;
  intgo _swig_go_result;
  
  
  result = k_EAppReleaseState_Released;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_None_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_OwnsLicense_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_OwnsLicense;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_FreeLicense_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_FreeLicense;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_RegionRestricted_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_RegionRestricted;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_LowViolence_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_LowViolence;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_InvalidPlatform_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_InvalidPlatform;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_SharedLicense_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_SharedLicense;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_FreeWeekend_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_FreeWeekend;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_RetailLicense_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_RetailLicense;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_LicenseLocked_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_LicenseLocked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_LicensePending_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_LicensePending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_LicenseExpired_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_LicenseExpired;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_LicensePermanent_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_LicensePermanent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_LicenseRecurring_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_LicenseRecurring;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_LicenseCanceled_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_LicenseCanceled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_AutoGrant_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_AutoGrant;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_PendingGift_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_PendingGift;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_RentalNotActivated_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_RentalNotActivated;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_Rental_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_Rental;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppOwnershipFlags_SiteLicense_steam_fb253aa6b5654893() {
  EAppOwnershipFlags result;
  intgo _swig_go_result;
  
  
  result = k_EAppOwnershipFlags_SiteLicense;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Invalid_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Invalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Game_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Game;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Application_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Application;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Tool_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Tool;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Demo_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Demo;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Media_DEPRECATED_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Media_DEPRECATED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_DLC_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_DLC;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Guide_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Guide;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Driver_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Driver;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Config_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Config;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Hardware_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Hardware;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Franchise_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Franchise;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Video_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Video;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Plugin_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Plugin;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Music_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Music;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Series_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Series;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Comic_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Comic;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_Shortcut_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_Shortcut;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EAppType_DepotOnly_steam_fb253aa6b5654893() {
  EAppType result;
  intgo _swig_go_result;
  
  
  result = k_EAppType_DepotOnly;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamUserStatTypeINVALID_steam_fb253aa6b5654893() {
  ESteamUserStatType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamUserStatTypeINVALID;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamUserStatTypeINT_steam_fb253aa6b5654893() {
  ESteamUserStatType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamUserStatTypeINT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamUserStatTypeFLOAT_steam_fb253aa6b5654893() {
  ESteamUserStatType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamUserStatTypeFLOAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamUserStatTypeAVGRATE_steam_fb253aa6b5654893() {
  ESteamUserStatType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamUserStatTypeAVGRATE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamUserStatTypeACHIEVEMENTS_steam_fb253aa6b5654893() {
  ESteamUserStatType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamUserStatTypeACHIEVEMENTS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamUserStatTypeGROUPACHIEVEMENTS_steam_fb253aa6b5654893() {
  ESteamUserStatType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamUserStatTypeGROUPACHIEVEMENTS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamUserStatTypeMAX_steam_fb253aa6b5654893() {
  ESteamUserStatType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamUserStatTypeMAX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeInvalid_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeChatMsg_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeChatMsg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeTyping_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeTyping;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeInviteGame_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeInviteGame;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeEmote_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeEmote;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeLeftConversation_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeLeftConversation;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeEntered_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeEntered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeWasKicked_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeWasKicked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeWasBanned_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeWasBanned;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeDisconnected_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeDisconnected;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeHistoricalChat_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeHistoricalChat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatEntryTypeLinkBlocked_steam_fb253aa6b5654893() {
  EChatEntryType result;
  intgo _swig_go_result;
  
  
  result = k_EChatEntryTypeLinkBlocked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseSuccess_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseSuccess;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseDoesntExist_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseDoesntExist;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseNotAllowed_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseNotAllowed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseFull_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseFull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseError_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseBanned_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseBanned;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseLimited_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseLimited;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseClanDisabled_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseClanDisabled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseCommunityBan_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseCommunityBan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseMemberBlockedYou_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseMemberBlockedYou;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseYouBlockedMember_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseYouBlockedMember;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatRoomEnterResponseRatelimitExceeded_steam_fb253aa6b5654893() {
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  
  result = k_EChatRoomEnterResponseRatelimitExceeded;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_unSteamAccountIDMask_get_steam_fb253aa6b5654893() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)(unsigned int)k_unSteamAccountIDMask;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_unSteamAccountInstanceMask_get_steam_fb253aa6b5654893() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)(unsigned int)k_unSteamAccountInstanceMask;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_unSteamUserDesktopInstance_get_steam_fb253aa6b5654893() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)(unsigned int)k_unSteamUserDesktopInstance;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_unSteamUserConsoleInstance_get_steam_fb253aa6b5654893() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)(unsigned int)k_unSteamUserConsoleInstance;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_unSteamUserWebInstance_get_steam_fb253aa6b5654893() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)(unsigned int)k_unSteamUserWebInstance;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatAccountInstanceMask_steam_fb253aa6b5654893() {
  EChatSteamIDInstanceFlags result;
  intgo _swig_go_result;
  
  
  result = k_EChatAccountInstanceMask;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatInstanceFlagClan_steam_fb253aa6b5654893() {
  EChatSteamIDInstanceFlags result;
  intgo _swig_go_result;
  
  
  result = k_EChatInstanceFlagClan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatInstanceFlagLobby_steam_fb253aa6b5654893() {
  EChatSteamIDInstanceFlags result;
  intgo _swig_go_result;
  
  
  result = k_EChatInstanceFlagLobby;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatInstanceFlagMMSLobby_steam_fb253aa6b5654893() {
  EChatSteamIDInstanceFlags result;
  intgo _swig_go_result;
  
  
  result = k_EChatInstanceFlagMMSLobby;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EMarketingMessageFlagsNone_steam_fb253aa6b5654893() {
  EMarketingMessageFlags result;
  intgo _swig_go_result;
  
  
  result = k_EMarketingMessageFlagsNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EMarketingMessageFlagsHighPriority_steam_fb253aa6b5654893() {
  EMarketingMessageFlags result;
  intgo _swig_go_result;
  
  
  result = k_EMarketingMessageFlagsHighPriority;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EMarketingMessageFlagsPlatformWindows_steam_fb253aa6b5654893() {
  EMarketingMessageFlags result;
  intgo _swig_go_result;
  
  
  result = k_EMarketingMessageFlagsPlatformWindows;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EMarketingMessageFlagsPlatformMac_steam_fb253aa6b5654893() {
  EMarketingMessageFlags result;
  intgo _swig_go_result;
  
  
  result = k_EMarketingMessageFlagsPlatformMac;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EMarketingMessageFlagsPlatformLinux_steam_fb253aa6b5654893() {
  EMarketingMessageFlags result;
  intgo _swig_go_result;
  
  
  result = k_EMarketingMessageFlagsPlatformLinux;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EMarketingMessageFlagsPlatformRestrictions_steam_fb253aa6b5654893() {
  EMarketingMessageFlags result;
  intgo _swig_go_result;
  
  
  result = k_EMarketingMessageFlagsPlatformRestrictions;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPositionTopLeft_steam_fb253aa6b5654893() {
  ENotificationPosition result;
  intgo _swig_go_result;
  
  
  result = k_EPositionTopLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPositionTopRight_steam_fb253aa6b5654893() {
  ENotificationPosition result;
  intgo _swig_go_result;
  
  
  result = k_EPositionTopRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPositionBottomLeft_steam_fb253aa6b5654893() {
  ENotificationPosition result;
  intgo _swig_go_result;
  
  
  result = k_EPositionBottomLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPositionBottomRight_steam_fb253aa6b5654893() {
  ENotificationPosition result;
  intgo _swig_go_result;
  
  
  result = k_EPositionBottomRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultNone_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultOK_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultOK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultInitFailed_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultInitFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultFrameFailed_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultFrameFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultTimeout_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultTimeout;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultBandwidthExceeded_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultBandwidthExceeded;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultLowFPS_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultLowFPS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultMissingKeyFrames_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultMissingKeyFrames;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultNoConnection_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultNoConnection;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultRelayFailed_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultRelayFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultSettingsChanged_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultSettingsChanged;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultMissingAudio_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultMissingAudio;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultTooFarBehind_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultTooFarBehind;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EBroadcastUploadResultTranscodeBehind_steam_fb253aa6b5654893() {
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  
  result = k_EBroadcastUploadResultTranscodeBehind;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_None_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Default_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Default;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_SafeMode_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_SafeMode;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Multiplayer_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Multiplayer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Config_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Config;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_OpenVR_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_OpenVR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Server_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Server;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Editor_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Editor;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Manual_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Manual;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Benchmark_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Benchmark;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Option1_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Option1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Option2_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Option2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Option3_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Option3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_OculusVR_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_OculusVR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_OpenVROverlay_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_OpenVROverlay;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_OSVR_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_OSVR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELaunchOptionType_Dialog_steam_fb253aa6b5654893() {
  ELaunchOptionType result;
  intgo _swig_go_result;
  
  
  result = k_ELaunchOptionType_Dialog;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_BIsVRLaunchOptionType_steam_fb253aa6b5654893(intgo _swig_go_0) {
  ELaunchOptionType arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ELaunchOptionType)_swig_go_0; 
  
  result = (bool)BIsVRLaunchOptionType(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_None_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Unknown_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_HTC_Dev_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_HTC_Dev;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_HTC_VivePre_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_HTC_VivePre;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_HTC_Vive_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_HTC_Vive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_HTC_Unknown_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_HTC_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Oculus_DK1_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Oculus_DK1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Oculus_DK2_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Oculus_DK2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Oculus_Rift_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Oculus_Rift;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Oculus_Unknown_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Oculus_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Acer_Unknown_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Acer_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Acer_WindowsMR_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Acer_WindowsMR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Dell_Unknown_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Dell_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Dell_Visor_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Dell_Visor;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Lenovo_Unknown_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Lenovo_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Lenovo_Explorer_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Lenovo_Explorer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_HP_Unknown_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_HP_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_HP_WindowsMR_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_HP_WindowsMR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Samsung_Unknown_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Samsung_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Samsung_Odyssey_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Samsung_Odyssey;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Unannounced_Unknown_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Unannounced_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eEVRHMDType_Unannounced_WindowsMR_steam_fb253aa6b5654893() {
  EVRHMDType result;
  intgo _swig_go_result;
  
  
  result = k_eEVRHMDType_Unannounced_WindowsMR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_BIsOculusHMD_steam_fb253aa6b5654893(intgo _swig_go_0) {
  EVRHMDType arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (EVRHMDType)_swig_go_0; 
  
  result = (bool)BIsOculusHMD(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BIsWindowsMRHeadset_steam_fb253aa6b5654893(intgo _swig_go_0) {
  EVRHMDType arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (EVRHMDType)_swig_go_0; 
  
  result = (bool)BIsWindowsMRHeadset(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BIsViveHMD_steam_fb253aa6b5654893(intgo _swig_go_0) {
  EVRHMDType arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (EVRHMDType)_swig_go_0; 
  
  result = (bool)BIsViveHMD(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cchGameExtraInfoMax_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cchGameExtraInfoMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ValvePackingSentinel_t_m_u32_set_steam_fb253aa6b5654893(ValvePackingSentinel_t *_swig_go_0, intgo _swig_go_1) {
  ValvePackingSentinel_t *arg1 = (ValvePackingSentinel_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(ValvePackingSentinel_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_u32 = arg2;
  
}


intgo _wrap_ValvePackingSentinel_t_m_u32_get_steam_fb253aa6b5654893(ValvePackingSentinel_t *_swig_go_0) {
  ValvePackingSentinel_t *arg1 = (ValvePackingSentinel_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ValvePackingSentinel_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_u32);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ValvePackingSentinel_t_m_u64_set_steam_fb253aa6b5654893(ValvePackingSentinel_t *_swig_go_0, long long _swig_go_1) {
  ValvePackingSentinel_t *arg1 = (ValvePackingSentinel_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(ValvePackingSentinel_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_u64 = arg2;
  
}


long long _wrap_ValvePackingSentinel_t_m_u64_get_steam_fb253aa6b5654893(ValvePackingSentinel_t *_swig_go_0) {
  ValvePackingSentinel_t *arg1 = (ValvePackingSentinel_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(ValvePackingSentinel_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_u64);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ValvePackingSentinel_t_m_u16_set_steam_fb253aa6b5654893(ValvePackingSentinel_t *_swig_go_0, short _swig_go_1) {
  ValvePackingSentinel_t *arg1 = (ValvePackingSentinel_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(ValvePackingSentinel_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  if (arg1) (arg1)->m_u16 = arg2;
  
}


short _wrap_ValvePackingSentinel_t_m_u16_get_steam_fb253aa6b5654893(ValvePackingSentinel_t *_swig_go_0) {
  ValvePackingSentinel_t *arg1 = (ValvePackingSentinel_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(ValvePackingSentinel_t **)&_swig_go_0; 
  
  result = (uint16) ((arg1)->m_u16);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ValvePackingSentinel_t_m_d_set_steam_fb253aa6b5654893(ValvePackingSentinel_t *_swig_go_0, double _swig_go_1) {
  ValvePackingSentinel_t *arg1 = (ValvePackingSentinel_t *) 0 ;
  double arg2 ;
  
  arg1 = *(ValvePackingSentinel_t **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_d = arg2;
  
}


double _wrap_ValvePackingSentinel_t_m_d_get_steam_fb253aa6b5654893(ValvePackingSentinel_t *_swig_go_0) {
  ValvePackingSentinel_t *arg1 = (ValvePackingSentinel_t *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(ValvePackingSentinel_t **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_d);
  _swig_go_result = result; 
  return _swig_go_result;
}


ValvePackingSentinel_t *_wrap_new_ValvePackingSentinel_t_steam_fb253aa6b5654893() {
  ValvePackingSentinel_t *result = 0 ;
  ValvePackingSentinel_t *_swig_go_result;
  
  
  result = (ValvePackingSentinel_t *)new ValvePackingSentinel_t();
  *(ValvePackingSentinel_t **)&_swig_go_result = (ValvePackingSentinel_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ValvePackingSentinel_t_steam_fb253aa6b5654893(ValvePackingSentinel_t *_swig_go_0) {
  ValvePackingSentinel_t *arg1 = (ValvePackingSentinel_t *) 0 ;
  
  arg1 = *(ValvePackingSentinel_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_ISteamClient_CreateSteamPipe_steam_fb253aa6b5654893(ISteamClient *_swig_go_0) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamPipe result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  
  result = (HSteamPipe)(arg1)->CreateSteamPipe();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamClient_BReleaseSteamPipe_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamPipe arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamPipe)_swig_go_1; 
  
  result = (bool)(arg1)->BReleaseSteamPipe(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamClient_ConnectToGlobalUser_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamPipe arg2 ;
  HSteamUser result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamPipe)_swig_go_1; 
  
  result = (HSteamUser)(arg1)->ConnectToGlobalUser(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamClient_CreateLocalUser_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamPipe *arg2 = (HSteamPipe *) 0 ;
  EAccountType arg3 ;
  HSteamUser result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = *(HSteamPipe **)&_swig_go_1; 
  arg3 = (EAccountType)_swig_go_2; 
  
  result = (HSteamUser)(arg1)->CreateLocalUser(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamClient_ReleaseUser_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamPipe arg2 ;
  HSteamUser arg3 ;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamPipe)_swig_go_1; 
  arg3 = (HSteamUser)_swig_go_2; 
  
  (arg1)->ReleaseUser(arg2,arg3);
  
}


ISteamUser *_wrap_ISteamClient_GetISteamUser_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamUser *result = 0 ;
  ISteamUser *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamUser *)(arg1)->GetISteamUser(arg2,arg3,(char const *)arg4);
  *(ISteamUser **)&_swig_go_result = (ISteamUser *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamGameServer *_wrap_ISteamClient_GetISteamGameServer_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamGameServer *result = 0 ;
  ISteamGameServer *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamGameServer *)(arg1)->GetISteamGameServer(arg2,arg3,(char const *)arg4);
  *(ISteamGameServer **)&_swig_go_result = (ISteamGameServer *)result; 
  free(arg4); 
  return _swig_go_result;
}


void _wrap_ISteamClient_SetLocalIPBinding_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, short _swig_go_2) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  uint32 arg2 ;
  uint16 arg3 ;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  arg3 = (uint16)_swig_go_2; 
  
  (arg1)->SetLocalIPBinding(arg2,arg3);
  
}


ISteamFriends *_wrap_ISteamClient_GetISteamFriends_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamFriends *result = 0 ;
  ISteamFriends *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamFriends *)(arg1)->GetISteamFriends(arg2,arg3,(char const *)arg4);
  *(ISteamFriends **)&_swig_go_result = (ISteamFriends *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamUtils *_wrap_ISteamClient_GetISteamUtils_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamPipe arg2 ;
  char *arg3 = (char *) 0 ;
  ISteamUtils *result = 0 ;
  ISteamUtils *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamPipe)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (ISteamUtils *)(arg1)->GetISteamUtils(arg2,(char const *)arg3);
  *(ISteamUtils **)&_swig_go_result = (ISteamUtils *)result; 
  free(arg3); 
  return _swig_go_result;
}


ISteamMatchmaking *_wrap_ISteamClient_GetISteamMatchmaking_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamMatchmaking *result = 0 ;
  ISteamMatchmaking *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamMatchmaking *)(arg1)->GetISteamMatchmaking(arg2,arg3,(char const *)arg4);
  *(ISteamMatchmaking **)&_swig_go_result = (ISteamMatchmaking *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamMatchmakingServers *_wrap_ISteamClient_GetISteamMatchmakingServers_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamMatchmakingServers *result = 0 ;
  ISteamMatchmakingServers *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamMatchmakingServers *)(arg1)->GetISteamMatchmakingServers(arg2,arg3,(char const *)arg4);
  *(ISteamMatchmakingServers **)&_swig_go_result = (ISteamMatchmakingServers *)result; 
  free(arg4); 
  return _swig_go_result;
}


void *_wrap_ISteamClient_GetISteamGenericInterface_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (void *)(arg1)->GetISteamGenericInterface(arg2,arg3,(char const *)arg4);
  *(void **)&_swig_go_result = (void *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamUserStats *_wrap_ISteamClient_GetISteamUserStats_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamUserStats *result = 0 ;
  ISteamUserStats *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamUserStats *)(arg1)->GetISteamUserStats(arg2,arg3,(char const *)arg4);
  *(ISteamUserStats **)&_swig_go_result = (ISteamUserStats *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamGameServerStats *_wrap_ISteamClient_GetISteamGameServerStats_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamGameServerStats *result = 0 ;
  ISteamGameServerStats *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamGameServerStats *)(arg1)->GetISteamGameServerStats(arg2,arg3,(char const *)arg4);
  *(ISteamGameServerStats **)&_swig_go_result = (ISteamGameServerStats *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamApps *_wrap_ISteamClient_GetISteamApps_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamApps *result = 0 ;
  ISteamApps *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamApps *)(arg1)->GetISteamApps(arg2,arg3,(char const *)arg4);
  *(ISteamApps **)&_swig_go_result = (ISteamApps *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamNetworking *_wrap_ISteamClient_GetISteamNetworking_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamNetworking *result = 0 ;
  ISteamNetworking *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamNetworking *)(arg1)->GetISteamNetworking(arg2,arg3,(char const *)arg4);
  *(ISteamNetworking **)&_swig_go_result = (ISteamNetworking *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamRemoteStorage *_wrap_ISteamClient_GetISteamRemoteStorage_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamRemoteStorage *result = 0 ;
  ISteamRemoteStorage *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamRemoteStorage *)(arg1)->GetISteamRemoteStorage(arg2,arg3,(char const *)arg4);
  *(ISteamRemoteStorage **)&_swig_go_result = (ISteamRemoteStorage *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamScreenshots *_wrap_ISteamClient_GetISteamScreenshots_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamScreenshots *result = 0 ;
  ISteamScreenshots *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamScreenshots *)(arg1)->GetISteamScreenshots(arg2,arg3,(char const *)arg4);
  *(ISteamScreenshots **)&_swig_go_result = (ISteamScreenshots *)result; 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_ISteamClient_GetIPCCallCount_steam_fb253aa6b5654893(ISteamClient *_swig_go_0) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetIPCCallCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamClient_SetWarningMessageHook_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, void** _swig_go_1) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  SteamAPIWarningMessageHook_t arg2 = (SteamAPIWarningMessageHook_t) 0 ;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = *(SteamAPIWarningMessageHook_t *)&_swig_go_1; 
  
  (arg1)->SetWarningMessageHook(arg2);
  
}


bool _wrap_ISteamClient_BShutdownIfAllPipesClosed_steam_fb253aa6b5654893(ISteamClient *_swig_go_0) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  
  result = (bool)(arg1)->BShutdownIfAllPipesClosed();
  _swig_go_result = result; 
  return _swig_go_result;
}


ISteamHTTP *_wrap_ISteamClient_GetISteamHTTP_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamHTTP *result = 0 ;
  ISteamHTTP *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamHTTP *)(arg1)->GetISteamHTTP(arg2,arg3,(char const *)arg4);
  *(ISteamHTTP **)&_swig_go_result = (ISteamHTTP *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamController *_wrap_ISteamClient_GetISteamController_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamController *result = 0 ;
  ISteamController *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamController *)(arg1)->GetISteamController(arg2,arg3,(char const *)arg4);
  *(ISteamController **)&_swig_go_result = (ISteamController *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamUGC *_wrap_ISteamClient_GetISteamUGC_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamUGC *result = 0 ;
  ISteamUGC *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamUGC *)(arg1)->GetISteamUGC(arg2,arg3,(char const *)arg4);
  *(ISteamUGC **)&_swig_go_result = (ISteamUGC *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamAppList *_wrap_ISteamClient_GetISteamAppList_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamAppList *result = 0 ;
  ISteamAppList *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamAppList *)(arg1)->GetISteamAppList(arg2,arg3,(char const *)arg4);
  *(ISteamAppList **)&_swig_go_result = (ISteamAppList *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamMusic *_wrap_ISteamClient_GetISteamMusic_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamMusic *result = 0 ;
  ISteamMusic *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamMusic *)(arg1)->GetISteamMusic(arg2,arg3,(char const *)arg4);
  *(ISteamMusic **)&_swig_go_result = (ISteamMusic *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamMusicRemote *_wrap_ISteamClient_GetISteamMusicRemote_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamMusicRemote *result = 0 ;
  ISteamMusicRemote *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamMusicRemote *)(arg1)->GetISteamMusicRemote(arg2,arg3,(char const *)arg4);
  *(ISteamMusicRemote **)&_swig_go_result = (ISteamMusicRemote *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamHTMLSurface *_wrap_ISteamClient_GetISteamHTMLSurface_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamHTMLSurface *result = 0 ;
  ISteamHTMLSurface *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamHTMLSurface *)(arg1)->GetISteamHTMLSurface(arg2,arg3,(char const *)arg4);
  *(ISteamHTMLSurface **)&_swig_go_result = (ISteamHTMLSurface *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamInventory *_wrap_ISteamClient_GetISteamInventory_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamInventory *result = 0 ;
  ISteamInventory *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamInventory *)(arg1)->GetISteamInventory(arg2,arg3,(char const *)arg4);
  *(ISteamInventory **)&_swig_go_result = (ISteamInventory *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamVideo *_wrap_ISteamClient_GetISteamVideo_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamVideo *result = 0 ;
  ISteamVideo *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamVideo *)(arg1)->GetISteamVideo(arg2,arg3,(char const *)arg4);
  *(ISteamVideo **)&_swig_go_result = (ISteamVideo *)result; 
  free(arg4); 
  return _swig_go_result;
}


ISteamParentalSettings *_wrap_ISteamClient_GetISteamParentalSettings_steam_fb253aa6b5654893(ISteamClient *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  HSteamUser arg2 ;
  HSteamPipe arg3 ;
  char *arg4 = (char *) 0 ;
  ISteamParentalSettings *result = 0 ;
  ISteamParentalSettings *_swig_go_result;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  arg3 = (HSteamPipe)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ISteamParentalSettings *)(arg1)->GetISteamParentalSettings(arg2,arg3,(char const *)arg4);
  *(ISteamParentalSettings **)&_swig_go_result = (ISteamParentalSettings *)result; 
  free(arg4); 
  return _swig_go_result;
}


void _wrap_delete_ISteamClient_steam_fb253aa6b5654893(ISteamClient *_swig_go_0) {
  ISteamClient *arg1 = (ISteamClient *) 0 ;
  
  arg1 = *(ISteamClient **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iSteamUserCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamUserCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamGameServerCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamGameServerCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamFriendsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamFriendsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamBillingCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamBillingCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamMatchmakingCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamMatchmakingCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamContentServerCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamContentServerCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamUtilsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamUtilsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientFriendsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientFriendsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientUserCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientUserCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamAppsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamAppsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamUserStatsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamUserStatsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamNetworkingCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamNetworkingCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientRemoteStorageCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientRemoteStorageCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientDepotBuilderCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientDepotBuilderCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamGameServerItemsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamGameServerItemsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientUtilsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientUtilsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamGameCoordinatorCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamGameCoordinatorCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamGameServerStatsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamGameServerStatsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteam2AsyncCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteam2AsyncCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamGameStatsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamGameStatsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientHTTPCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientHTTPCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientScreenshotsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientScreenshotsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamScreenshotsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamScreenshotsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientAudioCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientAudioCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientUnifiedMessagesCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientUnifiedMessagesCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamStreamLauncherCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamStreamLauncherCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientControllerCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientControllerCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamControllerCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamControllerCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientParentalSettingsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientParentalSettingsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientDeviceAuthCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientDeviceAuthCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientNetworkDeviceManagerCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientNetworkDeviceManagerCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientMusicCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientMusicCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientRemoteClientManagerCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientRemoteClientManagerCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientUGCCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientUGCCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamStreamClientCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamStreamClientCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_IClientProductBuilderCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_IClientProductBuilderCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientShortcutsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientShortcutsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientRemoteControlManagerCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientRemoteControlManagerCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamAppListCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamAppListCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamMusicCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamMusicCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamMusicRemoteCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamMusicRemoteCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientVRCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientVRCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientGameNotificationCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientGameNotificationCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamGameNotificationCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamGameNotificationCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iSteamHTMLSurfaceCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iSteamHTMLSurfaceCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientVideoCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientVideoCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientInventoryCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientInventoryCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientBluetoothManagerCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientBluetoothManagerCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientSharedConnectionCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientSharedConnectionCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ISteamParentalSettingsCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_ISteamParentalSettingsCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iClientShaderCallbacks_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_iClientShaderCallbacks;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_CallbackMsg_t_m_hSteamUser_set_steam_fb253aa6b5654893(CallbackMsg_t *_swig_go_0, intgo _swig_go_1) {
  CallbackMsg_t *arg1 = (CallbackMsg_t *) 0 ;
  HSteamUser arg2 ;
  
  arg1 = *(CallbackMsg_t **)&_swig_go_0; 
  arg2 = (HSteamUser)_swig_go_1; 
  
  if (arg1) (arg1)->m_hSteamUser = arg2;
  
}


intgo _wrap_CallbackMsg_t_m_hSteamUser_get_steam_fb253aa6b5654893(CallbackMsg_t *_swig_go_0) {
  CallbackMsg_t *arg1 = (CallbackMsg_t *) 0 ;
  HSteamUser result;
  intgo _swig_go_result;
  
  arg1 = *(CallbackMsg_t **)&_swig_go_0; 
  
  result = (HSteamUser) ((arg1)->m_hSteamUser);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CallbackMsg_t_m_iCallback_set_steam_fb253aa6b5654893(CallbackMsg_t *_swig_go_0, intgo _swig_go_1) {
  CallbackMsg_t *arg1 = (CallbackMsg_t *) 0 ;
  int arg2 ;
  
  arg1 = *(CallbackMsg_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_iCallback = arg2;
  
}


intgo _wrap_CallbackMsg_t_m_iCallback_get_steam_fb253aa6b5654893(CallbackMsg_t *_swig_go_0) {
  CallbackMsg_t *arg1 = (CallbackMsg_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CallbackMsg_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_iCallback);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CallbackMsg_t_m_pubParam_set_steam_fb253aa6b5654893(CallbackMsg_t *_swig_go_0, char *_swig_go_1) {
  CallbackMsg_t *arg1 = (CallbackMsg_t *) 0 ;
  uint8 *arg2 = (uint8 *) 0 ;
  
  arg1 = *(CallbackMsg_t **)&_swig_go_0; 
  arg2 = *(uint8 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_pubParam = arg2;
  
}


char *_wrap_CallbackMsg_t_m_pubParam_get_steam_fb253aa6b5654893(CallbackMsg_t *_swig_go_0) {
  CallbackMsg_t *arg1 = (CallbackMsg_t *) 0 ;
  uint8 *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(CallbackMsg_t **)&_swig_go_0; 
  
  result = (uint8 *) ((arg1)->m_pubParam);
  *(uint8 **)&_swig_go_result = (uint8 *)result; 
  return _swig_go_result;
}


void _wrap_CallbackMsg_t_m_cubParam_set_steam_fb253aa6b5654893(CallbackMsg_t *_swig_go_0, intgo _swig_go_1) {
  CallbackMsg_t *arg1 = (CallbackMsg_t *) 0 ;
  int arg2 ;
  
  arg1 = *(CallbackMsg_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_cubParam = arg2;
  
}


intgo _wrap_CallbackMsg_t_m_cubParam_get_steam_fb253aa6b5654893(CallbackMsg_t *_swig_go_0) {
  CallbackMsg_t *arg1 = (CallbackMsg_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CallbackMsg_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_cubParam);
  _swig_go_result = result; 
  return _swig_go_result;
}


CallbackMsg_t *_wrap_new_CallbackMsg_t_steam_fb253aa6b5654893() {
  CallbackMsg_t *result = 0 ;
  CallbackMsg_t *_swig_go_result;
  
  
  result = (CallbackMsg_t *)new CallbackMsg_t();
  *(CallbackMsg_t **)&_swig_go_result = (CallbackMsg_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_CallbackMsg_t_steam_fb253aa6b5654893(CallbackMsg_t *_swig_go_0) {
  CallbackMsg_t *arg1 = (CallbackMsg_t *) 0 ;
  
  arg1 = *(CallbackMsg_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_ISteamUser_GetHSteamUser_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  HSteamUser result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (HSteamUser)(arg1)->GetHSteamUser();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUser_BLoggedOn_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (bool)(arg1)->BLoggedOn();
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamUser_GetSteamID_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (arg1)->GetSteamID();
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_InitiateGameConnection_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, CSteamID *_swig_go_3, intgo _swig_go_4, short _swig_go_5, bool _swig_go_6) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  CSteamID arg4 ;
  uint32 arg5 ;
  uint16 arg6 ;
  bool arg7 ;
  CSteamID *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (CSteamID *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg4 = (CSteamID)*argp4;
  
  arg5 = (uint32)_swig_go_4; 
  arg6 = (uint16)_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  result = (int)(arg1)->InitiateGameConnection(arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamUser_TerminateGameConnection_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, intgo _swig_go_1, short _swig_go_2) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  uint32 arg2 ;
  uint16 arg3 ;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  arg3 = (uint16)_swig_go_2; 
  
  (arg1)->TerminateGameConnection(arg2,arg3);
  
}


void _wrap_ISteamUser_TrackAppUsageEvent__SWIG_0_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, CGameID *_swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  CGameID arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  CGameID *argp2 ;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  argp2 = (CGameID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CGameID");
  }
  arg2 = (CGameID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  (arg1)->TrackAppUsageEvent(arg2,arg3,(char const *)arg4);
  
  free(arg4); 
}


void _wrap_ISteamUser_TrackAppUsageEvent__SWIG_1_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, CGameID *_swig_go_1, intgo _swig_go_2) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  CGameID arg2 ;
  int arg3 ;
  CGameID *argp2 ;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  argp2 = (CGameID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CGameID");
  }
  arg2 = (CGameID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  (arg1)->TrackAppUsageEvent(arg2,arg3);
  
}


bool _wrap_ISteamUser_GetUserDataFolder_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->GetUserDataFolder(arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_ISteamUser_StartVoiceRecording_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  (arg1)->StartVoiceRecording();
  
}


void _wrap_ISteamUser_StopVoiceRecording_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  (arg1)->StopVoiceRecording();
  
}


intgo _wrap_ISteamUser_GetAvailableVoice__SWIG_0_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  uint32 *arg2 = (uint32 *) 0 ;
  uint32 *arg3 = (uint32 *) 0 ;
  uint32 arg4 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = *(uint32 **)&_swig_go_1; 
  arg3 = *(uint32 **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (EVoiceResult)(arg1)->GetAvailableVoice(arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetAvailableVoice__SWIG_1_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  uint32 *arg2 = (uint32 *) 0 ;
  uint32 *arg3 = (uint32 *) 0 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = *(uint32 **)&_swig_go_1; 
  arg3 = *(uint32 **)&_swig_go_2; 
  
  result = (EVoiceResult)(arg1)->GetAvailableVoice(arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetAvailableVoice__SWIG_2_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, intgo *_swig_go_1) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  uint32 *arg2 = (uint32 *) 0 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = *(uint32 **)&_swig_go_1; 
  
  result = (EVoiceResult)(arg1)->GetAvailableVoice(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetVoice__SWIG_0_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, bool _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo *_swig_go_4, bool _swig_go_5, void *_swig_go_6, intgo _swig_go_7, intgo *_swig_go_8, intgo _swig_go_9) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  uint32 *arg5 = (uint32 *) 0 ;
  bool arg6 ;
  void *arg7 = (void *) 0 ;
  uint32 arg8 ;
  uint32 *arg9 = (uint32 *) 0 ;
  uint32 arg10 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = *(void **)&_swig_go_6; 
  arg8 = (uint32)_swig_go_7; 
  arg9 = *(uint32 **)&_swig_go_8; 
  arg10 = (uint32)_swig_go_9; 
  
  result = (EVoiceResult)(arg1)->GetVoice(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetVoice__SWIG_1_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, bool _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo *_swig_go_4, bool _swig_go_5, void *_swig_go_6, intgo _swig_go_7, intgo *_swig_go_8) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  uint32 *arg5 = (uint32 *) 0 ;
  bool arg6 ;
  void *arg7 = (void *) 0 ;
  uint32 arg8 ;
  uint32 *arg9 = (uint32 *) 0 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = *(void **)&_swig_go_6; 
  arg8 = (uint32)_swig_go_7; 
  arg9 = *(uint32 **)&_swig_go_8; 
  
  result = (EVoiceResult)(arg1)->GetVoice(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetVoice__SWIG_2_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, bool _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo *_swig_go_4, bool _swig_go_5, void *_swig_go_6, intgo _swig_go_7) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  uint32 *arg5 = (uint32 *) 0 ;
  bool arg6 ;
  void *arg7 = (void *) 0 ;
  uint32 arg8 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = *(void **)&_swig_go_6; 
  arg8 = (uint32)_swig_go_7; 
  
  result = (EVoiceResult)(arg1)->GetVoice(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetVoice__SWIG_3_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, bool _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo *_swig_go_4, bool _swig_go_5, void *_swig_go_6) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  uint32 *arg5 = (uint32 *) 0 ;
  bool arg6 ;
  void *arg7 = (void *) 0 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = *(void **)&_swig_go_6; 
  
  result = (EVoiceResult)(arg1)->GetVoice(arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetVoice__SWIG_4_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, bool _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo *_swig_go_4, bool _swig_go_5) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  uint32 *arg5 = (uint32 *) 0 ;
  bool arg6 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  result = (EVoiceResult)(arg1)->GetVoice(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetVoice__SWIG_5_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, bool _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo *_swig_go_4) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  uint32 *arg5 = (uint32 *) 0 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  
  result = (EVoiceResult)(arg1)->GetVoice(arg2,arg3,arg4,arg5);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_DecompressVoice_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, void *_swig_go_3, intgo _swig_go_4, intgo *_swig_go_5, intgo _swig_go_6) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32 arg3 ;
  void *arg4 = (void *) 0 ;
  uint32 arg5 ;
  uint32 *arg6 = (uint32 *) 0 ;
  uint32 arg7 ;
  EVoiceResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (uint32)_swig_go_4; 
  arg6 = *(uint32 **)&_swig_go_5; 
  arg7 = (uint32)_swig_go_6; 
  
  result = (EVoiceResult)(arg1)->DecompressVoice((void const *)arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetVoiceOptimalSampleRate_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetVoiceOptimalSampleRate();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetAuthSessionTicket_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, intgo *_swig_go_3) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  uint32 *arg4 = (uint32 *) 0 ;
  HAuthTicket result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  
  result = (HAuthTicket)(arg1)->GetAuthSessionTicket(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_BeginAuthSession_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, CSteamID *_swig_go_3) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  CSteamID arg4 ;
  CSteamID *argp4 ;
  EBeginAuthSessionResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (CSteamID *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg4 = (CSteamID)*argp4;
  
  
  result = (EBeginAuthSessionResult)(arg1)->BeginAuthSession((void const *)arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ISteamUser_EndAuthSession_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  (arg1)->EndAuthSession(arg2);
  
}


void _wrap_ISteamUser_CancelAuthTicket_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, intgo _swig_go_1) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  HAuthTicket arg2 ;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = (HAuthTicket)_swig_go_1; 
  
  (arg1)->CancelAuthTicket(arg2);
  
}


intgo _wrap_ISteamUser_UserHasLicenseForApp_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  CSteamID arg2 ;
  AppId_t arg3 ;
  CSteamID *argp2 ;
  EUserHasLicenseForAppResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (AppId_t)_swig_go_2; 
  
  result = (EUserHasLicenseForAppResult)(arg1)->UserHasLicenseForApp(arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_ISteamUser_BIsBehindNAT_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsBehindNAT();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamUser_AdvertiseGame_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2, short _swig_go_3) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  CSteamID arg2 ;
  uint32 arg3 ;
  uint16 arg4 ;
  CSteamID *argp2 ;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint16)_swig_go_3; 
  
  (arg1)->AdvertiseGame(arg2,arg3,arg4);
  
}


long long _wrap_ISteamUser_RequestEncryptedAppTicket_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, void *_swig_go_1, intgo _swig_go_2) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->RequestEncryptedAppTicket(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUser_GetEncryptedAppTicket_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, intgo *_swig_go_3) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  uint32 *arg4 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetEncryptedAppTicket(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetGameBadgeLevel_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  int arg2 ;
  bool arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (int)(arg1)->GetGameBadgeLevel(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUser_GetPlayerSteamLevel_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (int)(arg1)->GetPlayerSteamLevel();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUser_RequestStoreAuthURL_steam_fb253aa6b5654893(ISteamUser *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  char *arg2 = (char *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (SteamAPICall_t)(arg1)->RequestStoreAuthURL((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUser_BIsPhoneVerified_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsPhoneVerified();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUser_BIsTwoFactorEnabled_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsTwoFactorEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUser_BIsPhoneIdentifying_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsPhoneIdentifying();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUser_BIsPhoneRequiringVerification_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsPhoneRequiringVerification();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamUser_steam_fb253aa6b5654893(ISteamUser *_swig_go_0) {
  ISteamUser *arg1 = (ISteamUser *) 0 ;
  
  arg1 = *(ISteamUser **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamServersConnected_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamServersConnected_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


SteamServersConnected_t *_wrap_new_SteamServersConnected_t_steam_fb253aa6b5654893() {
  SteamServersConnected_t *result = 0 ;
  SteamServersConnected_t *_swig_go_result;
  
  
  result = (SteamServersConnected_t *)new SteamServersConnected_t();
  *(SteamServersConnected_t **)&_swig_go_result = (SteamServersConnected_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamServersConnected_t_steam_fb253aa6b5654893(SteamServersConnected_t *_swig_go_0) {
  SteamServersConnected_t *arg1 = (SteamServersConnected_t *) 0 ;
  
  arg1 = *(SteamServersConnected_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamServerConnectFailure_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamServerConnectFailure_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamServerConnectFailure_t_m_eResult_set_steam_fb253aa6b5654893(SteamServerConnectFailure_t *_swig_go_0, intgo _swig_go_1) {
  SteamServerConnectFailure_t *arg1 = (SteamServerConnectFailure_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SteamServerConnectFailure_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_SteamServerConnectFailure_t_m_eResult_get_steam_fb253aa6b5654893(SteamServerConnectFailure_t *_swig_go_0) {
  SteamServerConnectFailure_t *arg1 = (SteamServerConnectFailure_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SteamServerConnectFailure_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamServerConnectFailure_t_m_bStillRetrying_set_steam_fb253aa6b5654893(SteamServerConnectFailure_t *_swig_go_0, bool _swig_go_1) {
  SteamServerConnectFailure_t *arg1 = (SteamServerConnectFailure_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SteamServerConnectFailure_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bStillRetrying = arg2;
  
}


bool _wrap_SteamServerConnectFailure_t_m_bStillRetrying_get_steam_fb253aa6b5654893(SteamServerConnectFailure_t *_swig_go_0) {
  SteamServerConnectFailure_t *arg1 = (SteamServerConnectFailure_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SteamServerConnectFailure_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bStillRetrying);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamServerConnectFailure_t *_wrap_new_SteamServerConnectFailure_t_steam_fb253aa6b5654893() {
  SteamServerConnectFailure_t *result = 0 ;
  SteamServerConnectFailure_t *_swig_go_result;
  
  
  result = (SteamServerConnectFailure_t *)new SteamServerConnectFailure_t();
  *(SteamServerConnectFailure_t **)&_swig_go_result = (SteamServerConnectFailure_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamServerConnectFailure_t_steam_fb253aa6b5654893(SteamServerConnectFailure_t *_swig_go_0) {
  SteamServerConnectFailure_t *arg1 = (SteamServerConnectFailure_t *) 0 ;
  
  arg1 = *(SteamServerConnectFailure_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamServersDisconnected_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamServersDisconnected_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamServersDisconnected_t_m_eResult_set_steam_fb253aa6b5654893(SteamServersDisconnected_t *_swig_go_0, intgo _swig_go_1) {
  SteamServersDisconnected_t *arg1 = (SteamServersDisconnected_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SteamServersDisconnected_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_SteamServersDisconnected_t_m_eResult_get_steam_fb253aa6b5654893(SteamServersDisconnected_t *_swig_go_0) {
  SteamServersDisconnected_t *arg1 = (SteamServersDisconnected_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SteamServersDisconnected_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


SteamServersDisconnected_t *_wrap_new_SteamServersDisconnected_t_steam_fb253aa6b5654893() {
  SteamServersDisconnected_t *result = 0 ;
  SteamServersDisconnected_t *_swig_go_result;
  
  
  result = (SteamServersDisconnected_t *)new SteamServersDisconnected_t();
  *(SteamServersDisconnected_t **)&_swig_go_result = (SteamServersDisconnected_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamServersDisconnected_t_steam_fb253aa6b5654893(SteamServersDisconnected_t *_swig_go_0) {
  SteamServersDisconnected_t *arg1 = (SteamServersDisconnected_t *) 0 ;
  
  arg1 = *(SteamServersDisconnected_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_ClientGameServerDeny_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = ClientGameServerDeny_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ClientGameServerDeny_t_m_uAppID_set_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0, intgo _swig_go_1) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_uAppID = arg2;
  
}


intgo _wrap_ClientGameServerDeny_t_m_uAppID_get_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_uAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ClientGameServerDeny_t_m_unGameServerIP_set_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0, intgo _swig_go_1) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unGameServerIP = arg2;
  
}


intgo _wrap_ClientGameServerDeny_t_m_unGameServerIP_get_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unGameServerIP);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ClientGameServerDeny_t_m_usGameServerPort_set_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0, short _swig_go_1) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  if (arg1) (arg1)->m_usGameServerPort = arg2;
  
}


short _wrap_ClientGameServerDeny_t_m_usGameServerPort_get_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  
  result = (uint16) ((arg1)->m_usGameServerPort);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ClientGameServerDeny_t_m_bSecure_set_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0, short _swig_go_1) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  if (arg1) (arg1)->m_bSecure = arg2;
  
}


short _wrap_ClientGameServerDeny_t_m_bSecure_get_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  
  result = (uint16) ((arg1)->m_bSecure);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ClientGameServerDeny_t_m_uReason_set_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0, intgo _swig_go_1) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_uReason = arg2;
  
}


intgo _wrap_ClientGameServerDeny_t_m_uReason_get_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_uReason);
  _swig_go_result = result; 
  return _swig_go_result;
}


ClientGameServerDeny_t *_wrap_new_ClientGameServerDeny_t_steam_fb253aa6b5654893() {
  ClientGameServerDeny_t *result = 0 ;
  ClientGameServerDeny_t *_swig_go_result;
  
  
  result = (ClientGameServerDeny_t *)new ClientGameServerDeny_t();
  *(ClientGameServerDeny_t **)&_swig_go_result = (ClientGameServerDeny_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ClientGameServerDeny_t_steam_fb253aa6b5654893(ClientGameServerDeny_t *_swig_go_0) {
  ClientGameServerDeny_t *arg1 = (ClientGameServerDeny_t *) 0 ;
  
  arg1 = *(ClientGameServerDeny_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_IPCFailure_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = IPCFailure_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFailureFlushedCallbackQueue_IPCFailure_t_steam_fb253aa6b5654893() {
  IPCFailure_t::EFailureType result;
  intgo _swig_go_result;
  
  
  result = IPCFailure_t::k_EFailureFlushedCallbackQueue;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFailurePipeFail_IPCFailure_t_steam_fb253aa6b5654893() {
  IPCFailure_t::EFailureType result;
  intgo _swig_go_result;
  
  
  result = IPCFailure_t::k_EFailurePipeFail;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_IPCFailure_t_m_eFailureType_set_steam_fb253aa6b5654893(IPCFailure_t *_swig_go_0, char _swig_go_1) {
  IPCFailure_t *arg1 = (IPCFailure_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(IPCFailure_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_eFailureType = arg2;
  
}


char _wrap_IPCFailure_t_m_eFailureType_get_steam_fb253aa6b5654893(IPCFailure_t *_swig_go_0) {
  IPCFailure_t *arg1 = (IPCFailure_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(IPCFailure_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_eFailureType);
  _swig_go_result = result; 
  return _swig_go_result;
}


IPCFailure_t *_wrap_new_IPCFailure_t_steam_fb253aa6b5654893() {
  IPCFailure_t *result = 0 ;
  IPCFailure_t *_swig_go_result;
  
  
  result = (IPCFailure_t *)new IPCFailure_t();
  *(IPCFailure_t **)&_swig_go_result = (IPCFailure_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_IPCFailure_t_steam_fb253aa6b5654893(IPCFailure_t *_swig_go_0) {
  IPCFailure_t *arg1 = (IPCFailure_t *) 0 ;
  
  arg1 = *(IPCFailure_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LicensesUpdated_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LicensesUpdated_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


LicensesUpdated_t *_wrap_new_LicensesUpdated_t_steam_fb253aa6b5654893() {
  LicensesUpdated_t *result = 0 ;
  LicensesUpdated_t *_swig_go_result;
  
  
  result = (LicensesUpdated_t *)new LicensesUpdated_t();
  *(LicensesUpdated_t **)&_swig_go_result = (LicensesUpdated_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LicensesUpdated_t_steam_fb253aa6b5654893(LicensesUpdated_t *_swig_go_0) {
  LicensesUpdated_t *arg1 = (LicensesUpdated_t *) 0 ;
  
  arg1 = *(LicensesUpdated_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_ValidateAuthTicketResponse_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = ValidateAuthTicketResponse_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ValidateAuthTicketResponse_t_m_SteamID_set_steam_fb253aa6b5654893(ValidateAuthTicketResponse_t *_swig_go_0, CSteamID *_swig_go_1) {
  ValidateAuthTicketResponse_t *arg1 = (ValidateAuthTicketResponse_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(ValidateAuthTicketResponse_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_SteamID = *arg2;
  
}


CSteamID *_wrap_ValidateAuthTicketResponse_t_m_SteamID_get_steam_fb253aa6b5654893(ValidateAuthTicketResponse_t *_swig_go_0) {
  ValidateAuthTicketResponse_t *arg1 = (ValidateAuthTicketResponse_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(ValidateAuthTicketResponse_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_SteamID);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_ValidateAuthTicketResponse_t_m_eAuthSessionResponse_set_steam_fb253aa6b5654893(ValidateAuthTicketResponse_t *_swig_go_0, intgo _swig_go_1) {
  ValidateAuthTicketResponse_t *arg1 = (ValidateAuthTicketResponse_t *) 0 ;
  EAuthSessionResponse arg2 ;
  
  arg1 = *(ValidateAuthTicketResponse_t **)&_swig_go_0; 
  arg2 = (EAuthSessionResponse)_swig_go_1; 
  
  if (arg1) (arg1)->m_eAuthSessionResponse = arg2;
  
}


intgo _wrap_ValidateAuthTicketResponse_t_m_eAuthSessionResponse_get_steam_fb253aa6b5654893(ValidateAuthTicketResponse_t *_swig_go_0) {
  ValidateAuthTicketResponse_t *arg1 = (ValidateAuthTicketResponse_t *) 0 ;
  EAuthSessionResponse result;
  intgo _swig_go_result;
  
  arg1 = *(ValidateAuthTicketResponse_t **)&_swig_go_0; 
  
  result = (EAuthSessionResponse) ((arg1)->m_eAuthSessionResponse);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ValidateAuthTicketResponse_t_m_OwnerSteamID_set_steam_fb253aa6b5654893(ValidateAuthTicketResponse_t *_swig_go_0, CSteamID *_swig_go_1) {
  ValidateAuthTicketResponse_t *arg1 = (ValidateAuthTicketResponse_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(ValidateAuthTicketResponse_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_OwnerSteamID = *arg2;
  
}


CSteamID *_wrap_ValidateAuthTicketResponse_t_m_OwnerSteamID_get_steam_fb253aa6b5654893(ValidateAuthTicketResponse_t *_swig_go_0) {
  ValidateAuthTicketResponse_t *arg1 = (ValidateAuthTicketResponse_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(ValidateAuthTicketResponse_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_OwnerSteamID);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


ValidateAuthTicketResponse_t *_wrap_new_ValidateAuthTicketResponse_t_steam_fb253aa6b5654893() {
  ValidateAuthTicketResponse_t *result = 0 ;
  ValidateAuthTicketResponse_t *_swig_go_result;
  
  
  result = (ValidateAuthTicketResponse_t *)new ValidateAuthTicketResponse_t();
  *(ValidateAuthTicketResponse_t **)&_swig_go_result = (ValidateAuthTicketResponse_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ValidateAuthTicketResponse_t_steam_fb253aa6b5654893(ValidateAuthTicketResponse_t *_swig_go_0) {
  ValidateAuthTicketResponse_t *arg1 = (ValidateAuthTicketResponse_t *) 0 ;
  
  arg1 = *(ValidateAuthTicketResponse_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MicroTxnAuthorizationResponse_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MicroTxnAuthorizationResponse_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_MicroTxnAuthorizationResponse_t_m_unAppID_set_steam_fb253aa6b5654893(MicroTxnAuthorizationResponse_t *_swig_go_0, intgo _swig_go_1) {
  MicroTxnAuthorizationResponse_t *arg1 = (MicroTxnAuthorizationResponse_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(MicroTxnAuthorizationResponse_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unAppID = arg2;
  
}


intgo _wrap_MicroTxnAuthorizationResponse_t_m_unAppID_get_steam_fb253aa6b5654893(MicroTxnAuthorizationResponse_t *_swig_go_0) {
  MicroTxnAuthorizationResponse_t *arg1 = (MicroTxnAuthorizationResponse_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(MicroTxnAuthorizationResponse_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_MicroTxnAuthorizationResponse_t_m_ulOrderID_set_steam_fb253aa6b5654893(MicroTxnAuthorizationResponse_t *_swig_go_0, long long _swig_go_1) {
  MicroTxnAuthorizationResponse_t *arg1 = (MicroTxnAuthorizationResponse_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(MicroTxnAuthorizationResponse_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulOrderID = arg2;
  
}


long long _wrap_MicroTxnAuthorizationResponse_t_m_ulOrderID_get_steam_fb253aa6b5654893(MicroTxnAuthorizationResponse_t *_swig_go_0) {
  MicroTxnAuthorizationResponse_t *arg1 = (MicroTxnAuthorizationResponse_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(MicroTxnAuthorizationResponse_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulOrderID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_MicroTxnAuthorizationResponse_t_m_bAuthorized_set_steam_fb253aa6b5654893(MicroTxnAuthorizationResponse_t *_swig_go_0, char _swig_go_1) {
  MicroTxnAuthorizationResponse_t *arg1 = (MicroTxnAuthorizationResponse_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(MicroTxnAuthorizationResponse_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bAuthorized = arg2;
  
}


char _wrap_MicroTxnAuthorizationResponse_t_m_bAuthorized_get_steam_fb253aa6b5654893(MicroTxnAuthorizationResponse_t *_swig_go_0) {
  MicroTxnAuthorizationResponse_t *arg1 = (MicroTxnAuthorizationResponse_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(MicroTxnAuthorizationResponse_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bAuthorized);
  _swig_go_result = result; 
  return _swig_go_result;
}


MicroTxnAuthorizationResponse_t *_wrap_new_MicroTxnAuthorizationResponse_t_steam_fb253aa6b5654893() {
  MicroTxnAuthorizationResponse_t *result = 0 ;
  MicroTxnAuthorizationResponse_t *_swig_go_result;
  
  
  result = (MicroTxnAuthorizationResponse_t *)new MicroTxnAuthorizationResponse_t();
  *(MicroTxnAuthorizationResponse_t **)&_swig_go_result = (MicroTxnAuthorizationResponse_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MicroTxnAuthorizationResponse_t_steam_fb253aa6b5654893(MicroTxnAuthorizationResponse_t *_swig_go_0) {
  MicroTxnAuthorizationResponse_t *arg1 = (MicroTxnAuthorizationResponse_t *) 0 ;
  
  arg1 = *(MicroTxnAuthorizationResponse_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_EncryptedAppTicketResponse_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = EncryptedAppTicketResponse_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_EncryptedAppTicketResponse_t_m_eResult_set_steam_fb253aa6b5654893(EncryptedAppTicketResponse_t *_swig_go_0, intgo _swig_go_1) {
  EncryptedAppTicketResponse_t *arg1 = (EncryptedAppTicketResponse_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(EncryptedAppTicketResponse_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_EncryptedAppTicketResponse_t_m_eResult_get_steam_fb253aa6b5654893(EncryptedAppTicketResponse_t *_swig_go_0) {
  EncryptedAppTicketResponse_t *arg1 = (EncryptedAppTicketResponse_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(EncryptedAppTicketResponse_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


EncryptedAppTicketResponse_t *_wrap_new_EncryptedAppTicketResponse_t_steam_fb253aa6b5654893() {
  EncryptedAppTicketResponse_t *result = 0 ;
  EncryptedAppTicketResponse_t *_swig_go_result;
  
  
  result = (EncryptedAppTicketResponse_t *)new EncryptedAppTicketResponse_t();
  *(EncryptedAppTicketResponse_t **)&_swig_go_result = (EncryptedAppTicketResponse_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_EncryptedAppTicketResponse_t_steam_fb253aa6b5654893(EncryptedAppTicketResponse_t *_swig_go_0) {
  EncryptedAppTicketResponse_t *arg1 = (EncryptedAppTicketResponse_t *) 0 ;
  
  arg1 = *(EncryptedAppTicketResponse_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GetAuthSessionTicketResponse_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GetAuthSessionTicketResponse_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GetAuthSessionTicketResponse_t_m_hAuthTicket_set_steam_fb253aa6b5654893(GetAuthSessionTicketResponse_t *_swig_go_0, intgo _swig_go_1) {
  GetAuthSessionTicketResponse_t *arg1 = (GetAuthSessionTicketResponse_t *) 0 ;
  HAuthTicket arg2 ;
  
  arg1 = *(GetAuthSessionTicketResponse_t **)&_swig_go_0; 
  arg2 = (HAuthTicket)_swig_go_1; 
  
  if (arg1) (arg1)->m_hAuthTicket = arg2;
  
}


intgo _wrap_GetAuthSessionTicketResponse_t_m_hAuthTicket_get_steam_fb253aa6b5654893(GetAuthSessionTicketResponse_t *_swig_go_0) {
  GetAuthSessionTicketResponse_t *arg1 = (GetAuthSessionTicketResponse_t *) 0 ;
  HAuthTicket result;
  intgo _swig_go_result;
  
  arg1 = *(GetAuthSessionTicketResponse_t **)&_swig_go_0; 
  
  result = (HAuthTicket) ((arg1)->m_hAuthTicket);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GetAuthSessionTicketResponse_t_m_eResult_set_steam_fb253aa6b5654893(GetAuthSessionTicketResponse_t *_swig_go_0, intgo _swig_go_1) {
  GetAuthSessionTicketResponse_t *arg1 = (GetAuthSessionTicketResponse_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(GetAuthSessionTicketResponse_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_GetAuthSessionTicketResponse_t_m_eResult_get_steam_fb253aa6b5654893(GetAuthSessionTicketResponse_t *_swig_go_0) {
  GetAuthSessionTicketResponse_t *arg1 = (GetAuthSessionTicketResponse_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(GetAuthSessionTicketResponse_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


GetAuthSessionTicketResponse_t *_wrap_new_GetAuthSessionTicketResponse_t_steam_fb253aa6b5654893() {
  GetAuthSessionTicketResponse_t *result = 0 ;
  GetAuthSessionTicketResponse_t *_swig_go_result;
  
  
  result = (GetAuthSessionTicketResponse_t *)new GetAuthSessionTicketResponse_t();
  *(GetAuthSessionTicketResponse_t **)&_swig_go_result = (GetAuthSessionTicketResponse_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GetAuthSessionTicketResponse_t_steam_fb253aa6b5654893(GetAuthSessionTicketResponse_t *_swig_go_0) {
  GetAuthSessionTicketResponse_t *arg1 = (GetAuthSessionTicketResponse_t *) 0 ;
  
  arg1 = *(GetAuthSessionTicketResponse_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GameWebCallback_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GameWebCallback_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GameWebCallback_t_m_szURL_set_steam_fb253aa6b5654893(GameWebCallback_t *_swig_go_0, _gostring_ _swig_go_1) {
  GameWebCallback_t *arg1 = (GameWebCallback_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(GameWebCallback_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_szURL, (const char *)arg2, 256-1);
      arg1->m_szURL[256-1] = 0;
    } else {
      arg1->m_szURL[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_GameWebCallback_t_m_szURL_get_steam_fb253aa6b5654893(GameWebCallback_t *_swig_go_0) {
  GameWebCallback_t *arg1 = (GameWebCallback_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(GameWebCallback_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_szURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


GameWebCallback_t *_wrap_new_GameWebCallback_t_steam_fb253aa6b5654893() {
  GameWebCallback_t *result = 0 ;
  GameWebCallback_t *_swig_go_result;
  
  
  result = (GameWebCallback_t *)new GameWebCallback_t();
  *(GameWebCallback_t **)&_swig_go_result = (GameWebCallback_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GameWebCallback_t_steam_fb253aa6b5654893(GameWebCallback_t *_swig_go_0) {
  GameWebCallback_t *arg1 = (GameWebCallback_t *) 0 ;
  
  arg1 = *(GameWebCallback_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_StoreAuthURLResponse_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = StoreAuthURLResponse_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_StoreAuthURLResponse_t_m_szURL_set_steam_fb253aa6b5654893(StoreAuthURLResponse_t *_swig_go_0, _gostring_ _swig_go_1) {
  StoreAuthURLResponse_t *arg1 = (StoreAuthURLResponse_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(StoreAuthURLResponse_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_szURL, (const char *)arg2, 512-1);
      arg1->m_szURL[512-1] = 0;
    } else {
      arg1->m_szURL[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_StoreAuthURLResponse_t_m_szURL_get_steam_fb253aa6b5654893(StoreAuthURLResponse_t *_swig_go_0) {
  StoreAuthURLResponse_t *arg1 = (StoreAuthURLResponse_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(StoreAuthURLResponse_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_szURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


StoreAuthURLResponse_t *_wrap_new_StoreAuthURLResponse_t_steam_fb253aa6b5654893() {
  StoreAuthURLResponse_t *result = 0 ;
  StoreAuthURLResponse_t *_swig_go_result;
  
  
  result = (StoreAuthURLResponse_t *)new StoreAuthURLResponse_t();
  *(StoreAuthURLResponse_t **)&_swig_go_result = (StoreAuthURLResponse_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_StoreAuthURLResponse_t_steam_fb253aa6b5654893(StoreAuthURLResponse_t *_swig_go_0) {
  StoreAuthURLResponse_t *arg1 = (StoreAuthURLResponse_t *) 0 ;
  
  arg1 = *(StoreAuthURLResponse_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_EFriendRelationshipNone_steam_fb253aa6b5654893() {
  EFriendRelationship result;
  intgo _swig_go_result;
  
  
  result = k_EFriendRelationshipNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendRelationshipBlocked_steam_fb253aa6b5654893() {
  EFriendRelationship result;
  intgo _swig_go_result;
  
  
  result = k_EFriendRelationshipBlocked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendRelationshipRequestRecipient_steam_fb253aa6b5654893() {
  EFriendRelationship result;
  intgo _swig_go_result;
  
  
  result = k_EFriendRelationshipRequestRecipient;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendRelationshipFriend_steam_fb253aa6b5654893() {
  EFriendRelationship result;
  intgo _swig_go_result;
  
  
  result = k_EFriendRelationshipFriend;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendRelationshipRequestInitiator_steam_fb253aa6b5654893() {
  EFriendRelationship result;
  intgo _swig_go_result;
  
  
  result = k_EFriendRelationshipRequestInitiator;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendRelationshipIgnored_steam_fb253aa6b5654893() {
  EFriendRelationship result;
  intgo _swig_go_result;
  
  
  result = k_EFriendRelationshipIgnored;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendRelationshipIgnoredFriend_steam_fb253aa6b5654893() {
  EFriendRelationship result;
  intgo _swig_go_result;
  
  
  result = k_EFriendRelationshipIgnoredFriend;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendRelationshipSuggested_DEPRECATED_steam_fb253aa6b5654893() {
  EFriendRelationship result;
  intgo _swig_go_result;
  
  
  result = k_EFriendRelationshipSuggested_DEPRECATED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendRelationshipMax_steam_fb253aa6b5654893() {
  EFriendRelationship result;
  intgo _swig_go_result;
  
  
  result = k_EFriendRelationshipMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_cchMaxFriendsGroupName_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cchMaxFriendsGroupName;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cFriendsGroupLimit_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cFriendsGroupLimit;
  _swig_go_result = result; 
  return _swig_go_result;
}


short _wrap_k_FriendsGroupID_Invalid_get_steam_fb253aa6b5654893() {
  FriendsGroupID_t result;
  short _swig_go_result;
  
  
  result = (FriendsGroupID_t)(FriendsGroupID_t)k_FriendsGroupID_Invalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cEnumerateFollowersMax_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cEnumerateFollowersMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaStateOffline_steam_fb253aa6b5654893() {
  EPersonaState result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaStateOffline;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaStateOnline_steam_fb253aa6b5654893() {
  EPersonaState result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaStateOnline;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaStateBusy_steam_fb253aa6b5654893() {
  EPersonaState result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaStateBusy;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaStateAway_steam_fb253aa6b5654893() {
  EPersonaState result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaStateAway;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaStateSnooze_steam_fb253aa6b5654893() {
  EPersonaState result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaStateSnooze;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaStateLookingToTrade_steam_fb253aa6b5654893() {
  EPersonaState result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaStateLookingToTrade;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaStateLookingToPlay_steam_fb253aa6b5654893() {
  EPersonaState result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaStateLookingToPlay;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaStateMax_steam_fb253aa6b5654893() {
  EPersonaState result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaStateMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagNone_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagBlocked_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagBlocked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagFriendshipRequested_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagFriendshipRequested;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagImmediate_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagImmediate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagClanMember_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagClanMember;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagOnGameServer_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagOnGameServer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagRequestingFriendship_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagRequestingFriendship;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagRequestingInfo_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagRequestingInfo;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagIgnored_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagIgnored;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagIgnoredFriend_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagIgnoredFriend;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagChatMember_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagChatMember;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFriendFlagAll_steam_fb253aa6b5654893() {
  EFriendFlags result;
  intgo _swig_go_result;
  
  
  result = k_EFriendFlagAll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FriendGameInfo_t_m_gameID_set_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0, CGameID *_swig_go_1) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  CGameID *arg2 = (CGameID *) 0 ;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  arg2 = *(CGameID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_gameID = *arg2;
  
}


CGameID *_wrap_FriendGameInfo_t_m_gameID_get_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  CGameID *result = 0 ;
  CGameID *_swig_go_result;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  
  result = (CGameID *)& ((arg1)->m_gameID);
  *(CGameID **)&_swig_go_result = (CGameID *)result; 
  return _swig_go_result;
}


void _wrap_FriendGameInfo_t_m_unGameIP_set_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0, intgo _swig_go_1) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unGameIP = arg2;
  
}


intgo _wrap_FriendGameInfo_t_m_unGameIP_get_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unGameIP);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FriendGameInfo_t_m_usGamePort_set_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0, short _swig_go_1) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  if (arg1) (arg1)->m_usGamePort = arg2;
  
}


short _wrap_FriendGameInfo_t_m_usGamePort_get_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  
  result = (uint16) ((arg1)->m_usGamePort);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FriendGameInfo_t_m_usQueryPort_set_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0, short _swig_go_1) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  if (arg1) (arg1)->m_usQueryPort = arg2;
  
}


short _wrap_FriendGameInfo_t_m_usQueryPort_get_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  
  result = (uint16) ((arg1)->m_usQueryPort);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FriendGameInfo_t_m_steamIDLobby_set_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0, CSteamID *_swig_go_1) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDLobby = *arg2;
  
}


CSteamID *_wrap_FriendGameInfo_t_m_steamIDLobby_get_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDLobby);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


FriendGameInfo_t *_wrap_new_FriendGameInfo_t_steam_fb253aa6b5654893() {
  FriendGameInfo_t *result = 0 ;
  FriendGameInfo_t *_swig_go_result;
  
  
  result = (FriendGameInfo_t *)new FriendGameInfo_t();
  *(FriendGameInfo_t **)&_swig_go_result = (FriendGameInfo_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_FriendGameInfo_t_steam_fb253aa6b5654893(FriendGameInfo_t *_swig_go_0) {
  FriendGameInfo_t *arg1 = (FriendGameInfo_t *) 0 ;
  
  arg1 = *(FriendGameInfo_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_cchPersonaNameMax_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_cchPersonaNameMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_cwchPersonaNameMax_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_cwchPersonaNameMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_nUserRestrictionNone_steam_fb253aa6b5654893() {
  EUserRestriction result;
  intgo _swig_go_result;
  
  
  result = k_nUserRestrictionNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_nUserRestrictionUnknown_steam_fb253aa6b5654893() {
  EUserRestriction result;
  intgo _swig_go_result;
  
  
  result = k_nUserRestrictionUnknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_nUserRestrictionAnyChat_steam_fb253aa6b5654893() {
  EUserRestriction result;
  intgo _swig_go_result;
  
  
  result = k_nUserRestrictionAnyChat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_nUserRestrictionVoiceChat_steam_fb253aa6b5654893() {
  EUserRestriction result;
  intgo _swig_go_result;
  
  
  result = k_nUserRestrictionVoiceChat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_nUserRestrictionGroupChat_steam_fb253aa6b5654893() {
  EUserRestriction result;
  intgo _swig_go_result;
  
  
  result = k_nUserRestrictionGroupChat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_nUserRestrictionRating_steam_fb253aa6b5654893() {
  EUserRestriction result;
  intgo _swig_go_result;
  
  
  result = k_nUserRestrictionRating;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_nUserRestrictionGameInvites_steam_fb253aa6b5654893() {
  EUserRestriction result;
  intgo _swig_go_result;
  
  
  result = k_nUserRestrictionGameInvites;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_nUserRestrictionTrading_steam_fb253aa6b5654893() {
  EUserRestriction result;
  intgo _swig_go_result;
  
  
  result = k_nUserRestrictionTrading;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FriendSessionStateInfo_t_m_uiOnlineSessionInstances_set_steam_fb253aa6b5654893(FriendSessionStateInfo_t *_swig_go_0, intgo _swig_go_1) {
  FriendSessionStateInfo_t *arg1 = (FriendSessionStateInfo_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(FriendSessionStateInfo_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_uiOnlineSessionInstances = arg2;
  
}


intgo _wrap_FriendSessionStateInfo_t_m_uiOnlineSessionInstances_get_steam_fb253aa6b5654893(FriendSessionStateInfo_t *_swig_go_0) {
  FriendSessionStateInfo_t *arg1 = (FriendSessionStateInfo_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(FriendSessionStateInfo_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_uiOnlineSessionInstances);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FriendSessionStateInfo_t_m_uiPublishedToFriendsSessionInstance_set_steam_fb253aa6b5654893(FriendSessionStateInfo_t *_swig_go_0, char _swig_go_1) {
  FriendSessionStateInfo_t *arg1 = (FriendSessionStateInfo_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(FriendSessionStateInfo_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_uiPublishedToFriendsSessionInstance = arg2;
  
}


char _wrap_FriendSessionStateInfo_t_m_uiPublishedToFriendsSessionInstance_get_steam_fb253aa6b5654893(FriendSessionStateInfo_t *_swig_go_0) {
  FriendSessionStateInfo_t *arg1 = (FriendSessionStateInfo_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(FriendSessionStateInfo_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_uiPublishedToFriendsSessionInstance);
  _swig_go_result = result; 
  return _swig_go_result;
}


FriendSessionStateInfo_t *_wrap_new_FriendSessionStateInfo_t_steam_fb253aa6b5654893() {
  FriendSessionStateInfo_t *result = 0 ;
  FriendSessionStateInfo_t *_swig_go_result;
  
  
  result = (FriendSessionStateInfo_t *)new FriendSessionStateInfo_t();
  *(FriendSessionStateInfo_t **)&_swig_go_result = (FriendSessionStateInfo_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_FriendSessionStateInfo_t_steam_fb253aa6b5654893(FriendSessionStateInfo_t *_swig_go_0) {
  FriendSessionStateInfo_t *arg1 = (FriendSessionStateInfo_t *) 0 ;
  
  arg1 = *(FriendSessionStateInfo_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_cubChatMetadataMax_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_cubChatMetadataMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cchMaxRichPresenceKeys_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_cchMaxRichPresenceKeys;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_cchMaxRichPresenceKeyLength_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_cchMaxRichPresenceKeyLength;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_cchMaxRichPresenceValueLength_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_cchMaxRichPresenceValueLength;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EOverlayToStoreFlag_None_steam_fb253aa6b5654893() {
  EOverlayToStoreFlag result;
  intgo _swig_go_result;
  
  
  result = k_EOverlayToStoreFlag_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EOverlayToStoreFlag_AddToCart_steam_fb253aa6b5654893() {
  EOverlayToStoreFlag result;
  intgo _swig_go_result;
  
  
  result = k_EOverlayToStoreFlag_AddToCart;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EOverlayToStoreFlag_AddToCartAndShow_steam_fb253aa6b5654893() {
  EOverlayToStoreFlag result;
  intgo _swig_go_result;
  
  
  result = k_EOverlayToStoreFlag_AddToCartAndShow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamFriends_GetPersonaName_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  result = (char *)(arg1)->GetPersonaName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


long long _wrap_ISteamFriends_SetPersonaName_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  char *arg2 = (char *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (SteamAPICall_t)(arg1)->SetPersonaName((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetPersonaState_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  EPersonaState result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  result = (EPersonaState)(arg1)->GetPersonaState();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendCount_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, intgo _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)(arg1)->GetFriendCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamFriends_GetFriendByIndex_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  int arg2 ;
  int arg3 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (arg1)->GetFriendByIndex(arg2,arg3);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendRelationship_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  EFriendRelationship result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (EFriendRelationship)(arg1)->GetFriendRelationship(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendPersonaState_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  EPersonaState result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (EPersonaState)(arg1)->GetFriendPersonaState(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamFriends_GetFriendPersonaName_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (char *)(arg1)->GetFriendPersonaName(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_GetFriendGamePlayed_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, FriendGameInfo_t *_swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  FriendGameInfo_t *arg3 = (FriendGameInfo_t *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = *(FriendGameInfo_t **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetFriendGamePlayed(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamFriends_GetFriendPersonaNameHistory_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *argp2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = (char *)(arg1)->GetFriendPersonaNameHistory(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendSteamLevel_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetFriendSteamLevel(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamFriends_GetPlayerNickname_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (char *)(arg1)->GetPlayerNickname(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendsGroupCount_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  result = (int)(arg1)->GetFriendsGroupCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


short _wrap_ISteamFriends_GetFriendsGroupIDByIndex_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, intgo _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  int arg2 ;
  FriendsGroupID_t result;
  short _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (FriendsGroupID_t)(arg1)->GetFriendsGroupIDByIndex(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamFriends_GetFriendsGroupName_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, short _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  FriendsGroupID_t arg2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (FriendsGroupID_t)_swig_go_1; 
  
  result = (char *)(arg1)->GetFriendsGroupName(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendsGroupMembersCount_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, short _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  FriendsGroupID_t arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (FriendsGroupID_t)_swig_go_1; 
  
  result = (int)(arg1)->GetFriendsGroupMembersCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamFriends_GetFriendsGroupMembersList_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, short _swig_go_1, CSteamID *_swig_go_2, intgo _swig_go_3) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  FriendsGroupID_t arg2 ;
  CSteamID *arg3 = (CSteamID *) 0 ;
  int arg4 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (FriendsGroupID_t)_swig_go_1; 
  arg3 = *(CSteamID **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->GetFriendsGroupMembersList(arg2,arg3,arg4);
  
}


bool _wrap_ISteamFriends_HasFriend_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->HasFriend(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetClanCount_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  result = (int)(arg1)->GetClanCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamFriends_GetClanByIndex_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, intgo _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  int arg2 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (arg1)->GetClanByIndex(arg2);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamFriends_GetClanName_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (char *)(arg1)->GetClanName(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamFriends_GetClanTag_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (char *)(arg1)->GetClanTag(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_GetClanActivityCounts_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3, intgo *_swig_go_4) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  
  result = (bool)(arg1)->GetClanActivityCounts(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamFriends_DownloadClanActivityCounts_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  int arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->DownloadClanActivityCounts(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendCountFromSource_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetFriendCountFromSource(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamFriends_GetFriendFromSourceByIndex_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *argp2 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = (arg1)->GetFriendFromSourceByIndex(arg2,arg3);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_IsUserInSource_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, CSteamID *_swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID arg3 ;
  CSteamID *argp2 ;
  CSteamID *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  
  result = (bool)(arg1)->IsUserInSource(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamFriends_SetInGameVoiceSpeaking_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, bool _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  bool arg3 ;
  CSteamID *argp2 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->SetInGameVoiceSpeaking(arg2,arg3);
  
}


void _wrap_ISteamFriends_ActivateGameOverlay_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->ActivateGameOverlay((char const *)arg2);
  
  free(arg2); 
}


void _wrap_ISteamFriends_ActivateGameOverlayToUser_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, _gostring_ _swig_go_1, CSteamID *_swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  char *arg2 = (char *) 0 ;
  CSteamID arg3 ;
  CSteamID *argp3 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  
  (arg1)->ActivateGameOverlayToUser((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_ISteamFriends_ActivateGameOverlayToWebPage_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->ActivateGameOverlayToWebPage((char const *)arg2);
  
  free(arg2); 
}


void _wrap_ISteamFriends_ActivateGameOverlayToStore_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  AppId_t arg2 ;
  EOverlayToStoreFlag arg3 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = (EOverlayToStoreFlag)_swig_go_2; 
  
  (arg1)->ActivateGameOverlayToStore(arg2,arg3);
  
}


void _wrap_ISteamFriends_SetPlayedWith_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  (arg1)->SetPlayedWith(arg2);
  
}


void _wrap_ISteamFriends_ActivateGameOverlayInviteDialog_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  (arg1)->ActivateGameOverlayInviteDialog(arg2);
  
}


intgo _wrap_ISteamFriends_GetSmallFriendAvatar_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetSmallFriendAvatar(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetMediumFriendAvatar_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetMediumFriendAvatar(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetLargeFriendAvatar_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetLargeFriendAvatar(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_RequestUserInformation_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, bool _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  bool arg3 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->RequestUserInformation(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamFriends_RequestClanOfficerList_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (SteamAPICall_t)(arg1)->RequestClanOfficerList(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamFriends_GetClanOwner_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (arg1)->GetClanOwner(arg2);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetClanOfficerCount_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetClanOfficerCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamFriends_GetClanOfficerByIndex_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *argp2 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = (arg1)->GetClanOfficerByIndex(arg2,arg3);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetUserRestrictions_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetUserRestrictions();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_SetRichPresence_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetRichPresence((char const *)arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


void _wrap_ISteamFriends_ClearRichPresence_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  (arg1)->ClearRichPresence();
  
}


_gostring_ _wrap_ISteamFriends_GetFriendRichPresence_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  CSteamID *argp2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (char *)(arg1)->GetFriendRichPresence(arg2,(char const *)arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendRichPresenceKeyCount_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetFriendRichPresenceKeyCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamFriends_GetFriendRichPresenceKeyByIndex_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *argp2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = (char *)(arg1)->GetFriendRichPresenceKeyByIndex(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ISteamFriends_RequestFriendRichPresence_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  (arg1)->RequestFriendRichPresence(arg2);
  
}


bool _wrap_ISteamFriends_InviteUserToGame_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->InviteUserToGame(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetCoplayFriendCount_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  result = (int)(arg1)->GetCoplayFriendCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamFriends_GetCoplayFriend_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, intgo _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  int arg2 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (arg1)->GetCoplayFriend(arg2);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendCoplayTime_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetFriendCoplayTime(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendCoplayGame_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (AppId_t)(arg1)->GetFriendCoplayGame(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamFriends_JoinClanChatRoom_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (SteamAPICall_t)(arg1)->JoinClanChatRoom(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_LeaveClanChatRoom_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (bool)(arg1)->LeaveClanChatRoom(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetClanChatMemberCount_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetClanChatMemberCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamFriends_GetChatMemberByIndex_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *argp2 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = (arg1)->GetChatMemberByIndex(arg2,arg3);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_SendClanChatMessage_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SendClanChatMessage(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetClanChatMessage_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2, void *_swig_go_3, intgo _swig_go_4, EChatEntryType *_swig_go_5, CSteamID *_swig_go_6) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  EChatEntryType *arg6 = (EChatEntryType *) 0 ;
  CSteamID *arg7 = (CSteamID *) 0 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(EChatEntryType **)&_swig_go_5; 
  arg7 = *(CSteamID **)&_swig_go_6; 
  
  result = (int)(arg1)->GetClanChatMessage(arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_IsClanChatAdmin_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, CSteamID *_swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID arg3 ;
  CSteamID *argp2 ;
  CSteamID *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  
  result = (bool)(arg1)->IsClanChatAdmin(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_IsClanChatWindowOpenInSteam_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (bool)(arg1)->IsClanChatWindowOpenInSteam(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_OpenClanChatWindowInSteam_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (bool)(arg1)->OpenClanChatWindowInSteam(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_CloseClanChatWindowInSteam_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (bool)(arg1)->CloseClanChatWindowInSteam(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_SetListenForFriendsMessages_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, bool _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->SetListenForFriendsMessages(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_ReplyToFriendMessage_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->ReplyToFriendMessage(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_ISteamFriends_GetFriendMessage_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2, void *_swig_go_3, intgo _swig_go_4, EChatEntryType *_swig_go_5) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  EChatEntryType *arg6 = (EChatEntryType *) 0 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(EChatEntryType **)&_swig_go_5; 
  
  result = (int)(arg1)->GetFriendMessage(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamFriends_GetFollowerCount_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (SteamAPICall_t)(arg1)->GetFollowerCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamFriends_IsFollowing_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (SteamAPICall_t)(arg1)->IsFollowing(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamFriends_EnumerateFollowingList_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, intgo _swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  uint32 arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->EnumerateFollowingList(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_IsClanPublic_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (bool)(arg1)->IsClanPublic(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamFriends_IsClanOfficialGameGroup_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (bool)(arg1)->IsClanOfficialGameGroup(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamFriends_steam_fb253aa6b5654893(ISteamFriends *_swig_go_0) {
  ISteamFriends *arg1 = (ISteamFriends *) 0 ;
  
  arg1 = *(ISteamFriends **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_PersonaStateChange_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = PersonaStateChange_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_PersonaStateChange_t_m_ulSteamID_set_steam_fb253aa6b5654893(PersonaStateChange_t *_swig_go_0, long long _swig_go_1) {
  PersonaStateChange_t *arg1 = (PersonaStateChange_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(PersonaStateChange_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamID = arg2;
  
}


long long _wrap_PersonaStateChange_t_m_ulSteamID_get_steam_fb253aa6b5654893(PersonaStateChange_t *_swig_go_0) {
  PersonaStateChange_t *arg1 = (PersonaStateChange_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PersonaStateChange_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_PersonaStateChange_t_m_nChangeFlags_set_steam_fb253aa6b5654893(PersonaStateChange_t *_swig_go_0, intgo _swig_go_1) {
  PersonaStateChange_t *arg1 = (PersonaStateChange_t *) 0 ;
  int arg2 ;
  
  arg1 = *(PersonaStateChange_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nChangeFlags = arg2;
  
}


intgo _wrap_PersonaStateChange_t_m_nChangeFlags_get_steam_fb253aa6b5654893(PersonaStateChange_t *_swig_go_0) {
  PersonaStateChange_t *arg1 = (PersonaStateChange_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(PersonaStateChange_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nChangeFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


PersonaStateChange_t *_wrap_new_PersonaStateChange_t_steam_fb253aa6b5654893() {
  PersonaStateChange_t *result = 0 ;
  PersonaStateChange_t *_swig_go_result;
  
  
  result = (PersonaStateChange_t *)new PersonaStateChange_t();
  *(PersonaStateChange_t **)&_swig_go_result = (PersonaStateChange_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_PersonaStateChange_t_steam_fb253aa6b5654893(PersonaStateChange_t *_swig_go_0) {
  PersonaStateChange_t *arg1 = (PersonaStateChange_t *) 0 ;
  
  arg1 = *(PersonaStateChange_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_EPersonaChangeName_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeName;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeStatus_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeStatus;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeComeOnline_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeComeOnline;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeGoneOffline_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeGoneOffline;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeGamePlayed_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeGamePlayed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeGameServer_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeGameServer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeAvatar_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeAvatar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeJoinedSource_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeJoinedSource;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeLeftSource_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeLeftSource;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeRelationshipChanged_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeRelationshipChanged;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeNameFirstSet_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeNameFirstSet;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeFacebookInfo_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeFacebookInfo;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeNickname_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeNickname;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EPersonaChangeSteamLevel_steam_fb253aa6b5654893() {
  EPersonaChange result;
  intgo _swig_go_result;
  
  
  result = k_EPersonaChangeSteamLevel;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iCallback_GameOverlayActivated_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GameOverlayActivated_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GameOverlayActivated_t_m_bActive_set_steam_fb253aa6b5654893(GameOverlayActivated_t *_swig_go_0, char _swig_go_1) {
  GameOverlayActivated_t *arg1 = (GameOverlayActivated_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(GameOverlayActivated_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bActive = arg2;
  
}


char _wrap_GameOverlayActivated_t_m_bActive_get_steam_fb253aa6b5654893(GameOverlayActivated_t *_swig_go_0) {
  GameOverlayActivated_t *arg1 = (GameOverlayActivated_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(GameOverlayActivated_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


GameOverlayActivated_t *_wrap_new_GameOverlayActivated_t_steam_fb253aa6b5654893() {
  GameOverlayActivated_t *result = 0 ;
  GameOverlayActivated_t *_swig_go_result;
  
  
  result = (GameOverlayActivated_t *)new GameOverlayActivated_t();
  *(GameOverlayActivated_t **)&_swig_go_result = (GameOverlayActivated_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GameOverlayActivated_t_steam_fb253aa6b5654893(GameOverlayActivated_t *_swig_go_0) {
  GameOverlayActivated_t *arg1 = (GameOverlayActivated_t *) 0 ;
  
  arg1 = *(GameOverlayActivated_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GameServerChangeRequested_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GameServerChangeRequested_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GameServerChangeRequested_t_m_rgchServer_set_steam_fb253aa6b5654893(GameServerChangeRequested_t *_swig_go_0, _gostring_ _swig_go_1) {
  GameServerChangeRequested_t *arg1 = (GameServerChangeRequested_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(GameServerChangeRequested_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchServer, (const char *)arg2, 64-1);
      arg1->m_rgchServer[64-1] = 0;
    } else {
      arg1->m_rgchServer[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_GameServerChangeRequested_t_m_rgchServer_get_steam_fb253aa6b5654893(GameServerChangeRequested_t *_swig_go_0) {
  GameServerChangeRequested_t *arg1 = (GameServerChangeRequested_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(GameServerChangeRequested_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchServer);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_GameServerChangeRequested_t_m_rgchPassword_set_steam_fb253aa6b5654893(GameServerChangeRequested_t *_swig_go_0, _gostring_ _swig_go_1) {
  GameServerChangeRequested_t *arg1 = (GameServerChangeRequested_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(GameServerChangeRequested_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchPassword, (const char *)arg2, 64-1);
      arg1->m_rgchPassword[64-1] = 0;
    } else {
      arg1->m_rgchPassword[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_GameServerChangeRequested_t_m_rgchPassword_get_steam_fb253aa6b5654893(GameServerChangeRequested_t *_swig_go_0) {
  GameServerChangeRequested_t *arg1 = (GameServerChangeRequested_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(GameServerChangeRequested_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchPassword);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


GameServerChangeRequested_t *_wrap_new_GameServerChangeRequested_t_steam_fb253aa6b5654893() {
  GameServerChangeRequested_t *result = 0 ;
  GameServerChangeRequested_t *_swig_go_result;
  
  
  result = (GameServerChangeRequested_t *)new GameServerChangeRequested_t();
  *(GameServerChangeRequested_t **)&_swig_go_result = (GameServerChangeRequested_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GameServerChangeRequested_t_steam_fb253aa6b5654893(GameServerChangeRequested_t *_swig_go_0) {
  GameServerChangeRequested_t *arg1 = (GameServerChangeRequested_t *) 0 ;
  
  arg1 = *(GameServerChangeRequested_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GameLobbyJoinRequested_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GameLobbyJoinRequested_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GameLobbyJoinRequested_t_m_steamIDLobby_set_steam_fb253aa6b5654893(GameLobbyJoinRequested_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameLobbyJoinRequested_t *arg1 = (GameLobbyJoinRequested_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameLobbyJoinRequested_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDLobby = *arg2;
  
}


CSteamID *_wrap_GameLobbyJoinRequested_t_m_steamIDLobby_get_steam_fb253aa6b5654893(GameLobbyJoinRequested_t *_swig_go_0) {
  GameLobbyJoinRequested_t *arg1 = (GameLobbyJoinRequested_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameLobbyJoinRequested_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDLobby);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_GameLobbyJoinRequested_t_m_steamIDFriend_set_steam_fb253aa6b5654893(GameLobbyJoinRequested_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameLobbyJoinRequested_t *arg1 = (GameLobbyJoinRequested_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameLobbyJoinRequested_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDFriend = *arg2;
  
}


CSteamID *_wrap_GameLobbyJoinRequested_t_m_steamIDFriend_get_steam_fb253aa6b5654893(GameLobbyJoinRequested_t *_swig_go_0) {
  GameLobbyJoinRequested_t *arg1 = (GameLobbyJoinRequested_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameLobbyJoinRequested_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDFriend);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


GameLobbyJoinRequested_t *_wrap_new_GameLobbyJoinRequested_t_steam_fb253aa6b5654893() {
  GameLobbyJoinRequested_t *result = 0 ;
  GameLobbyJoinRequested_t *_swig_go_result;
  
  
  result = (GameLobbyJoinRequested_t *)new GameLobbyJoinRequested_t();
  *(GameLobbyJoinRequested_t **)&_swig_go_result = (GameLobbyJoinRequested_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GameLobbyJoinRequested_t_steam_fb253aa6b5654893(GameLobbyJoinRequested_t *_swig_go_0) {
  GameLobbyJoinRequested_t *arg1 = (GameLobbyJoinRequested_t *) 0 ;
  
  arg1 = *(GameLobbyJoinRequested_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_AvatarImageLoaded_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = AvatarImageLoaded_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_AvatarImageLoaded_t_m_steamID_set_steam_fb253aa6b5654893(AvatarImageLoaded_t *_swig_go_0, CSteamID *_swig_go_1) {
  AvatarImageLoaded_t *arg1 = (AvatarImageLoaded_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(AvatarImageLoaded_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamID = *arg2;
  
}


CSteamID *_wrap_AvatarImageLoaded_t_m_steamID_get_steam_fb253aa6b5654893(AvatarImageLoaded_t *_swig_go_0) {
  AvatarImageLoaded_t *arg1 = (AvatarImageLoaded_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(AvatarImageLoaded_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamID);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_AvatarImageLoaded_t_m_iImage_set_steam_fb253aa6b5654893(AvatarImageLoaded_t *_swig_go_0, intgo _swig_go_1) {
  AvatarImageLoaded_t *arg1 = (AvatarImageLoaded_t *) 0 ;
  int arg2 ;
  
  arg1 = *(AvatarImageLoaded_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_iImage = arg2;
  
}


intgo _wrap_AvatarImageLoaded_t_m_iImage_get_steam_fb253aa6b5654893(AvatarImageLoaded_t *_swig_go_0) {
  AvatarImageLoaded_t *arg1 = (AvatarImageLoaded_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(AvatarImageLoaded_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_iImage);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AvatarImageLoaded_t_m_iWide_set_steam_fb253aa6b5654893(AvatarImageLoaded_t *_swig_go_0, intgo _swig_go_1) {
  AvatarImageLoaded_t *arg1 = (AvatarImageLoaded_t *) 0 ;
  int arg2 ;
  
  arg1 = *(AvatarImageLoaded_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_iWide = arg2;
  
}


intgo _wrap_AvatarImageLoaded_t_m_iWide_get_steam_fb253aa6b5654893(AvatarImageLoaded_t *_swig_go_0) {
  AvatarImageLoaded_t *arg1 = (AvatarImageLoaded_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(AvatarImageLoaded_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_iWide);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AvatarImageLoaded_t_m_iTall_set_steam_fb253aa6b5654893(AvatarImageLoaded_t *_swig_go_0, intgo _swig_go_1) {
  AvatarImageLoaded_t *arg1 = (AvatarImageLoaded_t *) 0 ;
  int arg2 ;
  
  arg1 = *(AvatarImageLoaded_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_iTall = arg2;
  
}


intgo _wrap_AvatarImageLoaded_t_m_iTall_get_steam_fb253aa6b5654893(AvatarImageLoaded_t *_swig_go_0) {
  AvatarImageLoaded_t *arg1 = (AvatarImageLoaded_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(AvatarImageLoaded_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_iTall);
  _swig_go_result = result; 
  return _swig_go_result;
}


AvatarImageLoaded_t *_wrap_new_AvatarImageLoaded_t_steam_fb253aa6b5654893() {
  AvatarImageLoaded_t *result = 0 ;
  AvatarImageLoaded_t *_swig_go_result;
  
  
  result = (AvatarImageLoaded_t *)new AvatarImageLoaded_t();
  *(AvatarImageLoaded_t **)&_swig_go_result = (AvatarImageLoaded_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_AvatarImageLoaded_t_steam_fb253aa6b5654893(AvatarImageLoaded_t *_swig_go_0) {
  AvatarImageLoaded_t *arg1 = (AvatarImageLoaded_t *) 0 ;
  
  arg1 = *(AvatarImageLoaded_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_ClanOfficerListResponse_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = ClanOfficerListResponse_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ClanOfficerListResponse_t_m_steamIDClan_set_steam_fb253aa6b5654893(ClanOfficerListResponse_t *_swig_go_0, CSteamID *_swig_go_1) {
  ClanOfficerListResponse_t *arg1 = (ClanOfficerListResponse_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(ClanOfficerListResponse_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDClan = *arg2;
  
}


CSteamID *_wrap_ClanOfficerListResponse_t_m_steamIDClan_get_steam_fb253aa6b5654893(ClanOfficerListResponse_t *_swig_go_0) {
  ClanOfficerListResponse_t *arg1 = (ClanOfficerListResponse_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(ClanOfficerListResponse_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDClan);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_ClanOfficerListResponse_t_m_cOfficers_set_steam_fb253aa6b5654893(ClanOfficerListResponse_t *_swig_go_0, intgo _swig_go_1) {
  ClanOfficerListResponse_t *arg1 = (ClanOfficerListResponse_t *) 0 ;
  int arg2 ;
  
  arg1 = *(ClanOfficerListResponse_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_cOfficers = arg2;
  
}


intgo _wrap_ClanOfficerListResponse_t_m_cOfficers_get_steam_fb253aa6b5654893(ClanOfficerListResponse_t *_swig_go_0) {
  ClanOfficerListResponse_t *arg1 = (ClanOfficerListResponse_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ClanOfficerListResponse_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_cOfficers);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ClanOfficerListResponse_t_m_bSuccess_set_steam_fb253aa6b5654893(ClanOfficerListResponse_t *_swig_go_0, char _swig_go_1) {
  ClanOfficerListResponse_t *arg1 = (ClanOfficerListResponse_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(ClanOfficerListResponse_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bSuccess = arg2;
  
}


char _wrap_ClanOfficerListResponse_t_m_bSuccess_get_steam_fb253aa6b5654893(ClanOfficerListResponse_t *_swig_go_0) {
  ClanOfficerListResponse_t *arg1 = (ClanOfficerListResponse_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(ClanOfficerListResponse_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bSuccess);
  _swig_go_result = result; 
  return _swig_go_result;
}


ClanOfficerListResponse_t *_wrap_new_ClanOfficerListResponse_t_steam_fb253aa6b5654893() {
  ClanOfficerListResponse_t *result = 0 ;
  ClanOfficerListResponse_t *_swig_go_result;
  
  
  result = (ClanOfficerListResponse_t *)new ClanOfficerListResponse_t();
  *(ClanOfficerListResponse_t **)&_swig_go_result = (ClanOfficerListResponse_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ClanOfficerListResponse_t_steam_fb253aa6b5654893(ClanOfficerListResponse_t *_swig_go_0) {
  ClanOfficerListResponse_t *arg1 = (ClanOfficerListResponse_t *) 0 ;
  
  arg1 = *(ClanOfficerListResponse_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_FriendRichPresenceUpdate_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = FriendRichPresenceUpdate_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FriendRichPresenceUpdate_t_m_steamIDFriend_set_steam_fb253aa6b5654893(FriendRichPresenceUpdate_t *_swig_go_0, CSteamID *_swig_go_1) {
  FriendRichPresenceUpdate_t *arg1 = (FriendRichPresenceUpdate_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(FriendRichPresenceUpdate_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDFriend = *arg2;
  
}


CSteamID *_wrap_FriendRichPresenceUpdate_t_m_steamIDFriend_get_steam_fb253aa6b5654893(FriendRichPresenceUpdate_t *_swig_go_0) {
  FriendRichPresenceUpdate_t *arg1 = (FriendRichPresenceUpdate_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(FriendRichPresenceUpdate_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDFriend);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_FriendRichPresenceUpdate_t_m_nAppID_set_steam_fb253aa6b5654893(FriendRichPresenceUpdate_t *_swig_go_0, intgo _swig_go_1) {
  FriendRichPresenceUpdate_t *arg1 = (FriendRichPresenceUpdate_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(FriendRichPresenceUpdate_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_FriendRichPresenceUpdate_t_m_nAppID_get_steam_fb253aa6b5654893(FriendRichPresenceUpdate_t *_swig_go_0) {
  FriendRichPresenceUpdate_t *arg1 = (FriendRichPresenceUpdate_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(FriendRichPresenceUpdate_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


FriendRichPresenceUpdate_t *_wrap_new_FriendRichPresenceUpdate_t_steam_fb253aa6b5654893() {
  FriendRichPresenceUpdate_t *result = 0 ;
  FriendRichPresenceUpdate_t *_swig_go_result;
  
  
  result = (FriendRichPresenceUpdate_t *)new FriendRichPresenceUpdate_t();
  *(FriendRichPresenceUpdate_t **)&_swig_go_result = (FriendRichPresenceUpdate_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_FriendRichPresenceUpdate_t_steam_fb253aa6b5654893(FriendRichPresenceUpdate_t *_swig_go_0) {
  FriendRichPresenceUpdate_t *arg1 = (FriendRichPresenceUpdate_t *) 0 ;
  
  arg1 = *(FriendRichPresenceUpdate_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GameRichPresenceJoinRequested_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GameRichPresenceJoinRequested_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GameRichPresenceJoinRequested_t_m_steamIDFriend_set_steam_fb253aa6b5654893(GameRichPresenceJoinRequested_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameRichPresenceJoinRequested_t *arg1 = (GameRichPresenceJoinRequested_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameRichPresenceJoinRequested_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDFriend = *arg2;
  
}


CSteamID *_wrap_GameRichPresenceJoinRequested_t_m_steamIDFriend_get_steam_fb253aa6b5654893(GameRichPresenceJoinRequested_t *_swig_go_0) {
  GameRichPresenceJoinRequested_t *arg1 = (GameRichPresenceJoinRequested_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameRichPresenceJoinRequested_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDFriend);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_GameRichPresenceJoinRequested_t_m_rgchConnect_set_steam_fb253aa6b5654893(GameRichPresenceJoinRequested_t *_swig_go_0, _gostring_ _swig_go_1) {
  GameRichPresenceJoinRequested_t *arg1 = (GameRichPresenceJoinRequested_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(GameRichPresenceJoinRequested_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchConnect, (const char *)arg2, k_cchMaxRichPresenceValueLength-1);
      arg1->m_rgchConnect[k_cchMaxRichPresenceValueLength-1] = 0;
    } else {
      arg1->m_rgchConnect[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_GameRichPresenceJoinRequested_t_m_rgchConnect_get_steam_fb253aa6b5654893(GameRichPresenceJoinRequested_t *_swig_go_0) {
  GameRichPresenceJoinRequested_t *arg1 = (GameRichPresenceJoinRequested_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(GameRichPresenceJoinRequested_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchConnect);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


GameRichPresenceJoinRequested_t *_wrap_new_GameRichPresenceJoinRequested_t_steam_fb253aa6b5654893() {
  GameRichPresenceJoinRequested_t *result = 0 ;
  GameRichPresenceJoinRequested_t *_swig_go_result;
  
  
  result = (GameRichPresenceJoinRequested_t *)new GameRichPresenceJoinRequested_t();
  *(GameRichPresenceJoinRequested_t **)&_swig_go_result = (GameRichPresenceJoinRequested_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GameRichPresenceJoinRequested_t_steam_fb253aa6b5654893(GameRichPresenceJoinRequested_t *_swig_go_0) {
  GameRichPresenceJoinRequested_t *arg1 = (GameRichPresenceJoinRequested_t *) 0 ;
  
  arg1 = *(GameRichPresenceJoinRequested_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GameConnectedClanChatMsg_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GameConnectedClanChatMsg_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedClanChatMsg_t_m_steamIDClanChat_set_steam_fb253aa6b5654893(GameConnectedClanChatMsg_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameConnectedClanChatMsg_t *arg1 = (GameConnectedClanChatMsg_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameConnectedClanChatMsg_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDClanChat = *arg2;
  
}


CSteamID *_wrap_GameConnectedClanChatMsg_t_m_steamIDClanChat_get_steam_fb253aa6b5654893(GameConnectedClanChatMsg_t *_swig_go_0) {
  GameConnectedClanChatMsg_t *arg1 = (GameConnectedClanChatMsg_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameConnectedClanChatMsg_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDClanChat);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedClanChatMsg_t_m_steamIDUser_set_steam_fb253aa6b5654893(GameConnectedClanChatMsg_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameConnectedClanChatMsg_t *arg1 = (GameConnectedClanChatMsg_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameConnectedClanChatMsg_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDUser = *arg2;
  
}


CSteamID *_wrap_GameConnectedClanChatMsg_t_m_steamIDUser_get_steam_fb253aa6b5654893(GameConnectedClanChatMsg_t *_swig_go_0) {
  GameConnectedClanChatMsg_t *arg1 = (GameConnectedClanChatMsg_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameConnectedClanChatMsg_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDUser);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedClanChatMsg_t_m_iMessageID_set_steam_fb253aa6b5654893(GameConnectedClanChatMsg_t *_swig_go_0, intgo _swig_go_1) {
  GameConnectedClanChatMsg_t *arg1 = (GameConnectedClanChatMsg_t *) 0 ;
  int arg2 ;
  
  arg1 = *(GameConnectedClanChatMsg_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_iMessageID = arg2;
  
}


intgo _wrap_GameConnectedClanChatMsg_t_m_iMessageID_get_steam_fb253aa6b5654893(GameConnectedClanChatMsg_t *_swig_go_0) {
  GameConnectedClanChatMsg_t *arg1 = (GameConnectedClanChatMsg_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(GameConnectedClanChatMsg_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_iMessageID);
  _swig_go_result = result; 
  return _swig_go_result;
}


GameConnectedClanChatMsg_t *_wrap_new_GameConnectedClanChatMsg_t_steam_fb253aa6b5654893() {
  GameConnectedClanChatMsg_t *result = 0 ;
  GameConnectedClanChatMsg_t *_swig_go_result;
  
  
  result = (GameConnectedClanChatMsg_t *)new GameConnectedClanChatMsg_t();
  *(GameConnectedClanChatMsg_t **)&_swig_go_result = (GameConnectedClanChatMsg_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GameConnectedClanChatMsg_t_steam_fb253aa6b5654893(GameConnectedClanChatMsg_t *_swig_go_0) {
  GameConnectedClanChatMsg_t *arg1 = (GameConnectedClanChatMsg_t *) 0 ;
  
  arg1 = *(GameConnectedClanChatMsg_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GameConnectedChatJoin_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GameConnectedChatJoin_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedChatJoin_t_m_steamIDClanChat_set_steam_fb253aa6b5654893(GameConnectedChatJoin_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameConnectedChatJoin_t *arg1 = (GameConnectedChatJoin_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameConnectedChatJoin_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDClanChat = *arg2;
  
}


CSteamID *_wrap_GameConnectedChatJoin_t_m_steamIDClanChat_get_steam_fb253aa6b5654893(GameConnectedChatJoin_t *_swig_go_0) {
  GameConnectedChatJoin_t *arg1 = (GameConnectedChatJoin_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameConnectedChatJoin_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDClanChat);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedChatJoin_t_m_steamIDUser_set_steam_fb253aa6b5654893(GameConnectedChatJoin_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameConnectedChatJoin_t *arg1 = (GameConnectedChatJoin_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameConnectedChatJoin_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDUser = *arg2;
  
}


CSteamID *_wrap_GameConnectedChatJoin_t_m_steamIDUser_get_steam_fb253aa6b5654893(GameConnectedChatJoin_t *_swig_go_0) {
  GameConnectedChatJoin_t *arg1 = (GameConnectedChatJoin_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameConnectedChatJoin_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDUser);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


GameConnectedChatJoin_t *_wrap_new_GameConnectedChatJoin_t_steam_fb253aa6b5654893() {
  GameConnectedChatJoin_t *result = 0 ;
  GameConnectedChatJoin_t *_swig_go_result;
  
  
  result = (GameConnectedChatJoin_t *)new GameConnectedChatJoin_t();
  *(GameConnectedChatJoin_t **)&_swig_go_result = (GameConnectedChatJoin_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GameConnectedChatJoin_t_steam_fb253aa6b5654893(GameConnectedChatJoin_t *_swig_go_0) {
  GameConnectedChatJoin_t *arg1 = (GameConnectedChatJoin_t *) 0 ;
  
  arg1 = *(GameConnectedChatJoin_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GameConnectedChatLeave_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GameConnectedChatLeave_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedChatLeave_t_m_steamIDClanChat_set_steam_fb253aa6b5654893(GameConnectedChatLeave_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameConnectedChatLeave_t *arg1 = (GameConnectedChatLeave_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameConnectedChatLeave_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDClanChat = *arg2;
  
}


CSteamID *_wrap_GameConnectedChatLeave_t_m_steamIDClanChat_get_steam_fb253aa6b5654893(GameConnectedChatLeave_t *_swig_go_0) {
  GameConnectedChatLeave_t *arg1 = (GameConnectedChatLeave_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameConnectedChatLeave_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDClanChat);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedChatLeave_t_m_steamIDUser_set_steam_fb253aa6b5654893(GameConnectedChatLeave_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameConnectedChatLeave_t *arg1 = (GameConnectedChatLeave_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameConnectedChatLeave_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDUser = *arg2;
  
}


CSteamID *_wrap_GameConnectedChatLeave_t_m_steamIDUser_get_steam_fb253aa6b5654893(GameConnectedChatLeave_t *_swig_go_0) {
  GameConnectedChatLeave_t *arg1 = (GameConnectedChatLeave_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameConnectedChatLeave_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDUser);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedChatLeave_t_m_bKicked_set_steam_fb253aa6b5654893(GameConnectedChatLeave_t *_swig_go_0, bool _swig_go_1) {
  GameConnectedChatLeave_t *arg1 = (GameConnectedChatLeave_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(GameConnectedChatLeave_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bKicked = arg2;
  
}


bool _wrap_GameConnectedChatLeave_t_m_bKicked_get_steam_fb253aa6b5654893(GameConnectedChatLeave_t *_swig_go_0) {
  GameConnectedChatLeave_t *arg1 = (GameConnectedChatLeave_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GameConnectedChatLeave_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bKicked);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GameConnectedChatLeave_t_m_bDropped_set_steam_fb253aa6b5654893(GameConnectedChatLeave_t *_swig_go_0, bool _swig_go_1) {
  GameConnectedChatLeave_t *arg1 = (GameConnectedChatLeave_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(GameConnectedChatLeave_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bDropped = arg2;
  
}


bool _wrap_GameConnectedChatLeave_t_m_bDropped_get_steam_fb253aa6b5654893(GameConnectedChatLeave_t *_swig_go_0) {
  GameConnectedChatLeave_t *arg1 = (GameConnectedChatLeave_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GameConnectedChatLeave_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bDropped);
  _swig_go_result = result; 
  return _swig_go_result;
}


GameConnectedChatLeave_t *_wrap_new_GameConnectedChatLeave_t_steam_fb253aa6b5654893() {
  GameConnectedChatLeave_t *result = 0 ;
  GameConnectedChatLeave_t *_swig_go_result;
  
  
  result = (GameConnectedChatLeave_t *)new GameConnectedChatLeave_t();
  *(GameConnectedChatLeave_t **)&_swig_go_result = (GameConnectedChatLeave_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GameConnectedChatLeave_t_steam_fb253aa6b5654893(GameConnectedChatLeave_t *_swig_go_0) {
  GameConnectedChatLeave_t *arg1 = (GameConnectedChatLeave_t *) 0 ;
  
  arg1 = *(GameConnectedChatLeave_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_DownloadClanActivityCountsResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = DownloadClanActivityCountsResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_DownloadClanActivityCountsResult_t_m_bSuccess_set_steam_fb253aa6b5654893(DownloadClanActivityCountsResult_t *_swig_go_0, bool _swig_go_1) {
  DownloadClanActivityCountsResult_t *arg1 = (DownloadClanActivityCountsResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(DownloadClanActivityCountsResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bSuccess = arg2;
  
}


bool _wrap_DownloadClanActivityCountsResult_t_m_bSuccess_get_steam_fb253aa6b5654893(DownloadClanActivityCountsResult_t *_swig_go_0) {
  DownloadClanActivityCountsResult_t *arg1 = (DownloadClanActivityCountsResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(DownloadClanActivityCountsResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bSuccess);
  _swig_go_result = result; 
  return _swig_go_result;
}


DownloadClanActivityCountsResult_t *_wrap_new_DownloadClanActivityCountsResult_t_steam_fb253aa6b5654893() {
  DownloadClanActivityCountsResult_t *result = 0 ;
  DownloadClanActivityCountsResult_t *_swig_go_result;
  
  
  result = (DownloadClanActivityCountsResult_t *)new DownloadClanActivityCountsResult_t();
  *(DownloadClanActivityCountsResult_t **)&_swig_go_result = (DownloadClanActivityCountsResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_DownloadClanActivityCountsResult_t_steam_fb253aa6b5654893(DownloadClanActivityCountsResult_t *_swig_go_0) {
  DownloadClanActivityCountsResult_t *arg1 = (DownloadClanActivityCountsResult_t *) 0 ;
  
  arg1 = *(DownloadClanActivityCountsResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_JoinClanChatRoomCompletionResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = JoinClanChatRoomCompletionResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_JoinClanChatRoomCompletionResult_t_m_steamIDClanChat_set_steam_fb253aa6b5654893(JoinClanChatRoomCompletionResult_t *_swig_go_0, CSteamID *_swig_go_1) {
  JoinClanChatRoomCompletionResult_t *arg1 = (JoinClanChatRoomCompletionResult_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(JoinClanChatRoomCompletionResult_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDClanChat = *arg2;
  
}


CSteamID *_wrap_JoinClanChatRoomCompletionResult_t_m_steamIDClanChat_get_steam_fb253aa6b5654893(JoinClanChatRoomCompletionResult_t *_swig_go_0) {
  JoinClanChatRoomCompletionResult_t *arg1 = (JoinClanChatRoomCompletionResult_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(JoinClanChatRoomCompletionResult_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDClanChat);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_JoinClanChatRoomCompletionResult_t_m_eChatRoomEnterResponse_set_steam_fb253aa6b5654893(JoinClanChatRoomCompletionResult_t *_swig_go_0, intgo _swig_go_1) {
  JoinClanChatRoomCompletionResult_t *arg1 = (JoinClanChatRoomCompletionResult_t *) 0 ;
  EChatRoomEnterResponse arg2 ;
  
  arg1 = *(JoinClanChatRoomCompletionResult_t **)&_swig_go_0; 
  arg2 = (EChatRoomEnterResponse)_swig_go_1; 
  
  if (arg1) (arg1)->m_eChatRoomEnterResponse = arg2;
  
}


intgo _wrap_JoinClanChatRoomCompletionResult_t_m_eChatRoomEnterResponse_get_steam_fb253aa6b5654893(JoinClanChatRoomCompletionResult_t *_swig_go_0) {
  JoinClanChatRoomCompletionResult_t *arg1 = (JoinClanChatRoomCompletionResult_t *) 0 ;
  EChatRoomEnterResponse result;
  intgo _swig_go_result;
  
  arg1 = *(JoinClanChatRoomCompletionResult_t **)&_swig_go_0; 
  
  result = (EChatRoomEnterResponse) ((arg1)->m_eChatRoomEnterResponse);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


JoinClanChatRoomCompletionResult_t *_wrap_new_JoinClanChatRoomCompletionResult_t_steam_fb253aa6b5654893() {
  JoinClanChatRoomCompletionResult_t *result = 0 ;
  JoinClanChatRoomCompletionResult_t *_swig_go_result;
  
  
  result = (JoinClanChatRoomCompletionResult_t *)new JoinClanChatRoomCompletionResult_t();
  *(JoinClanChatRoomCompletionResult_t **)&_swig_go_result = (JoinClanChatRoomCompletionResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_JoinClanChatRoomCompletionResult_t_steam_fb253aa6b5654893(JoinClanChatRoomCompletionResult_t *_swig_go_0) {
  JoinClanChatRoomCompletionResult_t *arg1 = (JoinClanChatRoomCompletionResult_t *) 0 ;
  
  arg1 = *(JoinClanChatRoomCompletionResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GameConnectedFriendChatMsg_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GameConnectedFriendChatMsg_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedFriendChatMsg_t_m_steamIDUser_set_steam_fb253aa6b5654893(GameConnectedFriendChatMsg_t *_swig_go_0, CSteamID *_swig_go_1) {
  GameConnectedFriendChatMsg_t *arg1 = (GameConnectedFriendChatMsg_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(GameConnectedFriendChatMsg_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDUser = *arg2;
  
}


CSteamID *_wrap_GameConnectedFriendChatMsg_t_m_steamIDUser_get_steam_fb253aa6b5654893(GameConnectedFriendChatMsg_t *_swig_go_0) {
  GameConnectedFriendChatMsg_t *arg1 = (GameConnectedFriendChatMsg_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(GameConnectedFriendChatMsg_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDUser);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_GameConnectedFriendChatMsg_t_m_iMessageID_set_steam_fb253aa6b5654893(GameConnectedFriendChatMsg_t *_swig_go_0, intgo _swig_go_1) {
  GameConnectedFriendChatMsg_t *arg1 = (GameConnectedFriendChatMsg_t *) 0 ;
  int arg2 ;
  
  arg1 = *(GameConnectedFriendChatMsg_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_iMessageID = arg2;
  
}


intgo _wrap_GameConnectedFriendChatMsg_t_m_iMessageID_get_steam_fb253aa6b5654893(GameConnectedFriendChatMsg_t *_swig_go_0) {
  GameConnectedFriendChatMsg_t *arg1 = (GameConnectedFriendChatMsg_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(GameConnectedFriendChatMsg_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_iMessageID);
  _swig_go_result = result; 
  return _swig_go_result;
}


GameConnectedFriendChatMsg_t *_wrap_new_GameConnectedFriendChatMsg_t_steam_fb253aa6b5654893() {
  GameConnectedFriendChatMsg_t *result = 0 ;
  GameConnectedFriendChatMsg_t *_swig_go_result;
  
  
  result = (GameConnectedFriendChatMsg_t *)new GameConnectedFriendChatMsg_t();
  *(GameConnectedFriendChatMsg_t **)&_swig_go_result = (GameConnectedFriendChatMsg_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GameConnectedFriendChatMsg_t_steam_fb253aa6b5654893(GameConnectedFriendChatMsg_t *_swig_go_0) {
  GameConnectedFriendChatMsg_t *arg1 = (GameConnectedFriendChatMsg_t *) 0 ;
  
  arg1 = *(GameConnectedFriendChatMsg_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_FriendsGetFollowerCount_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = FriendsGetFollowerCount_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FriendsGetFollowerCount_t_m_eResult_set_steam_fb253aa6b5654893(FriendsGetFollowerCount_t *_swig_go_0, intgo _swig_go_1) {
  FriendsGetFollowerCount_t *arg1 = (FriendsGetFollowerCount_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(FriendsGetFollowerCount_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_FriendsGetFollowerCount_t_m_eResult_get_steam_fb253aa6b5654893(FriendsGetFollowerCount_t *_swig_go_0) {
  FriendsGetFollowerCount_t *arg1 = (FriendsGetFollowerCount_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(FriendsGetFollowerCount_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FriendsGetFollowerCount_t_m_steamID_set_steam_fb253aa6b5654893(FriendsGetFollowerCount_t *_swig_go_0, CSteamID *_swig_go_1) {
  FriendsGetFollowerCount_t *arg1 = (FriendsGetFollowerCount_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(FriendsGetFollowerCount_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamID = *arg2;
  
}


CSteamID *_wrap_FriendsGetFollowerCount_t_m_steamID_get_steam_fb253aa6b5654893(FriendsGetFollowerCount_t *_swig_go_0) {
  FriendsGetFollowerCount_t *arg1 = (FriendsGetFollowerCount_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(FriendsGetFollowerCount_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamID);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_FriendsGetFollowerCount_t_m_nCount_set_steam_fb253aa6b5654893(FriendsGetFollowerCount_t *_swig_go_0, intgo _swig_go_1) {
  FriendsGetFollowerCount_t *arg1 = (FriendsGetFollowerCount_t *) 0 ;
  int arg2 ;
  
  arg1 = *(FriendsGetFollowerCount_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nCount = arg2;
  
}


intgo _wrap_FriendsGetFollowerCount_t_m_nCount_get_steam_fb253aa6b5654893(FriendsGetFollowerCount_t *_swig_go_0) {
  FriendsGetFollowerCount_t *arg1 = (FriendsGetFollowerCount_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(FriendsGetFollowerCount_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


FriendsGetFollowerCount_t *_wrap_new_FriendsGetFollowerCount_t_steam_fb253aa6b5654893() {
  FriendsGetFollowerCount_t *result = 0 ;
  FriendsGetFollowerCount_t *_swig_go_result;
  
  
  result = (FriendsGetFollowerCount_t *)new FriendsGetFollowerCount_t();
  *(FriendsGetFollowerCount_t **)&_swig_go_result = (FriendsGetFollowerCount_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_FriendsGetFollowerCount_t_steam_fb253aa6b5654893(FriendsGetFollowerCount_t *_swig_go_0) {
  FriendsGetFollowerCount_t *arg1 = (FriendsGetFollowerCount_t *) 0 ;
  
  arg1 = *(FriendsGetFollowerCount_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_FriendsIsFollowing_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = FriendsIsFollowing_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FriendsIsFollowing_t_m_eResult_set_steam_fb253aa6b5654893(FriendsIsFollowing_t *_swig_go_0, intgo _swig_go_1) {
  FriendsIsFollowing_t *arg1 = (FriendsIsFollowing_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(FriendsIsFollowing_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_FriendsIsFollowing_t_m_eResult_get_steam_fb253aa6b5654893(FriendsIsFollowing_t *_swig_go_0) {
  FriendsIsFollowing_t *arg1 = (FriendsIsFollowing_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(FriendsIsFollowing_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FriendsIsFollowing_t_m_steamID_set_steam_fb253aa6b5654893(FriendsIsFollowing_t *_swig_go_0, CSteamID *_swig_go_1) {
  FriendsIsFollowing_t *arg1 = (FriendsIsFollowing_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(FriendsIsFollowing_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamID = *arg2;
  
}


CSteamID *_wrap_FriendsIsFollowing_t_m_steamID_get_steam_fb253aa6b5654893(FriendsIsFollowing_t *_swig_go_0) {
  FriendsIsFollowing_t *arg1 = (FriendsIsFollowing_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(FriendsIsFollowing_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamID);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_FriendsIsFollowing_t_m_bIsFollowing_set_steam_fb253aa6b5654893(FriendsIsFollowing_t *_swig_go_0, bool _swig_go_1) {
  FriendsIsFollowing_t *arg1 = (FriendsIsFollowing_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(FriendsIsFollowing_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bIsFollowing = arg2;
  
}


bool _wrap_FriendsIsFollowing_t_m_bIsFollowing_get_steam_fb253aa6b5654893(FriendsIsFollowing_t *_swig_go_0) {
  FriendsIsFollowing_t *arg1 = (FriendsIsFollowing_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(FriendsIsFollowing_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bIsFollowing);
  _swig_go_result = result; 
  return _swig_go_result;
}


FriendsIsFollowing_t *_wrap_new_FriendsIsFollowing_t_steam_fb253aa6b5654893() {
  FriendsIsFollowing_t *result = 0 ;
  FriendsIsFollowing_t *_swig_go_result;
  
  
  result = (FriendsIsFollowing_t *)new FriendsIsFollowing_t();
  *(FriendsIsFollowing_t **)&_swig_go_result = (FriendsIsFollowing_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_FriendsIsFollowing_t_steam_fb253aa6b5654893(FriendsIsFollowing_t *_swig_go_0) {
  FriendsIsFollowing_t *arg1 = (FriendsIsFollowing_t *) 0 ;
  
  arg1 = *(FriendsIsFollowing_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_FriendsEnumerateFollowingList_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = FriendsEnumerateFollowingList_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FriendsEnumerateFollowingList_t_m_eResult_set_steam_fb253aa6b5654893(FriendsEnumerateFollowingList_t *_swig_go_0, intgo _swig_go_1) {
  FriendsEnumerateFollowingList_t *arg1 = (FriendsEnumerateFollowingList_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(FriendsEnumerateFollowingList_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_FriendsEnumerateFollowingList_t_m_eResult_get_steam_fb253aa6b5654893(FriendsEnumerateFollowingList_t *_swig_go_0) {
  FriendsEnumerateFollowingList_t *arg1 = (FriendsEnumerateFollowingList_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(FriendsEnumerateFollowingList_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FriendsEnumerateFollowingList_t_m_rgSteamID_set_steam_fb253aa6b5654893(FriendsEnumerateFollowingList_t *_swig_go_0, CSteamID *_swig_go_1) {
  FriendsEnumerateFollowingList_t *arg1 = (FriendsEnumerateFollowingList_t *) 0 ;
  CSteamID *arg2 ;
  
  arg1 = *(FriendsEnumerateFollowingList_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  {
    size_t ii;
    CSteamID *b = (CSteamID *) arg1->m_rgSteamID;
    for (ii = 0; ii < (size_t)k_cEnumerateFollowersMax; ii++) b[ii] = *((CSteamID *) arg2 + ii);
  }
  
}


CSteamID (*_wrap_FriendsEnumerateFollowingList_t_m_rgSteamID_get_steam_fb253aa6b5654893(FriendsEnumerateFollowingList_t *_swig_go_0))[k_cEnumerateFollowersMax] {
  FriendsEnumerateFollowingList_t *arg1 = (FriendsEnumerateFollowingList_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID (*_swig_go_result)[k_cEnumerateFollowersMax];
  
  arg1 = *(FriendsEnumerateFollowingList_t **)&_swig_go_0; 
  
  result = (CSteamID *)(CSteamID *) ((arg1)->m_rgSteamID);
  *(CSteamID **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FriendsEnumerateFollowingList_t_m_nResultsReturned_set_steam_fb253aa6b5654893(FriendsEnumerateFollowingList_t *_swig_go_0, intgo _swig_go_1) {
  FriendsEnumerateFollowingList_t *arg1 = (FriendsEnumerateFollowingList_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(FriendsEnumerateFollowingList_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nResultsReturned = arg2;
  
}


intgo _wrap_FriendsEnumerateFollowingList_t_m_nResultsReturned_get_steam_fb253aa6b5654893(FriendsEnumerateFollowingList_t *_swig_go_0) {
  FriendsEnumerateFollowingList_t *arg1 = (FriendsEnumerateFollowingList_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(FriendsEnumerateFollowingList_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nResultsReturned);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FriendsEnumerateFollowingList_t_m_nTotalResultCount_set_steam_fb253aa6b5654893(FriendsEnumerateFollowingList_t *_swig_go_0, intgo _swig_go_1) {
  FriendsEnumerateFollowingList_t *arg1 = (FriendsEnumerateFollowingList_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(FriendsEnumerateFollowingList_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nTotalResultCount = arg2;
  
}


intgo _wrap_FriendsEnumerateFollowingList_t_m_nTotalResultCount_get_steam_fb253aa6b5654893(FriendsEnumerateFollowingList_t *_swig_go_0) {
  FriendsEnumerateFollowingList_t *arg1 = (FriendsEnumerateFollowingList_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(FriendsEnumerateFollowingList_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nTotalResultCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


FriendsEnumerateFollowingList_t *_wrap_new_FriendsEnumerateFollowingList_t_steam_fb253aa6b5654893() {
  FriendsEnumerateFollowingList_t *result = 0 ;
  FriendsEnumerateFollowingList_t *_swig_go_result;
  
  
  result = (FriendsEnumerateFollowingList_t *)new FriendsEnumerateFollowingList_t();
  *(FriendsEnumerateFollowingList_t **)&_swig_go_result = (FriendsEnumerateFollowingList_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_FriendsEnumerateFollowingList_t_steam_fb253aa6b5654893(FriendsEnumerateFollowingList_t *_swig_go_0) {
  FriendsEnumerateFollowingList_t *arg1 = (FriendsEnumerateFollowingList_t *) 0 ;
  
  arg1 = *(FriendsEnumerateFollowingList_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SetPersonaNameResponse_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SetPersonaNameResponse_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SetPersonaNameResponse_t_m_bSuccess_set_steam_fb253aa6b5654893(SetPersonaNameResponse_t *_swig_go_0, bool _swig_go_1) {
  SetPersonaNameResponse_t *arg1 = (SetPersonaNameResponse_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SetPersonaNameResponse_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bSuccess = arg2;
  
}


bool _wrap_SetPersonaNameResponse_t_m_bSuccess_get_steam_fb253aa6b5654893(SetPersonaNameResponse_t *_swig_go_0) {
  SetPersonaNameResponse_t *arg1 = (SetPersonaNameResponse_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SetPersonaNameResponse_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bSuccess);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetPersonaNameResponse_t_m_bLocalSuccess_set_steam_fb253aa6b5654893(SetPersonaNameResponse_t *_swig_go_0, bool _swig_go_1) {
  SetPersonaNameResponse_t *arg1 = (SetPersonaNameResponse_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SetPersonaNameResponse_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bLocalSuccess = arg2;
  
}


bool _wrap_SetPersonaNameResponse_t_m_bLocalSuccess_get_steam_fb253aa6b5654893(SetPersonaNameResponse_t *_swig_go_0) {
  SetPersonaNameResponse_t *arg1 = (SetPersonaNameResponse_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SetPersonaNameResponse_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bLocalSuccess);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetPersonaNameResponse_t_m_result_set_steam_fb253aa6b5654893(SetPersonaNameResponse_t *_swig_go_0, intgo _swig_go_1) {
  SetPersonaNameResponse_t *arg1 = (SetPersonaNameResponse_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SetPersonaNameResponse_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_result = arg2;
  
}


intgo _wrap_SetPersonaNameResponse_t_m_result_get_steam_fb253aa6b5654893(SetPersonaNameResponse_t *_swig_go_0) {
  SetPersonaNameResponse_t *arg1 = (SetPersonaNameResponse_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SetPersonaNameResponse_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_result);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


SetPersonaNameResponse_t *_wrap_new_SetPersonaNameResponse_t_steam_fb253aa6b5654893() {
  SetPersonaNameResponse_t *result = 0 ;
  SetPersonaNameResponse_t *_swig_go_result;
  
  
  result = (SetPersonaNameResponse_t *)new SetPersonaNameResponse_t();
  *(SetPersonaNameResponse_t **)&_swig_go_result = (SetPersonaNameResponse_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SetPersonaNameResponse_t_steam_fb253aa6b5654893(SetPersonaNameResponse_t *_swig_go_0) {
  SetPersonaNameResponse_t *arg1 = (SetPersonaNameResponse_t *) 0 ;
  
  arg1 = *(SetPersonaNameResponse_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_ESteamAPICallFailureNone_steam_fb253aa6b5654893() {
  ESteamAPICallFailure result;
  intgo _swig_go_result;
  
  
  result = k_ESteamAPICallFailureNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamAPICallFailureSteamGone_steam_fb253aa6b5654893() {
  ESteamAPICallFailure result;
  intgo _swig_go_result;
  
  
  result = k_ESteamAPICallFailureSteamGone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamAPICallFailureNetworkFailure_steam_fb253aa6b5654893() {
  ESteamAPICallFailure result;
  intgo _swig_go_result;
  
  
  result = k_ESteamAPICallFailureNetworkFailure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamAPICallFailureInvalidHandle_steam_fb253aa6b5654893() {
  ESteamAPICallFailure result;
  intgo _swig_go_result;
  
  
  result = k_ESteamAPICallFailureInvalidHandle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamAPICallFailureMismatchedCallback_steam_fb253aa6b5654893() {
  ESteamAPICallFailure result;
  intgo _swig_go_result;
  
  
  result = k_ESteamAPICallFailureMismatchedCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EGamepadTextInputModeNormal_steam_fb253aa6b5654893() {
  EGamepadTextInputMode result;
  intgo _swig_go_result;
  
  
  result = k_EGamepadTextInputModeNormal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EGamepadTextInputModePassword_steam_fb253aa6b5654893() {
  EGamepadTextInputMode result;
  intgo _swig_go_result;
  
  
  result = k_EGamepadTextInputModePassword;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EGamepadTextInputLineModeSingleLine_steam_fb253aa6b5654893() {
  EGamepadTextInputLineMode result;
  intgo _swig_go_result;
  
  
  result = k_EGamepadTextInputLineModeSingleLine;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EGamepadTextInputLineModeMultipleLines_steam_fb253aa6b5654893() {
  EGamepadTextInputLineMode result;
  intgo _swig_go_result;
  
  
  result = k_EGamepadTextInputLineModeMultipleLines;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUtils_GetSecondsSinceAppActive_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetSecondsSinceAppActive();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUtils_GetSecondsSinceComputerActive_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetSecondsSinceComputerActive();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUtils_GetConnectedUniverse_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  EUniverse result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (EUniverse)(arg1)->GetConnectedUniverse();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUtils_GetServerRealTime_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetServerRealTime();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamUtils_GetIPCountry_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (char *)(arg1)->GetIPCountry();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


bool _wrap_ISteamUtils_GetImageSize_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  int arg2 ;
  uint32 *arg3 = (uint32 *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(uint32 **)&_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetImageSize(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUtils_GetImageRGBA_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, intgo _swig_go_1, char *_swig_go_2, intgo _swig_go_3) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  int arg2 ;
  uint8 *arg3 = (uint8 *) 0 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(uint8 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)(arg1)->GetImageRGBA(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUtils_GetCSERIPPort_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, intgo *_swig_go_1, short *_swig_go_2) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  uint32 *arg2 = (uint32 *) 0 ;
  uint16 *arg3 = (uint16 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = *(uint32 **)&_swig_go_1; 
  arg3 = *(uint16 **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetCSERIPPort(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


char _wrap_ISteamUtils_GetCurrentBatteryPower_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (uint8)(arg1)->GetCurrentBatteryPower();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUtils_GetAppID_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetAppID();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamUtils_SetOverlayNotificationPosition_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, intgo _swig_go_1) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  ENotificationPosition arg2 ;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = (ENotificationPosition)_swig_go_1; 
  
  (arg1)->SetOverlayNotificationPosition(arg2);
  
}


bool _wrap_ISteamUtils_IsAPICallCompleted_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, long long _swig_go_1, bool *_swig_go_2) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  SteamAPICall_t arg2 ;
  bool *arg3 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = (SteamAPICall_t)_swig_go_1; 
  arg3 = *(bool **)&_swig_go_2; 
  
  result = (bool)(arg1)->IsAPICallCompleted(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUtils_GetAPICallFailureReason_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, long long _swig_go_1) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  SteamAPICall_t arg2 ;
  ESteamAPICallFailure result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = (SteamAPICall_t)_swig_go_1; 
  
  result = (ESteamAPICallFailure)(arg1)->GetAPICallFailureReason(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_ISteamUtils_GetAPICallResult_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, long long _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, bool *_swig_go_5) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  SteamAPICall_t arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  bool *arg6 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = (SteamAPICall_t)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(bool **)&_swig_go_5; 
  
  result = (bool)(arg1)->GetAPICallResult(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUtils_GetIPCCallCount_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetIPCCallCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamUtils_SetWarningMessageHook_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, void** _swig_go_1) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  SteamAPIWarningMessageHook_t arg2 = (SteamAPIWarningMessageHook_t) 0 ;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = *(SteamAPIWarningMessageHook_t *)&_swig_go_1; 
  
  (arg1)->SetWarningMessageHook(arg2);
  
}


bool _wrap_ISteamUtils_IsOverlayEnabled_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (bool)(arg1)->IsOverlayEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUtils_BOverlayNeedsPresent_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (bool)(arg1)->BOverlayNeedsPresent();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUtils_CheckFileSignature_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  char *arg2 = (char *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (SteamAPICall_t)(arg1)->CheckFileSignature((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUtils_ShowGamepadTextInput_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  EGamepadTextInputMode arg2 ;
  EGamepadTextInputLineMode arg3 ;
  char *arg4 = (char *) 0 ;
  uint32 arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = (EGamepadTextInputMode)_swig_go_1; 
  arg3 = (EGamepadTextInputLineMode)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (uint32)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)(arg1)->ShowGamepadTextInput(arg2,arg3,(char const *)arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg4); 
  free(arg6); 
  return _swig_go_result;
}


intgo _wrap_ISteamUtils_GetEnteredGamepadTextLength_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetEnteredGamepadTextLength();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUtils_GetEnteredGamepadTextInput_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (uint32)_swig_go_2; 
  
  result = (bool)(arg1)->GetEnteredGamepadTextInput(arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamUtils_GetSteamUILanguage_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (char *)(arg1)->GetSteamUILanguage();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


bool _wrap_ISteamUtils_IsSteamRunningInVR_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (bool)(arg1)->IsSteamRunningInVR();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamUtils_SetOverlayNotificationInset_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->SetOverlayNotificationInset(arg2,arg3);
  
}


bool _wrap_ISteamUtils_IsSteamInBigPictureMode_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (bool)(arg1)->IsSteamInBigPictureMode();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamUtils_StartVRDashboard_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  (arg1)->StartVRDashboard();
  
}


bool _wrap_ISteamUtils_IsVRHeadsetStreamingEnabled_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  result = (bool)(arg1)->IsVRHeadsetStreamingEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamUtils_SetVRHeadsetStreamingEnabled_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0, bool _swig_go_1) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  bool arg2 ;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->SetVRHeadsetStreamingEnabled(arg2);
  
}


void _wrap_delete_ISteamUtils_steam_fb253aa6b5654893(ISteamUtils *_swig_go_0) {
  ISteamUtils *arg1 = (ISteamUtils *) 0 ;
  
  arg1 = *(ISteamUtils **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_IPCountry_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = IPCountry_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


IPCountry_t *_wrap_new_IPCountry_t_steam_fb253aa6b5654893() {
  IPCountry_t *result = 0 ;
  IPCountry_t *_swig_go_result;
  
  
  result = (IPCountry_t *)new IPCountry_t();
  *(IPCountry_t **)&_swig_go_result = (IPCountry_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_IPCountry_t_steam_fb253aa6b5654893(IPCountry_t *_swig_go_0) {
  IPCountry_t *arg1 = (IPCountry_t *) 0 ;
  
  arg1 = *(IPCountry_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LowBatteryPower_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LowBatteryPower_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LowBatteryPower_t_m_nMinutesBatteryLeft_set_steam_fb253aa6b5654893(LowBatteryPower_t *_swig_go_0, char _swig_go_1) {
  LowBatteryPower_t *arg1 = (LowBatteryPower_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(LowBatteryPower_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_nMinutesBatteryLeft = arg2;
  
}


char _wrap_LowBatteryPower_t_m_nMinutesBatteryLeft_get_steam_fb253aa6b5654893(LowBatteryPower_t *_swig_go_0) {
  LowBatteryPower_t *arg1 = (LowBatteryPower_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(LowBatteryPower_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_nMinutesBatteryLeft);
  _swig_go_result = result; 
  return _swig_go_result;
}


LowBatteryPower_t *_wrap_new_LowBatteryPower_t_steam_fb253aa6b5654893() {
  LowBatteryPower_t *result = 0 ;
  LowBatteryPower_t *_swig_go_result;
  
  
  result = (LowBatteryPower_t *)new LowBatteryPower_t();
  *(LowBatteryPower_t **)&_swig_go_result = (LowBatteryPower_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LowBatteryPower_t_steam_fb253aa6b5654893(LowBatteryPower_t *_swig_go_0) {
  LowBatteryPower_t *arg1 = (LowBatteryPower_t *) 0 ;
  
  arg1 = *(LowBatteryPower_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamAPICallCompleted_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamAPICallCompleted_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamAPICallCompleted_t_m_hAsyncCall_set_steam_fb253aa6b5654893(SteamAPICallCompleted_t *_swig_go_0, long long _swig_go_1) {
  SteamAPICallCompleted_t *arg1 = (SteamAPICallCompleted_t *) 0 ;
  SteamAPICall_t arg2 ;
  
  arg1 = *(SteamAPICallCompleted_t **)&_swig_go_0; 
  arg2 = (SteamAPICall_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hAsyncCall = arg2;
  
}


long long _wrap_SteamAPICallCompleted_t_m_hAsyncCall_get_steam_fb253aa6b5654893(SteamAPICallCompleted_t *_swig_go_0) {
  SteamAPICallCompleted_t *arg1 = (SteamAPICallCompleted_t *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(SteamAPICallCompleted_t **)&_swig_go_0; 
  
  result = (SteamAPICall_t) ((arg1)->m_hAsyncCall);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamAPICallCompleted_t_m_iCallback_set_steam_fb253aa6b5654893(SteamAPICallCompleted_t *_swig_go_0, intgo _swig_go_1) {
  SteamAPICallCompleted_t *arg1 = (SteamAPICallCompleted_t *) 0 ;
  int arg2 ;
  
  arg1 = *(SteamAPICallCompleted_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_iCallback = arg2;
  
}


intgo _wrap_SteamAPICallCompleted_t_m_iCallback_get_steam_fb253aa6b5654893(SteamAPICallCompleted_t *_swig_go_0) {
  SteamAPICallCompleted_t *arg1 = (SteamAPICallCompleted_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SteamAPICallCompleted_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_iCallback);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamAPICallCompleted_t_m_cubParam_set_steam_fb253aa6b5654893(SteamAPICallCompleted_t *_swig_go_0, intgo _swig_go_1) {
  SteamAPICallCompleted_t *arg1 = (SteamAPICallCompleted_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(SteamAPICallCompleted_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_cubParam = arg2;
  
}


intgo _wrap_SteamAPICallCompleted_t_m_cubParam_get_steam_fb253aa6b5654893(SteamAPICallCompleted_t *_swig_go_0) {
  SteamAPICallCompleted_t *arg1 = (SteamAPICallCompleted_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamAPICallCompleted_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_cubParam);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamAPICallCompleted_t *_wrap_new_SteamAPICallCompleted_t_steam_fb253aa6b5654893() {
  SteamAPICallCompleted_t *result = 0 ;
  SteamAPICallCompleted_t *_swig_go_result;
  
  
  result = (SteamAPICallCompleted_t *)new SteamAPICallCompleted_t();
  *(SteamAPICallCompleted_t **)&_swig_go_result = (SteamAPICallCompleted_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamAPICallCompleted_t_steam_fb253aa6b5654893(SteamAPICallCompleted_t *_swig_go_0) {
  SteamAPICallCompleted_t *arg1 = (SteamAPICallCompleted_t *) 0 ;
  
  arg1 = *(SteamAPICallCompleted_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamShutdown_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamShutdown_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


SteamShutdown_t *_wrap_new_SteamShutdown_t_steam_fb253aa6b5654893() {
  SteamShutdown_t *result = 0 ;
  SteamShutdown_t *_swig_go_result;
  
  
  result = (SteamShutdown_t *)new SteamShutdown_t();
  *(SteamShutdown_t **)&_swig_go_result = (SteamShutdown_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamShutdown_t_steam_fb253aa6b5654893(SteamShutdown_t *_swig_go_0) {
  SteamShutdown_t *arg1 = (SteamShutdown_t *) 0 ;
  
  arg1 = *(SteamShutdown_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_ECheckFileSignatureInvalidSignature_steam_fb253aa6b5654893() {
  ECheckFileSignature result;
  intgo _swig_go_result;
  
  
  result = k_ECheckFileSignatureInvalidSignature;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ECheckFileSignatureValidSignature_steam_fb253aa6b5654893() {
  ECheckFileSignature result;
  intgo _swig_go_result;
  
  
  result = k_ECheckFileSignatureValidSignature;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ECheckFileSignatureFileNotFound_steam_fb253aa6b5654893() {
  ECheckFileSignature result;
  intgo _swig_go_result;
  
  
  result = k_ECheckFileSignatureFileNotFound;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ECheckFileSignatureNoSignaturesFoundForThisApp_steam_fb253aa6b5654893() {
  ECheckFileSignature result;
  intgo _swig_go_result;
  
  
  result = k_ECheckFileSignatureNoSignaturesFoundForThisApp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ECheckFileSignatureNoSignaturesFoundForThisFile_steam_fb253aa6b5654893() {
  ECheckFileSignature result;
  intgo _swig_go_result;
  
  
  result = k_ECheckFileSignatureNoSignaturesFoundForThisFile;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iCallback_CheckFileSignature_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = CheckFileSignature_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_CheckFileSignature_t_m_eCheckFileSignature_set_steam_fb253aa6b5654893(CheckFileSignature_t *_swig_go_0, intgo _swig_go_1) {
  CheckFileSignature_t *arg1 = (CheckFileSignature_t *) 0 ;
  ECheckFileSignature arg2 ;
  
  arg1 = *(CheckFileSignature_t **)&_swig_go_0; 
  arg2 = (ECheckFileSignature)_swig_go_1; 
  
  if (arg1) (arg1)->m_eCheckFileSignature = arg2;
  
}


intgo _wrap_CheckFileSignature_t_m_eCheckFileSignature_get_steam_fb253aa6b5654893(CheckFileSignature_t *_swig_go_0) {
  CheckFileSignature_t *arg1 = (CheckFileSignature_t *) 0 ;
  ECheckFileSignature result;
  intgo _swig_go_result;
  
  arg1 = *(CheckFileSignature_t **)&_swig_go_0; 
  
  result = (ECheckFileSignature) ((arg1)->m_eCheckFileSignature);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


CheckFileSignature_t *_wrap_new_CheckFileSignature_t_steam_fb253aa6b5654893() {
  CheckFileSignature_t *result = 0 ;
  CheckFileSignature_t *_swig_go_result;
  
  
  result = (CheckFileSignature_t *)new CheckFileSignature_t();
  *(CheckFileSignature_t **)&_swig_go_result = (CheckFileSignature_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_CheckFileSignature_t_steam_fb253aa6b5654893(CheckFileSignature_t *_swig_go_0) {
  CheckFileSignature_t *arg1 = (CheckFileSignature_t *) 0 ;
  
  arg1 = *(CheckFileSignature_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GamepadTextInputDismissed_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GamepadTextInputDismissed_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GamepadTextInputDismissed_t_m_bSubmitted_set_steam_fb253aa6b5654893(GamepadTextInputDismissed_t *_swig_go_0, bool _swig_go_1) {
  GamepadTextInputDismissed_t *arg1 = (GamepadTextInputDismissed_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(GamepadTextInputDismissed_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bSubmitted = arg2;
  
}


bool _wrap_GamepadTextInputDismissed_t_m_bSubmitted_get_steam_fb253aa6b5654893(GamepadTextInputDismissed_t *_swig_go_0) {
  GamepadTextInputDismissed_t *arg1 = (GamepadTextInputDismissed_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GamepadTextInputDismissed_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bSubmitted);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GamepadTextInputDismissed_t_m_unSubmittedText_set_steam_fb253aa6b5654893(GamepadTextInputDismissed_t *_swig_go_0, intgo _swig_go_1) {
  GamepadTextInputDismissed_t *arg1 = (GamepadTextInputDismissed_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(GamepadTextInputDismissed_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unSubmittedText = arg2;
  
}


intgo _wrap_GamepadTextInputDismissed_t_m_unSubmittedText_get_steam_fb253aa6b5654893(GamepadTextInputDismissed_t *_swig_go_0) {
  GamepadTextInputDismissed_t *arg1 = (GamepadTextInputDismissed_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(GamepadTextInputDismissed_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unSubmittedText);
  _swig_go_result = result; 
  return _swig_go_result;
}


GamepadTextInputDismissed_t *_wrap_new_GamepadTextInputDismissed_t_steam_fb253aa6b5654893() {
  GamepadTextInputDismissed_t *result = 0 ;
  GamepadTextInputDismissed_t *_swig_go_result;
  
  
  result = (GamepadTextInputDismissed_t *)new GamepadTextInputDismissed_t();
  *(GamepadTextInputDismissed_t **)&_swig_go_result = (GamepadTextInputDismissed_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GamepadTextInputDismissed_t_steam_fb253aa6b5654893(GamepadTextInputDismissed_t *_swig_go_0) {
  GamepadTextInputDismissed_t *arg1 = (GamepadTextInputDismissed_t *) 0 ;
  
  arg1 = *(GamepadTextInputDismissed_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_cbMaxGameServerGameDir_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cbMaxGameServerGameDir;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cbMaxGameServerMapName_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cbMaxGameServerMapName;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cbMaxGameServerGameDescription_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cbMaxGameServerGameDescription;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cbMaxGameServerName_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cbMaxGameServerName;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cbMaxGameServerTags_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cbMaxGameServerTags;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cbMaxGameServerGameData_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cbMaxGameServerGameData;
  _swig_go_result = result; 
  return _swig_go_result;
}


MatchMakingKeyValuePair_t *_wrap_new_MatchMakingKeyValuePair_t__SWIG_0_steam_fb253aa6b5654893() {
  MatchMakingKeyValuePair_t *result = 0 ;
  MatchMakingKeyValuePair_t *_swig_go_result;
  
  
  result = (MatchMakingKeyValuePair_t *)new MatchMakingKeyValuePair_t();
  *(MatchMakingKeyValuePair_t **)&_swig_go_result = (MatchMakingKeyValuePair_t *)result; 
  return _swig_go_result;
}


MatchMakingKeyValuePair_t *_wrap_new_MatchMakingKeyValuePair_t__SWIG_1_steam_fb253aa6b5654893(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  MatchMakingKeyValuePair_t *result = 0 ;
  MatchMakingKeyValuePair_t *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (MatchMakingKeyValuePair_t *)new MatchMakingKeyValuePair_t((char const *)arg1,(char const *)arg2);
  *(MatchMakingKeyValuePair_t **)&_swig_go_result = (MatchMakingKeyValuePair_t *)result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_MatchMakingKeyValuePair_t_m_szKey_set_steam_fb253aa6b5654893(MatchMakingKeyValuePair_t *_swig_go_0, _gostring_ _swig_go_1) {
  MatchMakingKeyValuePair_t *arg1 = (MatchMakingKeyValuePair_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(MatchMakingKeyValuePair_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_szKey, (const char *)arg2, 256-1);
      arg1->m_szKey[256-1] = 0;
    } else {
      arg1->m_szKey[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_MatchMakingKeyValuePair_t_m_szKey_get_steam_fb253aa6b5654893(MatchMakingKeyValuePair_t *_swig_go_0) {
  MatchMakingKeyValuePair_t *arg1 = (MatchMakingKeyValuePair_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(MatchMakingKeyValuePair_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_szKey);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_MatchMakingKeyValuePair_t_m_szValue_set_steam_fb253aa6b5654893(MatchMakingKeyValuePair_t *_swig_go_0, _gostring_ _swig_go_1) {
  MatchMakingKeyValuePair_t *arg1 = (MatchMakingKeyValuePair_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(MatchMakingKeyValuePair_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_szValue, (const char *)arg2, 256-1);
      arg1->m_szValue[256-1] = 0;
    } else {
      arg1->m_szValue[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_MatchMakingKeyValuePair_t_m_szValue_get_steam_fb253aa6b5654893(MatchMakingKeyValuePair_t *_swig_go_0) {
  MatchMakingKeyValuePair_t *arg1 = (MatchMakingKeyValuePair_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(MatchMakingKeyValuePair_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_szValue);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_MatchMakingKeyValuePair_t_steam_fb253aa6b5654893(MatchMakingKeyValuePair_t *_swig_go_0) {
  MatchMakingKeyValuePair_t *arg1 = (MatchMakingKeyValuePair_t *) 0 ;
  
  arg1 = *(MatchMakingKeyValuePair_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_eServerResponded_steam_fb253aa6b5654893() {
  EMatchMakingServerResponse result;
  intgo _swig_go_result;
  
  
  result = eServerResponded;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_eServerFailedToRespond_steam_fb253aa6b5654893() {
  EMatchMakingServerResponse result;
  intgo _swig_go_result;
  
  
  result = eServerFailedToRespond;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_eNoServersListedOnMasterServer_steam_fb253aa6b5654893() {
  EMatchMakingServerResponse result;
  intgo _swig_go_result;
  
  
  result = eNoServersListedOnMasterServer;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


servernetadr_t *_wrap_new_servernetadr_t_steam_fb253aa6b5654893() {
  servernetadr_t *result = 0 ;
  servernetadr_t *_swig_go_result;
  
  
  result = (servernetadr_t *)new servernetadr_t();
  *(servernetadr_t **)&_swig_go_result = (servernetadr_t *)result; 
  return _swig_go_result;
}


void _wrap_servernetadr_t_Init_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0, intgo _swig_go_1, short _swig_go_2, short _swig_go_3) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  unsigned int arg2 ;
  uint16 arg3 ;
  uint16 arg4 ;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = (uint16)_swig_go_2; 
  arg4 = (uint16)_swig_go_3; 
  
  (arg1)->Init(arg2,arg3,arg4);
  
}


short _wrap_servernetadr_t_GetQueryPort_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  
  result = (uint16)((servernetadr_t const *)arg1)->GetQueryPort();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_servernetadr_t_SetQueryPort_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0, short _swig_go_1) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  (arg1)->SetQueryPort(arg2);
  
}


short _wrap_servernetadr_t_GetConnectionPort_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  
  result = (uint16)((servernetadr_t const *)arg1)->GetConnectionPort();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_servernetadr_t_SetConnectionPort_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0, short _swig_go_1) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  (arg1)->SetConnectionPort(arg2);
  
}


intgo _wrap_servernetadr_t_GetIP_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  
  result = (uint32)((servernetadr_t const *)arg1)->GetIP();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_servernetadr_t_SetIP_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0, intgo _swig_go_1) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  (arg1)->SetIP(arg2);
  
}


_gostring_ _wrap_servernetadr_t_GetConnectionAddressString_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  
  result = (char *)((servernetadr_t const *)arg1)->GetConnectionAddressString();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_servernetadr_t_GetQueryAddressString_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  
  result = (char *)((servernetadr_t const *)arg1)->GetQueryAddressString();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_servernetadr_t_steam_fb253aa6b5654893(servernetadr_t *_swig_go_0) {
  servernetadr_t *arg1 = (servernetadr_t *) 0 ;
  
  arg1 = *(servernetadr_t **)&_swig_go_0; 
  
  delete arg1;
  
}


gameserveritem_t *_wrap_new_gameserveritem_t_steam_fb253aa6b5654893() {
  gameserveritem_t *result = 0 ;
  gameserveritem_t *_swig_go_result;
  
  
  result = (gameserveritem_t *)new gameserveritem_t();
  *(gameserveritem_t **)&_swig_go_result = (gameserveritem_t *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_gameserveritem_t_GetName_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (char *)((gameserveritem_t const *)arg1)->GetName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_SetName_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, _gostring_ _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->SetName((char const *)arg2);
  
  free(arg2); 
}


void _wrap_gameserveritem_t_m_NetAdr_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, servernetadr_t *_swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  servernetadr_t *arg2 = (servernetadr_t *) 0 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = *(servernetadr_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_NetAdr = *arg2;
  
}


servernetadr_t *_wrap_gameserveritem_t_m_NetAdr_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  servernetadr_t *result = 0 ;
  servernetadr_t *_swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (servernetadr_t *)& ((arg1)->m_NetAdr);
  *(servernetadr_t **)&_swig_go_result = (servernetadr_t *)result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_nPing_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, intgo _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPing = arg2;
  
}


intgo _wrap_gameserveritem_t_m_nPing_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nPing);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_bHadSuccessfulResponse_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, bool _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bHadSuccessfulResponse = arg2;
  
}


bool _wrap_gameserveritem_t_m_bHadSuccessfulResponse_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bHadSuccessfulResponse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_bDoNotRefresh_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, bool _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bDoNotRefresh = arg2;
  
}


bool _wrap_gameserveritem_t_m_bDoNotRefresh_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bDoNotRefresh);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_szGameDir_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, _gostring_ _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_szGameDir, (const char *)arg2, k_cbMaxGameServerGameDir-1);
      arg1->m_szGameDir[k_cbMaxGameServerGameDir-1] = 0;
    } else {
      arg1->m_szGameDir[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_gameserveritem_t_m_szGameDir_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_szGameDir);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_szMap_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, _gostring_ _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_szMap, (const char *)arg2, k_cbMaxGameServerMapName-1);
      arg1->m_szMap[k_cbMaxGameServerMapName-1] = 0;
    } else {
      arg1->m_szMap[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_gameserveritem_t_m_szMap_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_szMap);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_szGameDescription_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, _gostring_ _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_szGameDescription, (const char *)arg2, k_cbMaxGameServerGameDescription-1);
      arg1->m_szGameDescription[k_cbMaxGameServerGameDescription-1] = 0;
    } else {
      arg1->m_szGameDescription[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_gameserveritem_t_m_szGameDescription_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_szGameDescription);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_nAppID_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, intgo _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_gameserveritem_t_m_nAppID_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_nPlayers_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, intgo _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPlayers = arg2;
  
}


intgo _wrap_gameserveritem_t_m_nPlayers_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nPlayers);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_nMaxPlayers_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, intgo _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nMaxPlayers = arg2;
  
}


intgo _wrap_gameserveritem_t_m_nMaxPlayers_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nMaxPlayers);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_nBotPlayers_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, intgo _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nBotPlayers = arg2;
  
}


intgo _wrap_gameserveritem_t_m_nBotPlayers_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nBotPlayers);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_bPassword_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, bool _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bPassword = arg2;
  
}


bool _wrap_gameserveritem_t_m_bPassword_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bPassword);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_bSecure_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, bool _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bSecure = arg2;
  
}


bool _wrap_gameserveritem_t_m_bSecure_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bSecure);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_ulTimeLastPlayed_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, intgo _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulTimeLastPlayed = arg2;
  
}


intgo _wrap_gameserveritem_t_m_ulTimeLastPlayed_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_ulTimeLastPlayed);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_nServerVersion_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, intgo _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nServerVersion = arg2;
  
}


intgo _wrap_gameserveritem_t_m_nServerVersion_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nServerVersion);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_szGameTags_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, _gostring_ _swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_szGameTags, (const char *)arg2, k_cbMaxGameServerTags-1);
      arg1->m_szGameTags[k_cbMaxGameServerTags-1] = 0;
    } else {
      arg1->m_szGameTags[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_gameserveritem_t_m_szGameTags_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_szGameTags);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_gameserveritem_t_m_steamID_set_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0, CSteamID *_swig_go_1) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamID = *arg2;
  
}


CSteamID *_wrap_gameserveritem_t_m_steamID_get_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamID);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_delete_gameserveritem_t_steam_fb253aa6b5654893(gameserveritem_t *_swig_go_0) {
  gameserveritem_t *arg1 = (gameserveritem_t *) 0 ;
  
  arg1 = *(gameserveritem_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_ELobbyTypePrivate_steam_fb253aa6b5654893() {
  ELobbyType result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyTypePrivate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyTypeFriendsOnly_steam_fb253aa6b5654893() {
  ELobbyType result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyTypeFriendsOnly;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyTypePublic_steam_fb253aa6b5654893() {
  ELobbyType result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyTypePublic;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyTypeInvisible_steam_fb253aa6b5654893() {
  ELobbyType result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyTypeInvisible;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyComparisonEqualToOrLessThan_steam_fb253aa6b5654893() {
  ELobbyComparison result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyComparisonEqualToOrLessThan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyComparisonLessThan_steam_fb253aa6b5654893() {
  ELobbyComparison result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyComparisonLessThan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyComparisonEqual_steam_fb253aa6b5654893() {
  ELobbyComparison result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyComparisonEqual;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyComparisonGreaterThan_steam_fb253aa6b5654893() {
  ELobbyComparison result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyComparisonGreaterThan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyComparisonEqualToOrGreaterThan_steam_fb253aa6b5654893() {
  ELobbyComparison result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyComparisonEqualToOrGreaterThan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyComparisonNotEqual_steam_fb253aa6b5654893() {
  ELobbyComparison result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyComparisonNotEqual;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyDistanceFilterClose_steam_fb253aa6b5654893() {
  ELobbyDistanceFilter result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyDistanceFilterClose;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyDistanceFilterDefault_steam_fb253aa6b5654893() {
  ELobbyDistanceFilter result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyDistanceFilterDefault;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyDistanceFilterFar_steam_fb253aa6b5654893() {
  ELobbyDistanceFilter result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyDistanceFilterFar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELobbyDistanceFilterWorldwide_steam_fb253aa6b5654893() {
  ELobbyDistanceFilter result;
  intgo _swig_go_result;
  
  
  result = k_ELobbyDistanceFilterWorldwide;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamMatchmaking_GetFavoriteGameCount_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  result = (int)(arg1)->GetFavoriteGameCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_GetFavoriteGame_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3, short *_swig_go_4, short *_swig_go_5, intgo *_swig_go_6, intgo *_swig_go_7) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  int arg2 ;
  AppId_t *arg3 = (AppId_t *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  uint16 *arg5 = (uint16 *) 0 ;
  uint16 *arg6 = (uint16 *) 0 ;
  uint32 *arg7 = (uint32 *) 0 ;
  uint32 *arg8 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(AppId_t **)&_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  arg5 = *(uint16 **)&_swig_go_4; 
  arg6 = *(uint16 **)&_swig_go_5; 
  arg7 = *(uint32 **)&_swig_go_6; 
  arg8 = *(uint32 **)&_swig_go_7; 
  
  result = (bool)(arg1)->GetFavoriteGame(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamMatchmaking_AddFavoriteGame_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, short _swig_go_3, short _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  AppId_t arg2 ;
  uint32 arg3 ;
  uint16 arg4 ;
  uint16 arg5 ;
  uint32 arg6 ;
  uint32 arg7 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint16)_swig_go_3; 
  arg5 = (uint16)_swig_go_4; 
  arg6 = (uint32)_swig_go_5; 
  arg7 = (uint32)_swig_go_6; 
  
  result = (int)(arg1)->AddFavoriteGame(arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_RemoveFavoriteGame_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, short _swig_go_3, short _swig_go_4, intgo _swig_go_5) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  AppId_t arg2 ;
  uint32 arg3 ;
  uint16 arg4 ;
  uint16 arg5 ;
  uint32 arg6 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint16)_swig_go_3; 
  arg5 = (uint16)_swig_go_4; 
  arg6 = (uint32)_swig_go_5; 
  
  result = (bool)(arg1)->RemoveFavoriteGame(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamMatchmaking_RequestLobbyList_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  result = (SteamAPICall_t)(arg1)->RequestLobbyList();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamMatchmaking_AddRequestLobbyListStringFilter_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  ELobbyComparison arg4 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (ELobbyComparison)_swig_go_3; 
  
  (arg1)->AddRequestLobbyListStringFilter((char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_ISteamMatchmaking_AddRequestLobbyListNumericalFilter_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  ELobbyComparison arg4 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = (ELobbyComparison)_swig_go_3; 
  
  (arg1)->AddRequestLobbyListNumericalFilter((char const *)arg2,arg3,arg4);
  
  free(arg2); 
}


void _wrap_ISteamMatchmaking_AddRequestLobbyListNearValueFilter_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  (arg1)->AddRequestLobbyListNearValueFilter((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_ISteamMatchmaking_AddRequestLobbyListFilterSlotsAvailable_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, intgo _swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  int arg2 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->AddRequestLobbyListFilterSlotsAvailable(arg2);
  
}


void _wrap_ISteamMatchmaking_AddRequestLobbyListDistanceFilter_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, intgo _swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  ELobbyDistanceFilter arg2 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  arg2 = (ELobbyDistanceFilter)_swig_go_1; 
  
  (arg1)->AddRequestLobbyListDistanceFilter(arg2);
  
}


void _wrap_ISteamMatchmaking_AddRequestLobbyListResultCountFilter_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, intgo _swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  int arg2 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->AddRequestLobbyListResultCountFilter(arg2);
  
}


void _wrap_ISteamMatchmaking_AddRequestLobbyListCompatibleMembersFilter_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  (arg1)->AddRequestLobbyListCompatibleMembersFilter(arg2);
  
}


CSteamID *_wrap_ISteamMatchmaking_GetLobbyByIndex_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, intgo _swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  int arg2 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (arg1)->GetLobbyByIndex(arg2);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


long long _wrap_ISteamMatchmaking_CreateLobby_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  ELobbyType arg2 ;
  int arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  arg2 = (ELobbyType)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->CreateLobby(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamMatchmaking_JoinLobby_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (SteamAPICall_t)(arg1)->JoinLobby(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamMatchmaking_LeaveLobby_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  (arg1)->LeaveLobby(arg2);
  
}


bool _wrap_ISteamMatchmaking_InviteUserToLobby_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, CSteamID *_swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID arg3 ;
  CSteamID *argp2 ;
  CSteamID *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  
  result = (bool)(arg1)->InviteUserToLobby(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamMatchmaking_GetNumLobbyMembers_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetNumLobbyMembers(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamMatchmaking_GetLobbyMemberByIndex_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *argp2 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = (arg1)->GetLobbyMemberByIndex(arg2,arg3);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamMatchmaking_GetLobbyData_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  CSteamID *argp2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (char *)(arg1)->GetLobbyData(arg2,(char const *)arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_SetLobbyData_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->SetLobbyData(arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


intgo _wrap_ISteamMatchmaking_GetLobbyDataCount_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetLobbyDataCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_GetLobbyDataByIndex_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  int arg7 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (int)_swig_go_6; 
  
  result = (bool)(arg1)->GetLobbyDataByIndex(arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  free(arg4); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_DeleteLobbyData_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->DeleteLobbyData(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamMatchmaking_GetLobbyMemberData_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, CSteamID *_swig_go_2, _gostring_ _swig_go_3) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID arg3 ;
  char *arg4 = (char *) 0 ;
  CSteamID *argp2 ;
  CSteamID *argp3 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (char *)(arg1)->GetLobbyMemberData(arg2,arg3,(char const *)arg4);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg4); 
  return _swig_go_result;
}


void _wrap_ISteamMatchmaking_SetLobbyMemberData_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  CSteamID *argp2 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  (arg1)->SetLobbyMemberData(arg2,(char const *)arg3,(char const *)arg4);
  
  free(arg3); 
  free(arg4); 
}


bool _wrap_ISteamMatchmaking_SendLobbyChatMsg_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)(arg1)->SendLobbyChatMsg(arg2,(void const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamMatchmaking_GetLobbyChatEntry_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2, CSteamID *_swig_go_3, void *_swig_go_4, intgo _swig_go_5, EChatEntryType *_swig_go_6) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *arg4 = (CSteamID *) 0 ;
  void *arg5 = (void *) 0 ;
  int arg6 ;
  EChatEntryType *arg7 = (EChatEntryType *) 0 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(CSteamID **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(EChatEntryType **)&_swig_go_6; 
  
  result = (int)(arg1)->GetLobbyChatEntry(arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_RequestLobbyData_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (bool)(arg1)->RequestLobbyData(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamMatchmaking_SetLobbyGameServer_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2, short _swig_go_3, CSteamID *_swig_go_4) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  uint32 arg3 ;
  uint16 arg4 ;
  CSteamID arg5 ;
  CSteamID *argp2 ;
  CSteamID *argp5 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint16)_swig_go_3; 
  
  argp5 = (CSteamID *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg5 = (CSteamID)*argp5;
  
  
  (arg1)->SetLobbyGameServer(arg2,arg3,arg4,arg5);
  
}


bool _wrap_ISteamMatchmaking_GetLobbyGameServer_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, intgo *_swig_go_2, short *_swig_go_3, CSteamID *_swig_go_4) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  uint32 *arg3 = (uint32 *) 0 ;
  uint16 *arg4 = (uint16 *) 0 ;
  CSteamID *arg5 = (CSteamID *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = *(uint32 **)&_swig_go_2; 
  arg4 = *(uint16 **)&_swig_go_3; 
  arg5 = *(CSteamID **)&_swig_go_4; 
  
  result = (bool)(arg1)->GetLobbyGameServer(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_SetLobbyMemberLimit_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->SetLobbyMemberLimit(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamMatchmaking_GetLobbyMemberLimit_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (int)(arg1)->GetLobbyMemberLimit(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_SetLobbyType_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  ELobbyType arg3 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (ELobbyType)_swig_go_2; 
  
  result = (bool)(arg1)->SetLobbyType(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_SetLobbyJoinable_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, bool _swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  bool arg3 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetLobbyJoinable(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamMatchmaking_GetLobbyOwner_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (arg1)->GetLobbyOwner(arg2);
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_SetLobbyOwner_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, CSteamID *_swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID arg3 ;
  CSteamID *argp2 ;
  CSteamID *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  
  result = (bool)(arg1)->SetLobbyOwner(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMatchmaking_SetLinkedLobby_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0, CSteamID *_swig_go_1, CSteamID *_swig_go_2) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  CSteamID arg2 ;
  CSteamID arg3 ;
  CSteamID *argp2 ;
  CSteamID *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  
  result = (bool)(arg1)->SetLinkedLobby(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamMatchmaking_steam_fb253aa6b5654893(ISteamMatchmaking *_swig_go_0) {
  ISteamMatchmaking *arg1 = (ISteamMatchmaking *) 0 ;
  
  arg1 = *(ISteamMatchmaking **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ISteamMatchmakingServerListResponse_ServerResponded_steam_fb253aa6b5654893(ISteamMatchmakingServerListResponse *_swig_go_0, HServerListRequest _swig_go_1, intgo _swig_go_2) {
  ISteamMatchmakingServerListResponse *arg1 = (ISteamMatchmakingServerListResponse *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  int arg3 ;
  
  arg1 = *(ISteamMatchmakingServerListResponse **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->ServerResponded(arg2,arg3);
  
}


void _wrap_ISteamMatchmakingServerListResponse_ServerFailedToRespond_steam_fb253aa6b5654893(ISteamMatchmakingServerListResponse *_swig_go_0, HServerListRequest _swig_go_1, intgo _swig_go_2) {
  ISteamMatchmakingServerListResponse *arg1 = (ISteamMatchmakingServerListResponse *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  int arg3 ;
  
  arg1 = *(ISteamMatchmakingServerListResponse **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->ServerFailedToRespond(arg2,arg3);
  
}


void _wrap_ISteamMatchmakingServerListResponse_RefreshComplete_steam_fb253aa6b5654893(ISteamMatchmakingServerListResponse *_swig_go_0, HServerListRequest _swig_go_1, intgo _swig_go_2) {
  ISteamMatchmakingServerListResponse *arg1 = (ISteamMatchmakingServerListResponse *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  EMatchMakingServerResponse arg3 ;
  
  arg1 = *(ISteamMatchmakingServerListResponse **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  arg3 = (EMatchMakingServerResponse)_swig_go_2; 
  
  (arg1)->RefreshComplete(arg2,arg3);
  
}


void _wrap_delete_ISteamMatchmakingServerListResponse_steam_fb253aa6b5654893(ISteamMatchmakingServerListResponse *_swig_go_0) {
  ISteamMatchmakingServerListResponse *arg1 = (ISteamMatchmakingServerListResponse *) 0 ;
  
  arg1 = *(ISteamMatchmakingServerListResponse **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ISteamMatchmakingPingResponse_ServerResponded_steam_fb253aa6b5654893(ISteamMatchmakingPingResponse *_swig_go_0, gameserveritem_t *_swig_go_1) {
  ISteamMatchmakingPingResponse *arg1 = (ISteamMatchmakingPingResponse *) 0 ;
  gameserveritem_t *arg2 = 0 ;
  
  arg1 = *(ISteamMatchmakingPingResponse **)&_swig_go_0; 
  arg2 = *(gameserveritem_t **)&_swig_go_1; 
  
  (arg1)->ServerResponded(*arg2);
  
}


void _wrap_ISteamMatchmakingPingResponse_ServerFailedToRespond_steam_fb253aa6b5654893(ISteamMatchmakingPingResponse *_swig_go_0) {
  ISteamMatchmakingPingResponse *arg1 = (ISteamMatchmakingPingResponse *) 0 ;
  
  arg1 = *(ISteamMatchmakingPingResponse **)&_swig_go_0; 
  
  (arg1)->ServerFailedToRespond();
  
}


void _wrap_delete_ISteamMatchmakingPingResponse_steam_fb253aa6b5654893(ISteamMatchmakingPingResponse *_swig_go_0) {
  ISteamMatchmakingPingResponse *arg1 = (ISteamMatchmakingPingResponse *) 0 ;
  
  arg1 = *(ISteamMatchmakingPingResponse **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ISteamMatchmakingPlayersResponse_AddPlayerToList_steam_fb253aa6b5654893(ISteamMatchmakingPlayersResponse *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, float _swig_go_3) {
  ISteamMatchmakingPlayersResponse *arg1 = (ISteamMatchmakingPlayersResponse *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  float arg4 ;
  
  arg1 = *(ISteamMatchmakingPlayersResponse **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  (arg1)->AddPlayerToList((char const *)arg2,arg3,arg4);
  
  free(arg2); 
}


void _wrap_ISteamMatchmakingPlayersResponse_PlayersFailedToRespond_steam_fb253aa6b5654893(ISteamMatchmakingPlayersResponse *_swig_go_0) {
  ISteamMatchmakingPlayersResponse *arg1 = (ISteamMatchmakingPlayersResponse *) 0 ;
  
  arg1 = *(ISteamMatchmakingPlayersResponse **)&_swig_go_0; 
  
  (arg1)->PlayersFailedToRespond();
  
}


void _wrap_ISteamMatchmakingPlayersResponse_PlayersRefreshComplete_steam_fb253aa6b5654893(ISteamMatchmakingPlayersResponse *_swig_go_0) {
  ISteamMatchmakingPlayersResponse *arg1 = (ISteamMatchmakingPlayersResponse *) 0 ;
  
  arg1 = *(ISteamMatchmakingPlayersResponse **)&_swig_go_0; 
  
  (arg1)->PlayersRefreshComplete();
  
}


void _wrap_delete_ISteamMatchmakingPlayersResponse_steam_fb253aa6b5654893(ISteamMatchmakingPlayersResponse *_swig_go_0) {
  ISteamMatchmakingPlayersResponse *arg1 = (ISteamMatchmakingPlayersResponse *) 0 ;
  
  arg1 = *(ISteamMatchmakingPlayersResponse **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ISteamMatchmakingRulesResponse_RulesResponded_steam_fb253aa6b5654893(ISteamMatchmakingRulesResponse *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  ISteamMatchmakingRulesResponse *arg1 = (ISteamMatchmakingRulesResponse *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(ISteamMatchmakingRulesResponse **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->RulesResponded((char const *)arg2,(char const *)arg3);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_ISteamMatchmakingRulesResponse_RulesFailedToRespond_steam_fb253aa6b5654893(ISteamMatchmakingRulesResponse *_swig_go_0) {
  ISteamMatchmakingRulesResponse *arg1 = (ISteamMatchmakingRulesResponse *) 0 ;
  
  arg1 = *(ISteamMatchmakingRulesResponse **)&_swig_go_0; 
  
  (arg1)->RulesFailedToRespond();
  
}


void _wrap_ISteamMatchmakingRulesResponse_RulesRefreshComplete_steam_fb253aa6b5654893(ISteamMatchmakingRulesResponse *_swig_go_0) {
  ISteamMatchmakingRulesResponse *arg1 = (ISteamMatchmakingRulesResponse *) 0 ;
  
  arg1 = *(ISteamMatchmakingRulesResponse **)&_swig_go_0; 
  
  (arg1)->RulesRefreshComplete();
  
}


void _wrap_delete_ISteamMatchmakingRulesResponse_steam_fb253aa6b5654893(ISteamMatchmakingRulesResponse *_swig_go_0) {
  ISteamMatchmakingRulesResponse *arg1 = (ISteamMatchmakingRulesResponse *) 0 ;
  
  arg1 = *(ISteamMatchmakingRulesResponse **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_HSERVERQUERY_INVALID_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)HSERVERQUERY_INVALID;
  _swig_go_result = result; 
  return _swig_go_result;
}


HServerListRequest _wrap_ISteamMatchmakingServers_RequestInternetServerList_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1, MatchMakingKeyValuePair_t **_swig_go_2, intgo _swig_go_3, ISteamMatchmakingServerListResponse *_swig_go_4) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  AppId_t arg2 ;
  MatchMakingKeyValuePair_t **arg3 = (MatchMakingKeyValuePair_t **) 0 ;
  uint32 arg4 ;
  ISteamMatchmakingServerListResponse *arg5 = (ISteamMatchmakingServerListResponse *) 0 ;
  HServerListRequest result;
  HServerListRequest _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = *(MatchMakingKeyValuePair_t ***)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(ISteamMatchmakingServerListResponse **)&_swig_go_4; 
  
  result = (HServerListRequest)(arg1)->RequestInternetServerList(arg2,arg3,arg4,arg5);
  *(HServerListRequest *)&_swig_go_result = (HServerListRequest)result; 
  return _swig_go_result;
}


HServerListRequest _wrap_ISteamMatchmakingServers_RequestLANServerList_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1, ISteamMatchmakingServerListResponse *_swig_go_2) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  AppId_t arg2 ;
  ISteamMatchmakingServerListResponse *arg3 = (ISteamMatchmakingServerListResponse *) 0 ;
  HServerListRequest result;
  HServerListRequest _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = *(ISteamMatchmakingServerListResponse **)&_swig_go_2; 
  
  result = (HServerListRequest)(arg1)->RequestLANServerList(arg2,arg3);
  *(HServerListRequest *)&_swig_go_result = (HServerListRequest)result; 
  return _swig_go_result;
}


HServerListRequest _wrap_ISteamMatchmakingServers_RequestFriendsServerList_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1, MatchMakingKeyValuePair_t **_swig_go_2, intgo _swig_go_3, ISteamMatchmakingServerListResponse *_swig_go_4) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  AppId_t arg2 ;
  MatchMakingKeyValuePair_t **arg3 = (MatchMakingKeyValuePair_t **) 0 ;
  uint32 arg4 ;
  ISteamMatchmakingServerListResponse *arg5 = (ISteamMatchmakingServerListResponse *) 0 ;
  HServerListRequest result;
  HServerListRequest _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = *(MatchMakingKeyValuePair_t ***)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(ISteamMatchmakingServerListResponse **)&_swig_go_4; 
  
  result = (HServerListRequest)(arg1)->RequestFriendsServerList(arg2,arg3,arg4,arg5);
  *(HServerListRequest *)&_swig_go_result = (HServerListRequest)result; 
  return _swig_go_result;
}


HServerListRequest _wrap_ISteamMatchmakingServers_RequestFavoritesServerList_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1, MatchMakingKeyValuePair_t **_swig_go_2, intgo _swig_go_3, ISteamMatchmakingServerListResponse *_swig_go_4) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  AppId_t arg2 ;
  MatchMakingKeyValuePair_t **arg3 = (MatchMakingKeyValuePair_t **) 0 ;
  uint32 arg4 ;
  ISteamMatchmakingServerListResponse *arg5 = (ISteamMatchmakingServerListResponse *) 0 ;
  HServerListRequest result;
  HServerListRequest _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = *(MatchMakingKeyValuePair_t ***)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(ISteamMatchmakingServerListResponse **)&_swig_go_4; 
  
  result = (HServerListRequest)(arg1)->RequestFavoritesServerList(arg2,arg3,arg4,arg5);
  *(HServerListRequest *)&_swig_go_result = (HServerListRequest)result; 
  return _swig_go_result;
}


HServerListRequest _wrap_ISteamMatchmakingServers_RequestHistoryServerList_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1, MatchMakingKeyValuePair_t **_swig_go_2, intgo _swig_go_3, ISteamMatchmakingServerListResponse *_swig_go_4) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  AppId_t arg2 ;
  MatchMakingKeyValuePair_t **arg3 = (MatchMakingKeyValuePair_t **) 0 ;
  uint32 arg4 ;
  ISteamMatchmakingServerListResponse *arg5 = (ISteamMatchmakingServerListResponse *) 0 ;
  HServerListRequest result;
  HServerListRequest _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = *(MatchMakingKeyValuePair_t ***)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(ISteamMatchmakingServerListResponse **)&_swig_go_4; 
  
  result = (HServerListRequest)(arg1)->RequestHistoryServerList(arg2,arg3,arg4,arg5);
  *(HServerListRequest *)&_swig_go_result = (HServerListRequest)result; 
  return _swig_go_result;
}


HServerListRequest _wrap_ISteamMatchmakingServers_RequestSpectatorServerList_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1, MatchMakingKeyValuePair_t **_swig_go_2, intgo _swig_go_3, ISteamMatchmakingServerListResponse *_swig_go_4) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  AppId_t arg2 ;
  MatchMakingKeyValuePair_t **arg3 = (MatchMakingKeyValuePair_t **) 0 ;
  uint32 arg4 ;
  ISteamMatchmakingServerListResponse *arg5 = (ISteamMatchmakingServerListResponse *) 0 ;
  HServerListRequest result;
  HServerListRequest _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = *(MatchMakingKeyValuePair_t ***)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(ISteamMatchmakingServerListResponse **)&_swig_go_4; 
  
  result = (HServerListRequest)(arg1)->RequestSpectatorServerList(arg2,arg3,arg4,arg5);
  *(HServerListRequest *)&_swig_go_result = (HServerListRequest)result; 
  return _swig_go_result;
}


void _wrap_ISteamMatchmakingServers_ReleaseRequest_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, HServerListRequest _swig_go_1) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  
  (arg1)->ReleaseRequest(arg2);
  
}


gameserveritem_t *_wrap_ISteamMatchmakingServers_GetServerDetails_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, HServerListRequest _swig_go_1, intgo _swig_go_2) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  int arg3 ;
  gameserveritem_t *result = 0 ;
  gameserveritem_t *_swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (gameserveritem_t *)(arg1)->GetServerDetails(arg2,arg3);
  *(gameserveritem_t **)&_swig_go_result = (gameserveritem_t *)result; 
  return _swig_go_result;
}


void _wrap_ISteamMatchmakingServers_CancelQuery_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, HServerListRequest _swig_go_1) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  
  (arg1)->CancelQuery(arg2);
  
}


void _wrap_ISteamMatchmakingServers_RefreshQuery_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, HServerListRequest _swig_go_1) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  
  (arg1)->RefreshQuery(arg2);
  
}


bool _wrap_ISteamMatchmakingServers_IsRefreshing_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, HServerListRequest _swig_go_1) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  
  result = (bool)(arg1)->IsRefreshing(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamMatchmakingServers_GetServerCount_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, HServerListRequest _swig_go_1) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  
  result = (int)(arg1)->GetServerCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamMatchmakingServers_RefreshServer_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, HServerListRequest _swig_go_1, intgo _swig_go_2) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  HServerListRequest arg2 = (HServerListRequest) 0 ;
  int arg3 ;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = *(HServerListRequest *)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->RefreshServer(arg2,arg3);
  
}


intgo _wrap_ISteamMatchmakingServers_PingServer_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1, short _swig_go_2, ISteamMatchmakingPingResponse *_swig_go_3) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  uint32 arg2 ;
  uint16 arg3 ;
  ISteamMatchmakingPingResponse *arg4 = (ISteamMatchmakingPingResponse *) 0 ;
  HServerQuery result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  arg3 = (uint16)_swig_go_2; 
  arg4 = *(ISteamMatchmakingPingResponse **)&_swig_go_3; 
  
  result = (HServerQuery)(arg1)->PingServer(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamMatchmakingServers_PlayerDetails_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1, short _swig_go_2, ISteamMatchmakingPlayersResponse *_swig_go_3) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  uint32 arg2 ;
  uint16 arg3 ;
  ISteamMatchmakingPlayersResponse *arg4 = (ISteamMatchmakingPlayersResponse *) 0 ;
  HServerQuery result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  arg3 = (uint16)_swig_go_2; 
  arg4 = *(ISteamMatchmakingPlayersResponse **)&_swig_go_3; 
  
  result = (HServerQuery)(arg1)->PlayerDetails(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamMatchmakingServers_ServerRules_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1, short _swig_go_2, ISteamMatchmakingRulesResponse *_swig_go_3) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  uint32 arg2 ;
  uint16 arg3 ;
  ISteamMatchmakingRulesResponse *arg4 = (ISteamMatchmakingRulesResponse *) 0 ;
  HServerQuery result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  arg3 = (uint16)_swig_go_2; 
  arg4 = *(ISteamMatchmakingRulesResponse **)&_swig_go_3; 
  
  result = (HServerQuery)(arg1)->ServerRules(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamMatchmakingServers_CancelServerQuery_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0, intgo _swig_go_1) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  HServerQuery arg2 ;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  arg2 = (HServerQuery)_swig_go_1; 
  
  (arg1)->CancelServerQuery(arg2);
  
}


void _wrap_delete_ISteamMatchmakingServers_steam_fb253aa6b5654893(ISteamMatchmakingServers *_swig_go_0) {
  ISteamMatchmakingServers *arg1 = (ISteamMatchmakingServers *) 0 ;
  
  arg1 = *(ISteamMatchmakingServers **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_unFavoriteFlagNone_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_unFavoriteFlagNone;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_unFavoriteFlagFavorite_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_unFavoriteFlagFavorite;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_unFavoriteFlagHistory_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_unFavoriteFlagHistory;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatMemberStateChangeEntered_steam_fb253aa6b5654893() {
  EChatMemberStateChange result;
  intgo _swig_go_result;
  
  
  result = k_EChatMemberStateChangeEntered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatMemberStateChangeLeft_steam_fb253aa6b5654893() {
  EChatMemberStateChange result;
  intgo _swig_go_result;
  
  
  result = k_EChatMemberStateChangeLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatMemberStateChangeDisconnected_steam_fb253aa6b5654893() {
  EChatMemberStateChange result;
  intgo _swig_go_result;
  
  
  result = k_EChatMemberStateChangeDisconnected;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatMemberStateChangeKicked_steam_fb253aa6b5654893() {
  EChatMemberStateChange result;
  intgo _swig_go_result;
  
  
  result = k_EChatMemberStateChangeKicked;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EChatMemberStateChangeBanned_steam_fb253aa6b5654893() {
  EChatMemberStateChange result;
  intgo _swig_go_result;
  
  
  result = k_EChatMemberStateChangeBanned;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iCallback_FavoritesListChanged_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = FavoritesListChanged_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FavoritesListChanged_t_m_nIP_set_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0, intgo _swig_go_1) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nIP = arg2;
  
}


intgo _wrap_FavoritesListChanged_t_m_nIP_get_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nIP);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FavoritesListChanged_t_m_nQueryPort_set_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0, intgo _swig_go_1) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nQueryPort = arg2;
  
}


intgo _wrap_FavoritesListChanged_t_m_nQueryPort_get_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nQueryPort);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FavoritesListChanged_t_m_nConnPort_set_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0, intgo _swig_go_1) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nConnPort = arg2;
  
}


intgo _wrap_FavoritesListChanged_t_m_nConnPort_get_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nConnPort);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FavoritesListChanged_t_m_nAppID_set_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0, intgo _swig_go_1) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_FavoritesListChanged_t_m_nAppID_get_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FavoritesListChanged_t_m_nFlags_set_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0, intgo _swig_go_1) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nFlags = arg2;
  
}


intgo _wrap_FavoritesListChanged_t_m_nFlags_get_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FavoritesListChanged_t_m_bAdd_set_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0, bool _swig_go_1) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bAdd = arg2;
  
}


bool _wrap_FavoritesListChanged_t_m_bAdd_get_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bAdd);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FavoritesListChanged_t_m_unAccountId_set_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0, intgo _swig_go_1) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  AccountID_t arg2 ;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  arg2 = (AccountID_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_unAccountId = arg2;
  
}


intgo _wrap_FavoritesListChanged_t_m_unAccountId_get_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  AccountID_t result;
  intgo _swig_go_result;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  
  result = (AccountID_t) ((arg1)->m_unAccountId);
  _swig_go_result = result; 
  return _swig_go_result;
}


FavoritesListChanged_t *_wrap_new_FavoritesListChanged_t_steam_fb253aa6b5654893() {
  FavoritesListChanged_t *result = 0 ;
  FavoritesListChanged_t *_swig_go_result;
  
  
  result = (FavoritesListChanged_t *)new FavoritesListChanged_t();
  *(FavoritesListChanged_t **)&_swig_go_result = (FavoritesListChanged_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_FavoritesListChanged_t_steam_fb253aa6b5654893(FavoritesListChanged_t *_swig_go_0) {
  FavoritesListChanged_t *arg1 = (FavoritesListChanged_t *) 0 ;
  
  arg1 = *(FavoritesListChanged_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LobbyInvite_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LobbyInvite_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyInvite_t_m_ulSteamIDUser_set_steam_fb253aa6b5654893(LobbyInvite_t *_swig_go_0, long long _swig_go_1) {
  LobbyInvite_t *arg1 = (LobbyInvite_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyInvite_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDUser = arg2;
  
}


long long _wrap_LobbyInvite_t_m_ulSteamIDUser_get_steam_fb253aa6b5654893(LobbyInvite_t *_swig_go_0) {
  LobbyInvite_t *arg1 = (LobbyInvite_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyInvite_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDUser);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyInvite_t_m_ulSteamIDLobby_set_steam_fb253aa6b5654893(LobbyInvite_t *_swig_go_0, long long _swig_go_1) {
  LobbyInvite_t *arg1 = (LobbyInvite_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyInvite_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDLobby = arg2;
  
}


long long _wrap_LobbyInvite_t_m_ulSteamIDLobby_get_steam_fb253aa6b5654893(LobbyInvite_t *_swig_go_0) {
  LobbyInvite_t *arg1 = (LobbyInvite_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyInvite_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDLobby);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyInvite_t_m_ulGameID_set_steam_fb253aa6b5654893(LobbyInvite_t *_swig_go_0, long long _swig_go_1) {
  LobbyInvite_t *arg1 = (LobbyInvite_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyInvite_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulGameID = arg2;
  
}


long long _wrap_LobbyInvite_t_m_ulGameID_get_steam_fb253aa6b5654893(LobbyInvite_t *_swig_go_0) {
  LobbyInvite_t *arg1 = (LobbyInvite_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyInvite_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulGameID);
  _swig_go_result = result; 
  return _swig_go_result;
}


LobbyInvite_t *_wrap_new_LobbyInvite_t_steam_fb253aa6b5654893() {
  LobbyInvite_t *result = 0 ;
  LobbyInvite_t *_swig_go_result;
  
  
  result = (LobbyInvite_t *)new LobbyInvite_t();
  *(LobbyInvite_t **)&_swig_go_result = (LobbyInvite_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LobbyInvite_t_steam_fb253aa6b5654893(LobbyInvite_t *_swig_go_0) {
  LobbyInvite_t *arg1 = (LobbyInvite_t *) 0 ;
  
  arg1 = *(LobbyInvite_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LobbyEnter_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LobbyEnter_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyEnter_t_m_ulSteamIDLobby_set_steam_fb253aa6b5654893(LobbyEnter_t *_swig_go_0, long long _swig_go_1) {
  LobbyEnter_t *arg1 = (LobbyEnter_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyEnter_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDLobby = arg2;
  
}


long long _wrap_LobbyEnter_t_m_ulSteamIDLobby_get_steam_fb253aa6b5654893(LobbyEnter_t *_swig_go_0) {
  LobbyEnter_t *arg1 = (LobbyEnter_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyEnter_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDLobby);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyEnter_t_m_rgfChatPermissions_set_steam_fb253aa6b5654893(LobbyEnter_t *_swig_go_0, intgo _swig_go_1) {
  LobbyEnter_t *arg1 = (LobbyEnter_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(LobbyEnter_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_rgfChatPermissions = arg2;
  
}


intgo _wrap_LobbyEnter_t_m_rgfChatPermissions_get_steam_fb253aa6b5654893(LobbyEnter_t *_swig_go_0) {
  LobbyEnter_t *arg1 = (LobbyEnter_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(LobbyEnter_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_rgfChatPermissions);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyEnter_t_m_bLocked_set_steam_fb253aa6b5654893(LobbyEnter_t *_swig_go_0, bool _swig_go_1) {
  LobbyEnter_t *arg1 = (LobbyEnter_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(LobbyEnter_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bLocked = arg2;
  
}


bool _wrap_LobbyEnter_t_m_bLocked_get_steam_fb253aa6b5654893(LobbyEnter_t *_swig_go_0) {
  LobbyEnter_t *arg1 = (LobbyEnter_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(LobbyEnter_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bLocked);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyEnter_t_m_EChatRoomEnterResponse_set_steam_fb253aa6b5654893(LobbyEnter_t *_swig_go_0, intgo _swig_go_1) {
  LobbyEnter_t *arg1 = (LobbyEnter_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(LobbyEnter_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_EChatRoomEnterResponse = arg2;
  
}


intgo _wrap_LobbyEnter_t_m_EChatRoomEnterResponse_get_steam_fb253aa6b5654893(LobbyEnter_t *_swig_go_0) {
  LobbyEnter_t *arg1 = (LobbyEnter_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(LobbyEnter_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_EChatRoomEnterResponse);
  _swig_go_result = result; 
  return _swig_go_result;
}


LobbyEnter_t *_wrap_new_LobbyEnter_t_steam_fb253aa6b5654893() {
  LobbyEnter_t *result = 0 ;
  LobbyEnter_t *_swig_go_result;
  
  
  result = (LobbyEnter_t *)new LobbyEnter_t();
  *(LobbyEnter_t **)&_swig_go_result = (LobbyEnter_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LobbyEnter_t_steam_fb253aa6b5654893(LobbyEnter_t *_swig_go_0) {
  LobbyEnter_t *arg1 = (LobbyEnter_t *) 0 ;
  
  arg1 = *(LobbyEnter_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LobbyDataUpdate_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LobbyDataUpdate_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyDataUpdate_t_m_ulSteamIDLobby_set_steam_fb253aa6b5654893(LobbyDataUpdate_t *_swig_go_0, long long _swig_go_1) {
  LobbyDataUpdate_t *arg1 = (LobbyDataUpdate_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyDataUpdate_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDLobby = arg2;
  
}


long long _wrap_LobbyDataUpdate_t_m_ulSteamIDLobby_get_steam_fb253aa6b5654893(LobbyDataUpdate_t *_swig_go_0) {
  LobbyDataUpdate_t *arg1 = (LobbyDataUpdate_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyDataUpdate_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDLobby);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyDataUpdate_t_m_ulSteamIDMember_set_steam_fb253aa6b5654893(LobbyDataUpdate_t *_swig_go_0, long long _swig_go_1) {
  LobbyDataUpdate_t *arg1 = (LobbyDataUpdate_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyDataUpdate_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDMember = arg2;
  
}


long long _wrap_LobbyDataUpdate_t_m_ulSteamIDMember_get_steam_fb253aa6b5654893(LobbyDataUpdate_t *_swig_go_0) {
  LobbyDataUpdate_t *arg1 = (LobbyDataUpdate_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyDataUpdate_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDMember);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyDataUpdate_t_m_bSuccess_set_steam_fb253aa6b5654893(LobbyDataUpdate_t *_swig_go_0, char _swig_go_1) {
  LobbyDataUpdate_t *arg1 = (LobbyDataUpdate_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(LobbyDataUpdate_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bSuccess = arg2;
  
}


char _wrap_LobbyDataUpdate_t_m_bSuccess_get_steam_fb253aa6b5654893(LobbyDataUpdate_t *_swig_go_0) {
  LobbyDataUpdate_t *arg1 = (LobbyDataUpdate_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(LobbyDataUpdate_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bSuccess);
  _swig_go_result = result; 
  return _swig_go_result;
}


LobbyDataUpdate_t *_wrap_new_LobbyDataUpdate_t_steam_fb253aa6b5654893() {
  LobbyDataUpdate_t *result = 0 ;
  LobbyDataUpdate_t *_swig_go_result;
  
  
  result = (LobbyDataUpdate_t *)new LobbyDataUpdate_t();
  *(LobbyDataUpdate_t **)&_swig_go_result = (LobbyDataUpdate_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LobbyDataUpdate_t_steam_fb253aa6b5654893(LobbyDataUpdate_t *_swig_go_0) {
  LobbyDataUpdate_t *arg1 = (LobbyDataUpdate_t *) 0 ;
  
  arg1 = *(LobbyDataUpdate_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LobbyChatUpdate_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LobbyChatUpdate_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyChatUpdate_t_m_ulSteamIDLobby_set_steam_fb253aa6b5654893(LobbyChatUpdate_t *_swig_go_0, long long _swig_go_1) {
  LobbyChatUpdate_t *arg1 = (LobbyChatUpdate_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyChatUpdate_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDLobby = arg2;
  
}


long long _wrap_LobbyChatUpdate_t_m_ulSteamIDLobby_get_steam_fb253aa6b5654893(LobbyChatUpdate_t *_swig_go_0) {
  LobbyChatUpdate_t *arg1 = (LobbyChatUpdate_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyChatUpdate_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDLobby);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyChatUpdate_t_m_ulSteamIDUserChanged_set_steam_fb253aa6b5654893(LobbyChatUpdate_t *_swig_go_0, long long _swig_go_1) {
  LobbyChatUpdate_t *arg1 = (LobbyChatUpdate_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyChatUpdate_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDUserChanged = arg2;
  
}


long long _wrap_LobbyChatUpdate_t_m_ulSteamIDUserChanged_get_steam_fb253aa6b5654893(LobbyChatUpdate_t *_swig_go_0) {
  LobbyChatUpdate_t *arg1 = (LobbyChatUpdate_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyChatUpdate_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDUserChanged);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyChatUpdate_t_m_ulSteamIDMakingChange_set_steam_fb253aa6b5654893(LobbyChatUpdate_t *_swig_go_0, long long _swig_go_1) {
  LobbyChatUpdate_t *arg1 = (LobbyChatUpdate_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyChatUpdate_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDMakingChange = arg2;
  
}


long long _wrap_LobbyChatUpdate_t_m_ulSteamIDMakingChange_get_steam_fb253aa6b5654893(LobbyChatUpdate_t *_swig_go_0) {
  LobbyChatUpdate_t *arg1 = (LobbyChatUpdate_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyChatUpdate_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDMakingChange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyChatUpdate_t_m_rgfChatMemberStateChange_set_steam_fb253aa6b5654893(LobbyChatUpdate_t *_swig_go_0, intgo _swig_go_1) {
  LobbyChatUpdate_t *arg1 = (LobbyChatUpdate_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(LobbyChatUpdate_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_rgfChatMemberStateChange = arg2;
  
}


intgo _wrap_LobbyChatUpdate_t_m_rgfChatMemberStateChange_get_steam_fb253aa6b5654893(LobbyChatUpdate_t *_swig_go_0) {
  LobbyChatUpdate_t *arg1 = (LobbyChatUpdate_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(LobbyChatUpdate_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_rgfChatMemberStateChange);
  _swig_go_result = result; 
  return _swig_go_result;
}


LobbyChatUpdate_t *_wrap_new_LobbyChatUpdate_t_steam_fb253aa6b5654893() {
  LobbyChatUpdate_t *result = 0 ;
  LobbyChatUpdate_t *_swig_go_result;
  
  
  result = (LobbyChatUpdate_t *)new LobbyChatUpdate_t();
  *(LobbyChatUpdate_t **)&_swig_go_result = (LobbyChatUpdate_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LobbyChatUpdate_t_steam_fb253aa6b5654893(LobbyChatUpdate_t *_swig_go_0) {
  LobbyChatUpdate_t *arg1 = (LobbyChatUpdate_t *) 0 ;
  
  arg1 = *(LobbyChatUpdate_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LobbyChatMsg_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LobbyChatMsg_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyChatMsg_t_m_ulSteamIDLobby_set_steam_fb253aa6b5654893(LobbyChatMsg_t *_swig_go_0, long long _swig_go_1) {
  LobbyChatMsg_t *arg1 = (LobbyChatMsg_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyChatMsg_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDLobby = arg2;
  
}


long long _wrap_LobbyChatMsg_t_m_ulSteamIDLobby_get_steam_fb253aa6b5654893(LobbyChatMsg_t *_swig_go_0) {
  LobbyChatMsg_t *arg1 = (LobbyChatMsg_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyChatMsg_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDLobby);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyChatMsg_t_m_ulSteamIDUser_set_steam_fb253aa6b5654893(LobbyChatMsg_t *_swig_go_0, long long _swig_go_1) {
  LobbyChatMsg_t *arg1 = (LobbyChatMsg_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyChatMsg_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDUser = arg2;
  
}


long long _wrap_LobbyChatMsg_t_m_ulSteamIDUser_get_steam_fb253aa6b5654893(LobbyChatMsg_t *_swig_go_0) {
  LobbyChatMsg_t *arg1 = (LobbyChatMsg_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyChatMsg_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDUser);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyChatMsg_t_m_eChatEntryType_set_steam_fb253aa6b5654893(LobbyChatMsg_t *_swig_go_0, char _swig_go_1) {
  LobbyChatMsg_t *arg1 = (LobbyChatMsg_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(LobbyChatMsg_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_eChatEntryType = arg2;
  
}


char _wrap_LobbyChatMsg_t_m_eChatEntryType_get_steam_fb253aa6b5654893(LobbyChatMsg_t *_swig_go_0) {
  LobbyChatMsg_t *arg1 = (LobbyChatMsg_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(LobbyChatMsg_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_eChatEntryType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyChatMsg_t_m_iChatID_set_steam_fb253aa6b5654893(LobbyChatMsg_t *_swig_go_0, intgo _swig_go_1) {
  LobbyChatMsg_t *arg1 = (LobbyChatMsg_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(LobbyChatMsg_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_iChatID = arg2;
  
}


intgo _wrap_LobbyChatMsg_t_m_iChatID_get_steam_fb253aa6b5654893(LobbyChatMsg_t *_swig_go_0) {
  LobbyChatMsg_t *arg1 = (LobbyChatMsg_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(LobbyChatMsg_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_iChatID);
  _swig_go_result = result; 
  return _swig_go_result;
}


LobbyChatMsg_t *_wrap_new_LobbyChatMsg_t_steam_fb253aa6b5654893() {
  LobbyChatMsg_t *result = 0 ;
  LobbyChatMsg_t *_swig_go_result;
  
  
  result = (LobbyChatMsg_t *)new LobbyChatMsg_t();
  *(LobbyChatMsg_t **)&_swig_go_result = (LobbyChatMsg_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LobbyChatMsg_t_steam_fb253aa6b5654893(LobbyChatMsg_t *_swig_go_0) {
  LobbyChatMsg_t *arg1 = (LobbyChatMsg_t *) 0 ;
  
  arg1 = *(LobbyChatMsg_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LobbyGameCreated_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LobbyGameCreated_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyGameCreated_t_m_ulSteamIDLobby_set_steam_fb253aa6b5654893(LobbyGameCreated_t *_swig_go_0, long long _swig_go_1) {
  LobbyGameCreated_t *arg1 = (LobbyGameCreated_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyGameCreated_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDLobby = arg2;
  
}


long long _wrap_LobbyGameCreated_t_m_ulSteamIDLobby_get_steam_fb253aa6b5654893(LobbyGameCreated_t *_swig_go_0) {
  LobbyGameCreated_t *arg1 = (LobbyGameCreated_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyGameCreated_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDLobby);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyGameCreated_t_m_ulSteamIDGameServer_set_steam_fb253aa6b5654893(LobbyGameCreated_t *_swig_go_0, long long _swig_go_1) {
  LobbyGameCreated_t *arg1 = (LobbyGameCreated_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyGameCreated_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDGameServer = arg2;
  
}


long long _wrap_LobbyGameCreated_t_m_ulSteamIDGameServer_get_steam_fb253aa6b5654893(LobbyGameCreated_t *_swig_go_0) {
  LobbyGameCreated_t *arg1 = (LobbyGameCreated_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyGameCreated_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDGameServer);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyGameCreated_t_m_unIP_set_steam_fb253aa6b5654893(LobbyGameCreated_t *_swig_go_0, intgo _swig_go_1) {
  LobbyGameCreated_t *arg1 = (LobbyGameCreated_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(LobbyGameCreated_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unIP = arg2;
  
}


intgo _wrap_LobbyGameCreated_t_m_unIP_get_steam_fb253aa6b5654893(LobbyGameCreated_t *_swig_go_0) {
  LobbyGameCreated_t *arg1 = (LobbyGameCreated_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(LobbyGameCreated_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unIP);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyGameCreated_t_m_usPort_set_steam_fb253aa6b5654893(LobbyGameCreated_t *_swig_go_0, short _swig_go_1) {
  LobbyGameCreated_t *arg1 = (LobbyGameCreated_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(LobbyGameCreated_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  if (arg1) (arg1)->m_usPort = arg2;
  
}


short _wrap_LobbyGameCreated_t_m_usPort_get_steam_fb253aa6b5654893(LobbyGameCreated_t *_swig_go_0) {
  LobbyGameCreated_t *arg1 = (LobbyGameCreated_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(LobbyGameCreated_t **)&_swig_go_0; 
  
  result = (uint16) ((arg1)->m_usPort);
  _swig_go_result = result; 
  return _swig_go_result;
}


LobbyGameCreated_t *_wrap_new_LobbyGameCreated_t_steam_fb253aa6b5654893() {
  LobbyGameCreated_t *result = 0 ;
  LobbyGameCreated_t *_swig_go_result;
  
  
  result = (LobbyGameCreated_t *)new LobbyGameCreated_t();
  *(LobbyGameCreated_t **)&_swig_go_result = (LobbyGameCreated_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LobbyGameCreated_t_steam_fb253aa6b5654893(LobbyGameCreated_t *_swig_go_0) {
  LobbyGameCreated_t *arg1 = (LobbyGameCreated_t *) 0 ;
  
  arg1 = *(LobbyGameCreated_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LobbyMatchList_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LobbyMatchList_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyMatchList_t_m_nLobbiesMatching_set_steam_fb253aa6b5654893(LobbyMatchList_t *_swig_go_0, intgo _swig_go_1) {
  LobbyMatchList_t *arg1 = (LobbyMatchList_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(LobbyMatchList_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nLobbiesMatching = arg2;
  
}


intgo _wrap_LobbyMatchList_t_m_nLobbiesMatching_get_steam_fb253aa6b5654893(LobbyMatchList_t *_swig_go_0) {
  LobbyMatchList_t *arg1 = (LobbyMatchList_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(LobbyMatchList_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nLobbiesMatching);
  _swig_go_result = result; 
  return _swig_go_result;
}


LobbyMatchList_t *_wrap_new_LobbyMatchList_t_steam_fb253aa6b5654893() {
  LobbyMatchList_t *result = 0 ;
  LobbyMatchList_t *_swig_go_result;
  
  
  result = (LobbyMatchList_t *)new LobbyMatchList_t();
  *(LobbyMatchList_t **)&_swig_go_result = (LobbyMatchList_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LobbyMatchList_t_steam_fb253aa6b5654893(LobbyMatchList_t *_swig_go_0) {
  LobbyMatchList_t *arg1 = (LobbyMatchList_t *) 0 ;
  
  arg1 = *(LobbyMatchList_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LobbyKicked_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LobbyKicked_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyKicked_t_m_ulSteamIDLobby_set_steam_fb253aa6b5654893(LobbyKicked_t *_swig_go_0, long long _swig_go_1) {
  LobbyKicked_t *arg1 = (LobbyKicked_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyKicked_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDLobby = arg2;
  
}


long long _wrap_LobbyKicked_t_m_ulSteamIDLobby_get_steam_fb253aa6b5654893(LobbyKicked_t *_swig_go_0) {
  LobbyKicked_t *arg1 = (LobbyKicked_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyKicked_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDLobby);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyKicked_t_m_ulSteamIDAdmin_set_steam_fb253aa6b5654893(LobbyKicked_t *_swig_go_0, long long _swig_go_1) {
  LobbyKicked_t *arg1 = (LobbyKicked_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyKicked_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDAdmin = arg2;
  
}


long long _wrap_LobbyKicked_t_m_ulSteamIDAdmin_get_steam_fb253aa6b5654893(LobbyKicked_t *_swig_go_0) {
  LobbyKicked_t *arg1 = (LobbyKicked_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyKicked_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDAdmin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LobbyKicked_t_m_bKickedDueToDisconnect_set_steam_fb253aa6b5654893(LobbyKicked_t *_swig_go_0, char _swig_go_1) {
  LobbyKicked_t *arg1 = (LobbyKicked_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(LobbyKicked_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bKickedDueToDisconnect = arg2;
  
}


char _wrap_LobbyKicked_t_m_bKickedDueToDisconnect_get_steam_fb253aa6b5654893(LobbyKicked_t *_swig_go_0) {
  LobbyKicked_t *arg1 = (LobbyKicked_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(LobbyKicked_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bKickedDueToDisconnect);
  _swig_go_result = result; 
  return _swig_go_result;
}


LobbyKicked_t *_wrap_new_LobbyKicked_t_steam_fb253aa6b5654893() {
  LobbyKicked_t *result = 0 ;
  LobbyKicked_t *_swig_go_result;
  
  
  result = (LobbyKicked_t *)new LobbyKicked_t();
  *(LobbyKicked_t **)&_swig_go_result = (LobbyKicked_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LobbyKicked_t_steam_fb253aa6b5654893(LobbyKicked_t *_swig_go_0) {
  LobbyKicked_t *arg1 = (LobbyKicked_t *) 0 ;
  
  arg1 = *(LobbyKicked_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LobbyCreated_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LobbyCreated_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyCreated_t_m_eResult_set_steam_fb253aa6b5654893(LobbyCreated_t *_swig_go_0, intgo _swig_go_1) {
  LobbyCreated_t *arg1 = (LobbyCreated_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(LobbyCreated_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_LobbyCreated_t_m_eResult_get_steam_fb253aa6b5654893(LobbyCreated_t *_swig_go_0) {
  LobbyCreated_t *arg1 = (LobbyCreated_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(LobbyCreated_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LobbyCreated_t_m_ulSteamIDLobby_set_steam_fb253aa6b5654893(LobbyCreated_t *_swig_go_0, long long _swig_go_1) {
  LobbyCreated_t *arg1 = (LobbyCreated_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(LobbyCreated_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDLobby = arg2;
  
}


long long _wrap_LobbyCreated_t_m_ulSteamIDLobby_get_steam_fb253aa6b5654893(LobbyCreated_t *_swig_go_0) {
  LobbyCreated_t *arg1 = (LobbyCreated_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(LobbyCreated_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDLobby);
  _swig_go_result = result; 
  return _swig_go_result;
}


LobbyCreated_t *_wrap_new_LobbyCreated_t_steam_fb253aa6b5654893() {
  LobbyCreated_t *result = 0 ;
  LobbyCreated_t *_swig_go_result;
  
  
  result = (LobbyCreated_t *)new LobbyCreated_t();
  *(LobbyCreated_t **)&_swig_go_result = (LobbyCreated_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LobbyCreated_t_steam_fb253aa6b5654893(LobbyCreated_t *_swig_go_0) {
  LobbyCreated_t *arg1 = (LobbyCreated_t *) 0 ;
  
  arg1 = *(LobbyCreated_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_PSNGameBootInviteResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = PSNGameBootInviteResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_PSNGameBootInviteResult_t_m_bGameBootInviteExists_set_steam_fb253aa6b5654893(PSNGameBootInviteResult_t *_swig_go_0, bool _swig_go_1) {
  PSNGameBootInviteResult_t *arg1 = (PSNGameBootInviteResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(PSNGameBootInviteResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bGameBootInviteExists = arg2;
  
}


bool _wrap_PSNGameBootInviteResult_t_m_bGameBootInviteExists_get_steam_fb253aa6b5654893(PSNGameBootInviteResult_t *_swig_go_0) {
  PSNGameBootInviteResult_t *arg1 = (PSNGameBootInviteResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PSNGameBootInviteResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bGameBootInviteExists);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_PSNGameBootInviteResult_t_m_steamIDLobby_set_steam_fb253aa6b5654893(PSNGameBootInviteResult_t *_swig_go_0, CSteamID *_swig_go_1) {
  PSNGameBootInviteResult_t *arg1 = (PSNGameBootInviteResult_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(PSNGameBootInviteResult_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDLobby = *arg2;
  
}


CSteamID *_wrap_PSNGameBootInviteResult_t_m_steamIDLobby_get_steam_fb253aa6b5654893(PSNGameBootInviteResult_t *_swig_go_0) {
  PSNGameBootInviteResult_t *arg1 = (PSNGameBootInviteResult_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(PSNGameBootInviteResult_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDLobby);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


PSNGameBootInviteResult_t *_wrap_new_PSNGameBootInviteResult_t_steam_fb253aa6b5654893() {
  PSNGameBootInviteResult_t *result = 0 ;
  PSNGameBootInviteResult_t *_swig_go_result;
  
  
  result = (PSNGameBootInviteResult_t *)new PSNGameBootInviteResult_t();
  *(PSNGameBootInviteResult_t **)&_swig_go_result = (PSNGameBootInviteResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_PSNGameBootInviteResult_t_steam_fb253aa6b5654893(PSNGameBootInviteResult_t *_swig_go_0) {
  PSNGameBootInviteResult_t *arg1 = (PSNGameBootInviteResult_t *) 0 ;
  
  arg1 = *(PSNGameBootInviteResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_FavoritesListAccountsUpdated_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = FavoritesListAccountsUpdated_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FavoritesListAccountsUpdated_t_m_eResult_set_steam_fb253aa6b5654893(FavoritesListAccountsUpdated_t *_swig_go_0, intgo _swig_go_1) {
  FavoritesListAccountsUpdated_t *arg1 = (FavoritesListAccountsUpdated_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(FavoritesListAccountsUpdated_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_FavoritesListAccountsUpdated_t_m_eResult_get_steam_fb253aa6b5654893(FavoritesListAccountsUpdated_t *_swig_go_0) {
  FavoritesListAccountsUpdated_t *arg1 = (FavoritesListAccountsUpdated_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(FavoritesListAccountsUpdated_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


FavoritesListAccountsUpdated_t *_wrap_new_FavoritesListAccountsUpdated_t_steam_fb253aa6b5654893() {
  FavoritesListAccountsUpdated_t *result = 0 ;
  FavoritesListAccountsUpdated_t *_swig_go_result;
  
  
  result = (FavoritesListAccountsUpdated_t *)new FavoritesListAccountsUpdated_t();
  *(FavoritesListAccountsUpdated_t **)&_swig_go_result = (FavoritesListAccountsUpdated_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_FavoritesListAccountsUpdated_t_steam_fb253aa6b5654893(FavoritesListAccountsUpdated_t *_swig_go_0) {
  FavoritesListAccountsUpdated_t *arg1 = (FavoritesListAccountsUpdated_t *) 0 ;
  
  arg1 = *(FavoritesListAccountsUpdated_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_unMaxCloudFileChunkSize_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_unMaxCloudFileChunkSize;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamParamStringArray_t_m_ppStrings_set_steam_fb253aa6b5654893(SteamParamStringArray_t *_swig_go_0, _gostring_* _swig_go_1) {
  SteamParamStringArray_t *arg1 = (SteamParamStringArray_t *) 0 ;
  char **arg2 = (char **) 0 ;
  
  arg1 = *(SteamParamStringArray_t **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  
  if (arg1) (arg1)->m_ppStrings = (char const **)arg2;
  
}


_gostring_* _wrap_SteamParamStringArray_t_m_ppStrings_get_steam_fb253aa6b5654893(SteamParamStringArray_t *_swig_go_0) {
  SteamParamStringArray_t *arg1 = (SteamParamStringArray_t *) 0 ;
  char **result = 0 ;
  _gostring_* _swig_go_result;
  
  arg1 = *(SteamParamStringArray_t **)&_swig_go_0; 
  
  result = (char **) ((arg1)->m_ppStrings);
  *(char ***)&_swig_go_result = (char **)result; 
  return _swig_go_result;
}


void _wrap_SteamParamStringArray_t_m_nNumStrings_set_steam_fb253aa6b5654893(SteamParamStringArray_t *_swig_go_0, intgo _swig_go_1) {
  SteamParamStringArray_t *arg1 = (SteamParamStringArray_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(SteamParamStringArray_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nNumStrings = arg2;
  
}


intgo _wrap_SteamParamStringArray_t_m_nNumStrings_get_steam_fb253aa6b5654893(SteamParamStringArray_t *_swig_go_0) {
  SteamParamStringArray_t *arg1 = (SteamParamStringArray_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamParamStringArray_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nNumStrings);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamParamStringArray_t *_wrap_new_SteamParamStringArray_t_steam_fb253aa6b5654893() {
  SteamParamStringArray_t *result = 0 ;
  SteamParamStringArray_t *_swig_go_result;
  
  
  result = (SteamParamStringArray_t *)new SteamParamStringArray_t();
  *(SteamParamStringArray_t **)&_swig_go_result = (SteamParamStringArray_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamParamStringArray_t_steam_fb253aa6b5654893(SteamParamStringArray_t *_swig_go_0) {
  SteamParamStringArray_t *arg1 = (SteamParamStringArray_t *) 0 ;
  
  arg1 = *(SteamParamStringArray_t **)&_swig_go_0; 
  
  delete arg1;
  
}


long long _wrap_k_PublishedFileIdInvalid_get_steam_fb253aa6b5654893() {
  PublishedFileId_t result;
  long long _swig_go_result;
  
  
  result = (PublishedFileId_t)(PublishedFileId_t)k_PublishedFileIdInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_UGCHandleInvalid_get_steam_fb253aa6b5654893() {
  UGCHandle_t result;
  long long _swig_go_result;
  
  
  result = (UGCHandle_t)(UGCHandle_t)k_UGCHandleInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_PublishedFileUpdateHandleInvalid_get_steam_fb253aa6b5654893() {
  PublishedFileUpdateHandle_t result;
  long long _swig_go_result;
  
  
  result = (PublishedFileUpdateHandle_t)(PublishedFileUpdateHandle_t)k_PublishedFileUpdateHandleInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_UGCFileStreamHandleInvalid_get_steam_fb253aa6b5654893() {
  UGCFileWriteStreamHandle_t result;
  long long _swig_go_result;
  
  
  result = (UGCFileWriteStreamHandle_t)(UGCFileWriteStreamHandle_t)k_UGCFileStreamHandleInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cchPublishedDocumentTitleMax_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_cchPublishedDocumentTitleMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cchPublishedDocumentDescriptionMax_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_cchPublishedDocumentDescriptionMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cchPublishedDocumentChangeDescriptionMax_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_cchPublishedDocumentChangeDescriptionMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_unEnumeratePublishedFilesMaxResults_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_unEnumeratePublishedFilesMaxResults;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cchTagListMax_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_cchTagListMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cchFilenameMax_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_cchFilenameMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cchPublishedFileURLMax_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_cchPublishedFileURLMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePlatformNone_steam_fb253aa6b5654893() {
  ERemoteStoragePlatform result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePlatformNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePlatformWindows_steam_fb253aa6b5654893() {
  ERemoteStoragePlatform result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePlatformWindows;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePlatformOSX_steam_fb253aa6b5654893() {
  ERemoteStoragePlatform result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePlatformOSX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePlatformPS3_steam_fb253aa6b5654893() {
  ERemoteStoragePlatform result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePlatformPS3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePlatformLinux_steam_fb253aa6b5654893() {
  ERemoteStoragePlatform result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePlatformLinux;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePlatformReserved2_steam_fb253aa6b5654893() {
  ERemoteStoragePlatform result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePlatformReserved2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePlatformAll_steam_fb253aa6b5654893() {
  ERemoteStoragePlatform result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePlatformAll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePublishedFileVisibilityPublic_steam_fb253aa6b5654893() {
  ERemoteStoragePublishedFileVisibility result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePublishedFileVisibilityPublic;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePublishedFileVisibilityFriendsOnly_steam_fb253aa6b5654893() {
  ERemoteStoragePublishedFileVisibility result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePublishedFileVisibilityFriendsOnly;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERemoteStoragePublishedFileVisibilityPrivate_steam_fb253aa6b5654893() {
  ERemoteStoragePublishedFileVisibility result;
  intgo _swig_go_result;
  
  
  result = k_ERemoteStoragePublishedFileVisibilityPrivate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeFirst_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeFirst;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeCommunity_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeCommunity;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeMicrotransaction_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeMicrotransaction;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeCollection_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeCollection;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeArt_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeArt;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeVideo_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeVideo;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeScreenshot_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeScreenshot;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeGame_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeGame;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeSoftware_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeSoftware;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeConcept_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeConcept;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeWebGuide_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeWebGuide;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeIntegratedGuide_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeIntegratedGuide;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeMerch_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeMerch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeControllerBinding_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeControllerBinding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeSteamworksAccessInvite_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeSteamworksAccessInvite;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeSteamVideo_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeSteamVideo;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeGameManagedItem_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeGameManagedItem;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileTypeMax_steam_fb253aa6b5654893() {
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileTypeMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopVoteUnvoted_steam_fb253aa6b5654893() {
  EWorkshopVote result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopVoteUnvoted;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopVoteFor_steam_fb253aa6b5654893() {
  EWorkshopVote result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopVoteFor;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopVoteAgainst_steam_fb253aa6b5654893() {
  EWorkshopVote result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopVoteAgainst;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopVoteLater_steam_fb253aa6b5654893() {
  EWorkshopVote result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopVoteLater;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileActionPlayed_steam_fb253aa6b5654893() {
  EWorkshopFileAction result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileActionPlayed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopFileActionCompleted_steam_fb253aa6b5654893() {
  EWorkshopFileAction result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopFileActionCompleted;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopEnumerationTypeRankedByVote_steam_fb253aa6b5654893() {
  EWorkshopEnumerationType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopEnumerationTypeRankedByVote;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopEnumerationTypeRecent_steam_fb253aa6b5654893() {
  EWorkshopEnumerationType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopEnumerationTypeRecent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopEnumerationTypeTrending_steam_fb253aa6b5654893() {
  EWorkshopEnumerationType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopEnumerationTypeTrending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopEnumerationTypeFavoritesOfFriends_steam_fb253aa6b5654893() {
  EWorkshopEnumerationType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopEnumerationTypeFavoritesOfFriends;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopEnumerationTypeVotedByFriends_steam_fb253aa6b5654893() {
  EWorkshopEnumerationType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopEnumerationTypeVotedByFriends;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopEnumerationTypeContentByFriends_steam_fb253aa6b5654893() {
  EWorkshopEnumerationType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopEnumerationTypeContentByFriends;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopEnumerationTypeRecentFromFollowedUsers_steam_fb253aa6b5654893() {
  EWorkshopEnumerationType result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopEnumerationTypeRecentFromFollowedUsers;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopVideoProviderNone_steam_fb253aa6b5654893() {
  EWorkshopVideoProvider result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopVideoProviderNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EWorkshopVideoProviderYoutube_steam_fb253aa6b5654893() {
  EWorkshopVideoProvider result;
  intgo _swig_go_result;
  
  
  result = k_EWorkshopVideoProviderYoutube;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCRead_ContinueReadingUntilFinished_steam_fb253aa6b5654893() {
  EUGCReadAction result;
  intgo _swig_go_result;
  
  
  result = k_EUGCRead_ContinueReadingUntilFinished;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCRead_ContinueReading_steam_fb253aa6b5654893() {
  EUGCReadAction result;
  intgo _swig_go_result;
  
  
  result = k_EUGCRead_ContinueReading;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCRead_Close_steam_fb253aa6b5654893() {
  EUGCReadAction result;
  intgo _swig_go_result;
  
  
  result = k_EUGCRead_Close;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_FileWrite_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  int32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int32)_swig_go_3; 
  
  result = (bool)(arg1)->FileWrite((char const *)arg2,(void const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_ISteamRemoteStorage_FileRead_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  int32 arg4 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int32)_swig_go_3; 
  
  result = (int32)(arg1)->FileRead((char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_FileWriteAsync_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (SteamAPICall_t)(arg1)->FileWriteAsync((char const *)arg2,(void const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_FileReadAsync_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32 arg3 ;
  uint32 arg4 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (SteamAPICall_t)(arg1)->FileReadAsync((char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_FileReadAsyncComplete_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  SteamAPICall_t arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (SteamAPICall_t)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (bool)(arg1)->FileReadAsyncComplete(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_FileForget_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->FileForget((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_FileDelete_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->FileDelete((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_FileShare_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (SteamAPICall_t)(arg1)->FileShare((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_SetSyncPlatforms_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  ERemoteStoragePlatform arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (ERemoteStoragePlatform)_swig_go_2; 
  
  result = (bool)(arg1)->SetSyncPlatforms((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_FileWriteStreamOpen_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  UGCFileWriteStreamHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (UGCFileWriteStreamHandle_t)(arg1)->FileWriteStreamOpen((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_FileWriteStreamWriteChunk_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  UGCFileWriteStreamHandle_t arg2 ;
  void *arg3 = (void *) 0 ;
  int32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (UGCFileWriteStreamHandle_t)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int32)_swig_go_3; 
  
  result = (bool)(arg1)->FileWriteStreamWriteChunk(arg2,(void const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_FileWriteStreamClose_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  UGCFileWriteStreamHandle_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (UGCFileWriteStreamHandle_t)_swig_go_1; 
  
  result = (bool)(arg1)->FileWriteStreamClose(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_FileWriteStreamCancel_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  UGCFileWriteStreamHandle_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (UGCFileWriteStreamHandle_t)_swig_go_1; 
  
  result = (bool)(arg1)->FileWriteStreamCancel(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_FileExists_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->FileExists((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_FilePersisted_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->FilePersisted((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_ISteamRemoteStorage_GetFileSize_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int32)(arg1)->GetFileSize((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_GetFileTimestamp_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  int64 result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int64)(arg1)->GetFileTimestamp((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_ISteamRemoteStorage_GetSyncPlatforms_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  ERemoteStoragePlatform result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (ERemoteStoragePlatform)(arg1)->GetSyncPlatforms((char const *)arg2);
  _swig_go_result = (intgo)result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_ISteamRemoteStorage_GetFileCount_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  result = (int32)(arg1)->GetFileCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamRemoteStorage_GetFileNameAndSize_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  int arg2 ;
  int32 *arg3 = (int32 *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int32 **)&_swig_go_2; 
  
  result = (char *)(arg1)->GetFileNameAndSize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_GetQuota_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long *_swig_go_1, long long *_swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  uint64 *arg2 = (uint64 *) 0 ;
  uint64 *arg3 = (uint64 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = *(uint64 **)&_swig_go_1; 
  arg3 = *(uint64 **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetQuota(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_IsCloudEnabledForAccount_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  result = (bool)(arg1)->IsCloudEnabledForAccount();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_IsCloudEnabledForApp_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  result = (bool)(arg1)->IsCloudEnabledForApp();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamRemoteStorage_SetCloudEnabledForApp_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, bool _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  bool arg2 ;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->SetCloudEnabledForApp(arg2);
  
}


long long _wrap_ISteamRemoteStorage_UGCDownload_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  UGCHandle_t arg2 ;
  uint32 arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->UGCDownload(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_GetUGCDownloadProgress_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  UGCHandle_t arg2 ;
  int32 *arg3 = (int32 *) 0 ;
  int32 *arg4 = (int32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  arg3 = *(int32 **)&_swig_go_2; 
  arg4 = *(int32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetUGCDownloadProgress(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_GetUGCDetails_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, intgo *_swig_go_2, _gostring_* _swig_go_3, intgo *_swig_go_4, CSteamID *_swig_go_5) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  UGCHandle_t arg2 ;
  AppId_t *arg3 = (AppId_t *) 0 ;
  char **arg4 = (char **) 0 ;
  int32 *arg5 = (int32 *) 0 ;
  CSteamID *arg6 = (CSteamID *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  arg3 = *(AppId_t **)&_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(int32 **)&_swig_go_4; 
  arg6 = *(CSteamID **)&_swig_go_5; 
  
  result = (bool)(arg1)->GetUGCDetails(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamRemoteStorage_UGCRead_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  UGCHandle_t arg2 ;
  void *arg3 = (void *) 0 ;
  int32 arg4 ;
  uint32 arg5 ;
  EUGCReadAction arg6 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int32)_swig_go_3; 
  arg5 = (uint32)_swig_go_4; 
  arg6 = (EUGCReadAction)_swig_go_5; 
  
  result = (int32)(arg1)->UGCRead(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamRemoteStorage_GetCachedUGCCount_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  result = (int32)(arg1)->GetCachedUGCCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_GetCachedUGCHandle_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, intgo _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  int32 arg2 ;
  UGCHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  result = (UGCHandle_t)(arg1)->GetCachedUGCHandle(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_PublishWorkshopFile_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6, SteamParamStringArray_t *_swig_go_7, intgo _swig_go_8) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  AppId_t arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  ERemoteStoragePublishedFileVisibility arg7 ;
  SteamParamStringArray_t *arg8 = (SteamParamStringArray_t *) 0 ;
  EWorkshopFileType arg9 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (AppId_t)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ERemoteStoragePublishedFileVisibility)_swig_go_6; 
  arg8 = *(SteamParamStringArray_t **)&_swig_go_7; 
  arg9 = (EWorkshopFileType)_swig_go_8; 
  
  result = (SteamAPICall_t)(arg1)->PublishWorkshopFile((char const *)arg2,(char const *)arg3,arg4,(char const *)arg5,(char const *)arg6,arg7,arg8,arg9);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  free(arg5); 
  free(arg6); 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_CreatePublishedFileUpdateRequest_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileId_t arg2 ;
  PublishedFileUpdateHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (PublishedFileUpdateHandle_t)(arg1)->CreatePublishedFileUpdateRequest(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_UpdatePublishedFileFile_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->UpdatePublishedFileFile(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_UpdatePublishedFilePreviewFile_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->UpdatePublishedFilePreviewFile(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_UpdatePublishedFileTitle_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->UpdatePublishedFileTitle(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_UpdatePublishedFileDescription_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->UpdatePublishedFileDescription(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_UpdatePublishedFileVisibility_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileUpdateHandle_t arg2 ;
  ERemoteStoragePublishedFileVisibility arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileUpdateHandle_t)_swig_go_1; 
  arg3 = (ERemoteStoragePublishedFileVisibility)_swig_go_2; 
  
  result = (bool)(arg1)->UpdatePublishedFileVisibility(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_UpdatePublishedFileTags_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, SteamParamStringArray_t *_swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileUpdateHandle_t arg2 ;
  SteamParamStringArray_t *arg3 = (SteamParamStringArray_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileUpdateHandle_t)_swig_go_1; 
  arg3 = *(SteamParamStringArray_t **)&_swig_go_2; 
  
  result = (bool)(arg1)->UpdatePublishedFileTags(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_CommitPublishedFileUpdate_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileUpdateHandle_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileUpdateHandle_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->CommitPublishedFileUpdate(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_GetPublishedFileDetails_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileId_t arg2 ;
  uint32 arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->GetPublishedFileDetails(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_DeletePublishedFile_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->DeletePublishedFile(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_EnumerateUserPublishedFiles_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, intgo _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  uint32 arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->EnumerateUserPublishedFiles(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_SubscribePublishedFile_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->SubscribePublishedFile(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_EnumerateUserSubscribedFiles_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, intgo _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  uint32 arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->EnumerateUserSubscribedFiles(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_UnsubscribePublishedFile_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->UnsubscribePublishedFile(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamRemoteStorage_UpdatePublishedFileSetChangeDescription_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->UpdatePublishedFileSetChangeDescription(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_GetPublishedItemVoteDetails_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->GetPublishedItemVoteDetails(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_UpdateUserPublishedItemVote_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileId_t arg2 ;
  bool arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->UpdateUserPublishedItemVote(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_GetUserPublishedItemVoteDetails_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->GetUserPublishedItemVoteDetails(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_EnumerateUserSharedWorkshopFiles_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2, SteamParamStringArray_t *_swig_go_3, SteamParamStringArray_t *_swig_go_4) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  CSteamID arg2 ;
  uint32 arg3 ;
  SteamParamStringArray_t *arg4 = (SteamParamStringArray_t *) 0 ;
  SteamParamStringArray_t *arg5 = (SteamParamStringArray_t *) 0 ;
  CSteamID *argp2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (uint32)_swig_go_2; 
  arg4 = *(SteamParamStringArray_t **)&_swig_go_3; 
  arg5 = *(SteamParamStringArray_t **)&_swig_go_4; 
  
  result = (SteamAPICall_t)(arg1)->EnumerateUserSharedWorkshopFiles(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_PublishVideo_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, intgo _swig_go_8, SteamParamStringArray_t *_swig_go_9) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  EWorkshopVideoProvider arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  AppId_t arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ERemoteStoragePublishedFileVisibility arg9 ;
  SteamParamStringArray_t *arg10 = (SteamParamStringArray_t *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (EWorkshopVideoProvider)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (AppId_t)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = (ERemoteStoragePublishedFileVisibility)_swig_go_8; 
  arg10 = *(SteamParamStringArray_t **)&_swig_go_9; 
  
  result = (SteamAPICall_t)(arg1)->PublishVideo(arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6,(char const *)arg7,(char const *)arg8,arg9,arg10);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  free(arg5); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_SetUserPublishedFileAction_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  PublishedFileId_t arg2 ;
  EWorkshopFileAction arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (EWorkshopFileAction)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->SetUserPublishedFileAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_EnumeratePublishedFilesByUserAction_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  EWorkshopFileAction arg2 ;
  uint32 arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (EWorkshopFileAction)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->EnumeratePublishedFilesByUserAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_EnumeratePublishedWorkshopFiles_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, SteamParamStringArray_t *_swig_go_5, SteamParamStringArray_t *_swig_go_6) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  EWorkshopEnumerationType arg2 ;
  uint32 arg3 ;
  uint32 arg4 ;
  uint32 arg5 ;
  SteamParamStringArray_t *arg6 = (SteamParamStringArray_t *) 0 ;
  SteamParamStringArray_t *arg7 = (SteamParamStringArray_t *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (EWorkshopEnumerationType)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = (uint32)_swig_go_4; 
  arg6 = *(SteamParamStringArray_t **)&_swig_go_5; 
  arg7 = *(SteamParamStringArray_t **)&_swig_go_6; 
  
  result = (SteamAPICall_t)(arg1)->EnumeratePublishedWorkshopFiles(arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamRemoteStorage_UGCDownloadToLocation_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  UGCHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  uint32 arg4 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (uint32)_swig_go_3; 
  
  result = (SteamAPICall_t)(arg1)->UGCDownloadToLocation(arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


void _wrap_delete_ISteamRemoteStorage_steam_fb253aa6b5654893(ISteamRemoteStorage *_swig_go_0) {
  ISteamRemoteStorage *arg1 = (ISteamRemoteStorage *) 0 ;
  
  arg1 = *(ISteamRemoteStorage **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageAppSyncedClient_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageAppSyncedClient_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncedClient_t_m_nAppID_set_steam_fb253aa6b5654893(RemoteStorageAppSyncedClient_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncedClient_t *arg1 = (RemoteStorageAppSyncedClient_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStorageAppSyncedClient_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncedClient_t_m_nAppID_get_steam_fb253aa6b5654893(RemoteStorageAppSyncedClient_t *_swig_go_0) {
  RemoteStorageAppSyncedClient_t *arg1 = (RemoteStorageAppSyncedClient_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncedClient_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncedClient_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageAppSyncedClient_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncedClient_t *arg1 = (RemoteStorageAppSyncedClient_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageAppSyncedClient_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncedClient_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageAppSyncedClient_t *_swig_go_0) {
  RemoteStorageAppSyncedClient_t *arg1 = (RemoteStorageAppSyncedClient_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncedClient_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncedClient_t_m_unNumDownloads_set_steam_fb253aa6b5654893(RemoteStorageAppSyncedClient_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncedClient_t *arg1 = (RemoteStorageAppSyncedClient_t *) 0 ;
  int arg2 ;
  
  arg1 = *(RemoteStorageAppSyncedClient_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_unNumDownloads = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncedClient_t_m_unNumDownloads_get_steam_fb253aa6b5654893(RemoteStorageAppSyncedClient_t *_swig_go_0) {
  RemoteStorageAppSyncedClient_t *arg1 = (RemoteStorageAppSyncedClient_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncedClient_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_unNumDownloads);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageAppSyncedClient_t *_wrap_new_RemoteStorageAppSyncedClient_t_steam_fb253aa6b5654893() {
  RemoteStorageAppSyncedClient_t *result = 0 ;
  RemoteStorageAppSyncedClient_t *_swig_go_result;
  
  
  result = (RemoteStorageAppSyncedClient_t *)new RemoteStorageAppSyncedClient_t();
  *(RemoteStorageAppSyncedClient_t **)&_swig_go_result = (RemoteStorageAppSyncedClient_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageAppSyncedClient_t_steam_fb253aa6b5654893(RemoteStorageAppSyncedClient_t *_swig_go_0) {
  RemoteStorageAppSyncedClient_t *arg1 = (RemoteStorageAppSyncedClient_t *) 0 ;
  
  arg1 = *(RemoteStorageAppSyncedClient_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageAppSyncedServer_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageAppSyncedServer_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncedServer_t_m_nAppID_set_steam_fb253aa6b5654893(RemoteStorageAppSyncedServer_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncedServer_t *arg1 = (RemoteStorageAppSyncedServer_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStorageAppSyncedServer_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncedServer_t_m_nAppID_get_steam_fb253aa6b5654893(RemoteStorageAppSyncedServer_t *_swig_go_0) {
  RemoteStorageAppSyncedServer_t *arg1 = (RemoteStorageAppSyncedServer_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncedServer_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncedServer_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageAppSyncedServer_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncedServer_t *arg1 = (RemoteStorageAppSyncedServer_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageAppSyncedServer_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncedServer_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageAppSyncedServer_t *_swig_go_0) {
  RemoteStorageAppSyncedServer_t *arg1 = (RemoteStorageAppSyncedServer_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncedServer_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncedServer_t_m_unNumUploads_set_steam_fb253aa6b5654893(RemoteStorageAppSyncedServer_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncedServer_t *arg1 = (RemoteStorageAppSyncedServer_t *) 0 ;
  int arg2 ;
  
  arg1 = *(RemoteStorageAppSyncedServer_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_unNumUploads = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncedServer_t_m_unNumUploads_get_steam_fb253aa6b5654893(RemoteStorageAppSyncedServer_t *_swig_go_0) {
  RemoteStorageAppSyncedServer_t *arg1 = (RemoteStorageAppSyncedServer_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncedServer_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_unNumUploads);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageAppSyncedServer_t *_wrap_new_RemoteStorageAppSyncedServer_t_steam_fb253aa6b5654893() {
  RemoteStorageAppSyncedServer_t *result = 0 ;
  RemoteStorageAppSyncedServer_t *_swig_go_result;
  
  
  result = (RemoteStorageAppSyncedServer_t *)new RemoteStorageAppSyncedServer_t();
  *(RemoteStorageAppSyncedServer_t **)&_swig_go_result = (RemoteStorageAppSyncedServer_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageAppSyncedServer_t_steam_fb253aa6b5654893(RemoteStorageAppSyncedServer_t *_swig_go_0) {
  RemoteStorageAppSyncedServer_t *arg1 = (RemoteStorageAppSyncedServer_t *) 0 ;
  
  arg1 = *(RemoteStorageAppSyncedServer_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageAppSyncProgress_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageAppSyncProgress_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncProgress_t_m_rgchCurrentFile_set_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0, _gostring_ _swig_go_1) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchCurrentFile, (const char *)arg2, k_cchFilenameMax-1);
      arg1->m_rgchCurrentFile[k_cchFilenameMax-1] = 0;
    } else {
      arg1->m_rgchCurrentFile[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_RemoteStorageAppSyncProgress_t_m_rgchCurrentFile_get_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchCurrentFile);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncProgress_t_m_nAppID_set_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncProgress_t_m_nAppID_get_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncProgress_t_m_uBytesTransferredThisChunk_set_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_uBytesTransferredThisChunk = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncProgress_t_m_uBytesTransferredThisChunk_get_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_uBytesTransferredThisChunk);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncProgress_t_m_dAppPercentComplete_set_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0, double _swig_go_1) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  double arg2 ;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_dAppPercentComplete = arg2;
  
}


double _wrap_RemoteStorageAppSyncProgress_t_m_dAppPercentComplete_get_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_dAppPercentComplete);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncProgress_t_m_bUploading_set_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0, bool _swig_go_1) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bUploading = arg2;
  
}


bool _wrap_RemoteStorageAppSyncProgress_t_m_bUploading_get_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bUploading);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageAppSyncProgress_t *_wrap_new_RemoteStorageAppSyncProgress_t_steam_fb253aa6b5654893() {
  RemoteStorageAppSyncProgress_t *result = 0 ;
  RemoteStorageAppSyncProgress_t *_swig_go_result;
  
  
  result = (RemoteStorageAppSyncProgress_t *)new RemoteStorageAppSyncProgress_t();
  *(RemoteStorageAppSyncProgress_t **)&_swig_go_result = (RemoteStorageAppSyncProgress_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageAppSyncProgress_t_steam_fb253aa6b5654893(RemoteStorageAppSyncProgress_t *_swig_go_0) {
  RemoteStorageAppSyncProgress_t *arg1 = (RemoteStorageAppSyncProgress_t *) 0 ;
  
  arg1 = *(RemoteStorageAppSyncProgress_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageAppSyncStatusCheck_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageAppSyncStatusCheck_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncStatusCheck_t_m_nAppID_set_steam_fb253aa6b5654893(RemoteStorageAppSyncStatusCheck_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncStatusCheck_t *arg1 = (RemoteStorageAppSyncStatusCheck_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStorageAppSyncStatusCheck_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncStatusCheck_t_m_nAppID_get_steam_fb253aa6b5654893(RemoteStorageAppSyncStatusCheck_t *_swig_go_0) {
  RemoteStorageAppSyncStatusCheck_t *arg1 = (RemoteStorageAppSyncStatusCheck_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncStatusCheck_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageAppSyncStatusCheck_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageAppSyncStatusCheck_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageAppSyncStatusCheck_t *arg1 = (RemoteStorageAppSyncStatusCheck_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageAppSyncStatusCheck_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageAppSyncStatusCheck_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageAppSyncStatusCheck_t *_swig_go_0) {
  RemoteStorageAppSyncStatusCheck_t *arg1 = (RemoteStorageAppSyncStatusCheck_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageAppSyncStatusCheck_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


RemoteStorageAppSyncStatusCheck_t *_wrap_new_RemoteStorageAppSyncStatusCheck_t_steam_fb253aa6b5654893() {
  RemoteStorageAppSyncStatusCheck_t *result = 0 ;
  RemoteStorageAppSyncStatusCheck_t *_swig_go_result;
  
  
  result = (RemoteStorageAppSyncStatusCheck_t *)new RemoteStorageAppSyncStatusCheck_t();
  *(RemoteStorageAppSyncStatusCheck_t **)&_swig_go_result = (RemoteStorageAppSyncStatusCheck_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageAppSyncStatusCheck_t_steam_fb253aa6b5654893(RemoteStorageAppSyncStatusCheck_t *_swig_go_0) {
  RemoteStorageAppSyncStatusCheck_t *arg1 = (RemoteStorageAppSyncStatusCheck_t *) 0 ;
  
  arg1 = *(RemoteStorageAppSyncStatusCheck_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageFileShareResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageFileShareResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageFileShareResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageFileShareResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageFileShareResult_t *arg1 = (RemoteStorageFileShareResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageFileShareResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageFileShareResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageFileShareResult_t *_swig_go_0) {
  RemoteStorageFileShareResult_t *arg1 = (RemoteStorageFileShareResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageFileShareResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageFileShareResult_t_m_hFile_set_steam_fb253aa6b5654893(RemoteStorageFileShareResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageFileShareResult_t *arg1 = (RemoteStorageFileShareResult_t *) 0 ;
  UGCHandle_t arg2 ;
  
  arg1 = *(RemoteStorageFileShareResult_t **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hFile = arg2;
  
}


long long _wrap_RemoteStorageFileShareResult_t_m_hFile_get_steam_fb253aa6b5654893(RemoteStorageFileShareResult_t *_swig_go_0) {
  RemoteStorageFileShareResult_t *arg1 = (RemoteStorageFileShareResult_t *) 0 ;
  UGCHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageFileShareResult_t **)&_swig_go_0; 
  
  result = (UGCHandle_t) ((arg1)->m_hFile);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageFileShareResult_t_m_rgchFilename_set_steam_fb253aa6b5654893(RemoteStorageFileShareResult_t *_swig_go_0, _gostring_ _swig_go_1) {
  RemoteStorageFileShareResult_t *arg1 = (RemoteStorageFileShareResult_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(RemoteStorageFileShareResult_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchFilename, (const char *)arg2, k_cchFilenameMax-1);
      arg1->m_rgchFilename[k_cchFilenameMax-1] = 0;
    } else {
      arg1->m_rgchFilename[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_RemoteStorageFileShareResult_t_m_rgchFilename_get_steam_fb253aa6b5654893(RemoteStorageFileShareResult_t *_swig_go_0) {
  RemoteStorageFileShareResult_t *arg1 = (RemoteStorageFileShareResult_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(RemoteStorageFileShareResult_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchFilename);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


RemoteStorageFileShareResult_t *_wrap_new_RemoteStorageFileShareResult_t_steam_fb253aa6b5654893() {
  RemoteStorageFileShareResult_t *result = 0 ;
  RemoteStorageFileShareResult_t *_swig_go_result;
  
  
  result = (RemoteStorageFileShareResult_t *)new RemoteStorageFileShareResult_t();
  *(RemoteStorageFileShareResult_t **)&_swig_go_result = (RemoteStorageFileShareResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageFileShareResult_t_steam_fb253aa6b5654893(RemoteStorageFileShareResult_t *_swig_go_0) {
  RemoteStorageFileShareResult_t *arg1 = (RemoteStorageFileShareResult_t *) 0 ;
  
  arg1 = *(RemoteStorageFileShareResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStoragePublishFileResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStoragePublishFileResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishFileResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStoragePublishFileResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStoragePublishFileResult_t *arg1 = (RemoteStoragePublishFileResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStoragePublishFileResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStoragePublishFileResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStoragePublishFileResult_t *_swig_go_0) {
  RemoteStoragePublishFileResult_t *arg1 = (RemoteStoragePublishFileResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStoragePublishFileResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishFileResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStoragePublishFileResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStoragePublishFileResult_t *arg1 = (RemoteStoragePublishFileResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStoragePublishFileResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStoragePublishFileResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStoragePublishFileResult_t *_swig_go_0) {
  RemoteStoragePublishFileResult_t *arg1 = (RemoteStoragePublishFileResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStoragePublishFileResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishFileResult_t_m_bUserNeedsToAcceptWorkshopLegalAgreement_set_steam_fb253aa6b5654893(RemoteStoragePublishFileResult_t *_swig_go_0, bool _swig_go_1) {
  RemoteStoragePublishFileResult_t *arg1 = (RemoteStoragePublishFileResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(RemoteStoragePublishFileResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bUserNeedsToAcceptWorkshopLegalAgreement = arg2;
  
}


bool _wrap_RemoteStoragePublishFileResult_t_m_bUserNeedsToAcceptWorkshopLegalAgreement_get_steam_fb253aa6b5654893(RemoteStoragePublishFileResult_t *_swig_go_0) {
  RemoteStoragePublishFileResult_t *arg1 = (RemoteStoragePublishFileResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(RemoteStoragePublishFileResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bUserNeedsToAcceptWorkshopLegalAgreement);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStoragePublishFileResult_t *_wrap_new_RemoteStoragePublishFileResult_t_steam_fb253aa6b5654893() {
  RemoteStoragePublishFileResult_t *result = 0 ;
  RemoteStoragePublishFileResult_t *_swig_go_result;
  
  
  result = (RemoteStoragePublishFileResult_t *)new RemoteStoragePublishFileResult_t();
  *(RemoteStoragePublishFileResult_t **)&_swig_go_result = (RemoteStoragePublishFileResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStoragePublishFileResult_t_steam_fb253aa6b5654893(RemoteStoragePublishFileResult_t *_swig_go_0) {
  RemoteStoragePublishFileResult_t *arg1 = (RemoteStoragePublishFileResult_t *) 0 ;
  
  arg1 = *(RemoteStoragePublishFileResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageDeletePublishedFileResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageDeletePublishedFileResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageDeletePublishedFileResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageDeletePublishedFileResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageDeletePublishedFileResult_t *arg1 = (RemoteStorageDeletePublishedFileResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageDeletePublishedFileResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageDeletePublishedFileResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageDeletePublishedFileResult_t *_swig_go_0) {
  RemoteStorageDeletePublishedFileResult_t *arg1 = (RemoteStorageDeletePublishedFileResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageDeletePublishedFileResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageDeletePublishedFileResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageDeletePublishedFileResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageDeletePublishedFileResult_t *arg1 = (RemoteStorageDeletePublishedFileResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStorageDeletePublishedFileResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStorageDeletePublishedFileResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageDeletePublishedFileResult_t *_swig_go_0) {
  RemoteStorageDeletePublishedFileResult_t *arg1 = (RemoteStorageDeletePublishedFileResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageDeletePublishedFileResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageDeletePublishedFileResult_t *_wrap_new_RemoteStorageDeletePublishedFileResult_t_steam_fb253aa6b5654893() {
  RemoteStorageDeletePublishedFileResult_t *result = 0 ;
  RemoteStorageDeletePublishedFileResult_t *_swig_go_result;
  
  
  result = (RemoteStorageDeletePublishedFileResult_t *)new RemoteStorageDeletePublishedFileResult_t();
  *(RemoteStorageDeletePublishedFileResult_t **)&_swig_go_result = (RemoteStorageDeletePublishedFileResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageDeletePublishedFileResult_t_steam_fb253aa6b5654893(RemoteStorageDeletePublishedFileResult_t *_swig_go_0) {
  RemoteStorageDeletePublishedFileResult_t *arg1 = (RemoteStorageDeletePublishedFileResult_t *) 0 ;
  
  arg1 = *(RemoteStorageDeletePublishedFileResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageEnumerateUserPublishedFilesResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageEnumerateUserPublishedFilesResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserPublishedFilesResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateUserPublishedFilesResult_t *arg1 = (RemoteStorageEnumerateUserPublishedFilesResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateUserPublishedFilesResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserPublishedFilesResult_t *arg1 = (RemoteStorageEnumerateUserPublishedFilesResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserPublishedFilesResult_t_m_nResultsReturned_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateUserPublishedFilesResult_t *arg1 = (RemoteStorageEnumerateUserPublishedFilesResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nResultsReturned = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateUserPublishedFilesResult_t_m_nResultsReturned_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserPublishedFilesResult_t *arg1 = (RemoteStorageEnumerateUserPublishedFilesResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nResultsReturned);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserPublishedFilesResult_t_m_nTotalResultCount_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateUserPublishedFilesResult_t *arg1 = (RemoteStorageEnumerateUserPublishedFilesResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nTotalResultCount = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateUserPublishedFilesResult_t_m_nTotalResultCount_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserPublishedFilesResult_t *arg1 = (RemoteStorageEnumerateUserPublishedFilesResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nTotalResultCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserPublishedFilesResult_t_m_rgPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_0, long long *_swig_go_1) {
  RemoteStorageEnumerateUserPublishedFilesResult_t *arg1 = (RemoteStorageEnumerateUserPublishedFilesResult_t *) 0 ;
  PublishedFileId_t *arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_0; 
  arg2 = *(PublishedFileId_t **)&_swig_go_1; 
  
  {
    size_t ii;
    PublishedFileId_t *b = (PublishedFileId_t *) arg1->m_rgPublishedFileId;
    for (ii = 0; ii < (size_t)k_unEnumeratePublishedFilesMaxResults; ii++) b[ii] = *((PublishedFileId_t *) arg2 + ii);
  }
  
}


long long *_wrap_RemoteStorageEnumerateUserPublishedFilesResult_t_m_rgPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserPublishedFilesResult_t *arg1 = (RemoteStorageEnumerateUserPublishedFilesResult_t *) 0 ;
  PublishedFileId_t *result = 0 ;
  long long *_swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t *)(PublishedFileId_t *) ((arg1)->m_rgPublishedFileId);
  *(PublishedFileId_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageEnumerateUserPublishedFilesResult_t *_wrap_new_RemoteStorageEnumerateUserPublishedFilesResult_t_steam_fb253aa6b5654893() {
  RemoteStorageEnumerateUserPublishedFilesResult_t *result = 0 ;
  RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_result;
  
  
  result = (RemoteStorageEnumerateUserPublishedFilesResult_t *)new RemoteStorageEnumerateUserPublishedFilesResult_t();
  *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_result = (RemoteStorageEnumerateUserPublishedFilesResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageEnumerateUserPublishedFilesResult_t_steam_fb253aa6b5654893(RemoteStorageEnumerateUserPublishedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserPublishedFilesResult_t *arg1 = (RemoteStorageEnumerateUserPublishedFilesResult_t *) 0 ;
  
  arg1 = *(RemoteStorageEnumerateUserPublishedFilesResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageSubscribePublishedFileResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageSubscribePublishedFileResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageSubscribePublishedFileResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageSubscribePublishedFileResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageSubscribePublishedFileResult_t *arg1 = (RemoteStorageSubscribePublishedFileResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageSubscribePublishedFileResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageSubscribePublishedFileResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageSubscribePublishedFileResult_t *_swig_go_0) {
  RemoteStorageSubscribePublishedFileResult_t *arg1 = (RemoteStorageSubscribePublishedFileResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageSubscribePublishedFileResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageSubscribePublishedFileResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageSubscribePublishedFileResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageSubscribePublishedFileResult_t *arg1 = (RemoteStorageSubscribePublishedFileResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStorageSubscribePublishedFileResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStorageSubscribePublishedFileResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageSubscribePublishedFileResult_t *_swig_go_0) {
  RemoteStorageSubscribePublishedFileResult_t *arg1 = (RemoteStorageSubscribePublishedFileResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageSubscribePublishedFileResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageSubscribePublishedFileResult_t *_wrap_new_RemoteStorageSubscribePublishedFileResult_t_steam_fb253aa6b5654893() {
  RemoteStorageSubscribePublishedFileResult_t *result = 0 ;
  RemoteStorageSubscribePublishedFileResult_t *_swig_go_result;
  
  
  result = (RemoteStorageSubscribePublishedFileResult_t *)new RemoteStorageSubscribePublishedFileResult_t();
  *(RemoteStorageSubscribePublishedFileResult_t **)&_swig_go_result = (RemoteStorageSubscribePublishedFileResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageSubscribePublishedFileResult_t_steam_fb253aa6b5654893(RemoteStorageSubscribePublishedFileResult_t *_swig_go_0) {
  RemoteStorageSubscribePublishedFileResult_t *arg1 = (RemoteStorageSubscribePublishedFileResult_t *) 0 ;
  
  arg1 = *(RemoteStorageSubscribePublishedFileResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageEnumerateUserSubscribedFilesResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageEnumerateUserSubscribedFilesResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_nResultsReturned_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nResultsReturned = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_nResultsReturned_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nResultsReturned);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_nTotalResultCount_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nTotalResultCount = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_nTotalResultCount_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nTotalResultCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_rgPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0, long long *_swig_go_1) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  PublishedFileId_t *arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  arg2 = *(PublishedFileId_t **)&_swig_go_1; 
  
  {
    size_t ii;
    PublishedFileId_t *b = (PublishedFileId_t *) arg1->m_rgPublishedFileId;
    for (ii = 0; ii < (size_t)k_unEnumeratePublishedFilesMaxResults; ii++) b[ii] = *((PublishedFileId_t *) arg2 + ii);
  }
  
}


long long *_wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_rgPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  PublishedFileId_t *result = 0 ;
  long long *_swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t *)(PublishedFileId_t *) ((arg1)->m_rgPublishedFileId);
  *(PublishedFileId_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_rgRTimeSubscribed_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0, intgo *_swig_go_1) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  uint32 *arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  arg2 = *(uint32 **)&_swig_go_1; 
  
  {
    size_t ii;
    uint32 *b = (uint32 *) arg1->m_rgRTimeSubscribed;
    for (ii = 0; ii < (size_t)k_unEnumeratePublishedFilesMaxResults; ii++) b[ii] = *((uint32 *) arg2 + ii);
  }
  
}


intgo *_wrap_RemoteStorageEnumerateUserSubscribedFilesResult_t_m_rgRTimeSubscribed_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  uint32 *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  
  result = (uint32 *)(uint32 *) ((arg1)->m_rgRTimeSubscribed);
  *(uint32 **)&_swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageEnumerateUserSubscribedFilesResult_t *_wrap_new_RemoteStorageEnumerateUserSubscribedFilesResult_t_steam_fb253aa6b5654893() {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *result = 0 ;
  RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_result;
  
  
  result = (RemoteStorageEnumerateUserSubscribedFilesResult_t *)new RemoteStorageEnumerateUserSubscribedFilesResult_t();
  *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_result = (RemoteStorageEnumerateUserSubscribedFilesResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageEnumerateUserSubscribedFilesResult_t_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSubscribedFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSubscribedFilesResult_t *arg1 = (RemoteStorageEnumerateUserSubscribedFilesResult_t *) 0 ;
  
  arg1 = *(RemoteStorageEnumerateUserSubscribedFilesResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageUnsubscribePublishedFileResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageUnsubscribePublishedFileResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUnsubscribePublishedFileResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageUnsubscribePublishedFileResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageUnsubscribePublishedFileResult_t *arg1 = (RemoteStorageUnsubscribePublishedFileResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageUnsubscribePublishedFileResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageUnsubscribePublishedFileResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageUnsubscribePublishedFileResult_t *_swig_go_0) {
  RemoteStorageUnsubscribePublishedFileResult_t *arg1 = (RemoteStorageUnsubscribePublishedFileResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageUnsubscribePublishedFileResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUnsubscribePublishedFileResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageUnsubscribePublishedFileResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageUnsubscribePublishedFileResult_t *arg1 = (RemoteStorageUnsubscribePublishedFileResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStorageUnsubscribePublishedFileResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStorageUnsubscribePublishedFileResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageUnsubscribePublishedFileResult_t *_swig_go_0) {
  RemoteStorageUnsubscribePublishedFileResult_t *arg1 = (RemoteStorageUnsubscribePublishedFileResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageUnsubscribePublishedFileResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageUnsubscribePublishedFileResult_t *_wrap_new_RemoteStorageUnsubscribePublishedFileResult_t_steam_fb253aa6b5654893() {
  RemoteStorageUnsubscribePublishedFileResult_t *result = 0 ;
  RemoteStorageUnsubscribePublishedFileResult_t *_swig_go_result;
  
  
  result = (RemoteStorageUnsubscribePublishedFileResult_t *)new RemoteStorageUnsubscribePublishedFileResult_t();
  *(RemoteStorageUnsubscribePublishedFileResult_t **)&_swig_go_result = (RemoteStorageUnsubscribePublishedFileResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageUnsubscribePublishedFileResult_t_steam_fb253aa6b5654893(RemoteStorageUnsubscribePublishedFileResult_t *_swig_go_0) {
  RemoteStorageUnsubscribePublishedFileResult_t *arg1 = (RemoteStorageUnsubscribePublishedFileResult_t *) 0 ;
  
  arg1 = *(RemoteStorageUnsubscribePublishedFileResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageUpdatePublishedFileResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageUpdatePublishedFileResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUpdatePublishedFileResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageUpdatePublishedFileResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageUpdatePublishedFileResult_t *arg1 = (RemoteStorageUpdatePublishedFileResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageUpdatePublishedFileResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageUpdatePublishedFileResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageUpdatePublishedFileResult_t *_swig_go_0) {
  RemoteStorageUpdatePublishedFileResult_t *arg1 = (RemoteStorageUpdatePublishedFileResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageUpdatePublishedFileResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUpdatePublishedFileResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageUpdatePublishedFileResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageUpdatePublishedFileResult_t *arg1 = (RemoteStorageUpdatePublishedFileResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStorageUpdatePublishedFileResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStorageUpdatePublishedFileResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageUpdatePublishedFileResult_t *_swig_go_0) {
  RemoteStorageUpdatePublishedFileResult_t *arg1 = (RemoteStorageUpdatePublishedFileResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageUpdatePublishedFileResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUpdatePublishedFileResult_t_m_bUserNeedsToAcceptWorkshopLegalAgreement_set_steam_fb253aa6b5654893(RemoteStorageUpdatePublishedFileResult_t *_swig_go_0, bool _swig_go_1) {
  RemoteStorageUpdatePublishedFileResult_t *arg1 = (RemoteStorageUpdatePublishedFileResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(RemoteStorageUpdatePublishedFileResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bUserNeedsToAcceptWorkshopLegalAgreement = arg2;
  
}


bool _wrap_RemoteStorageUpdatePublishedFileResult_t_m_bUserNeedsToAcceptWorkshopLegalAgreement_get_steam_fb253aa6b5654893(RemoteStorageUpdatePublishedFileResult_t *_swig_go_0) {
  RemoteStorageUpdatePublishedFileResult_t *arg1 = (RemoteStorageUpdatePublishedFileResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(RemoteStorageUpdatePublishedFileResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bUserNeedsToAcceptWorkshopLegalAgreement);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageUpdatePublishedFileResult_t *_wrap_new_RemoteStorageUpdatePublishedFileResult_t_steam_fb253aa6b5654893() {
  RemoteStorageUpdatePublishedFileResult_t *result = 0 ;
  RemoteStorageUpdatePublishedFileResult_t *_swig_go_result;
  
  
  result = (RemoteStorageUpdatePublishedFileResult_t *)new RemoteStorageUpdatePublishedFileResult_t();
  *(RemoteStorageUpdatePublishedFileResult_t **)&_swig_go_result = (RemoteStorageUpdatePublishedFileResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageUpdatePublishedFileResult_t_steam_fb253aa6b5654893(RemoteStorageUpdatePublishedFileResult_t *_swig_go_0) {
  RemoteStorageUpdatePublishedFileResult_t *arg1 = (RemoteStorageUpdatePublishedFileResult_t *) 0 ;
  
  arg1 = *(RemoteStorageUpdatePublishedFileResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageDownloadUGCResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageDownloadUGCResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageDownloadUGCResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageDownloadUGCResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageDownloadUGCResult_t_m_hFile_set_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  UGCHandle_t arg2 ;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hFile = arg2;
  
}


long long _wrap_RemoteStorageDownloadUGCResult_t_m_hFile_get_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  UGCHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  
  result = (UGCHandle_t) ((arg1)->m_hFile);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageDownloadUGCResult_t_m_nAppID_set_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoteStorageDownloadUGCResult_t_m_nAppID_get_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageDownloadUGCResult_t_m_nSizeInBytes_set_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nSizeInBytes = arg2;
  
}


intgo _wrap_RemoteStorageDownloadUGCResult_t_m_nSizeInBytes_get_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nSizeInBytes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageDownloadUGCResult_t_m_pchFileName_set_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0, _gostring_ _swig_go_1) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pchFileName, (const char *)arg2, k_cchFilenameMax-1);
      arg1->m_pchFileName[k_cchFilenameMax-1] = 0;
    } else {
      arg1->m_pchFileName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_RemoteStorageDownloadUGCResult_t_m_pchFileName_get_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pchFileName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_RemoteStorageDownloadUGCResult_t_m_ulSteamIDOwner_set_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDOwner = arg2;
  
}


long long _wrap_RemoteStorageDownloadUGCResult_t_m_ulSteamIDOwner_get_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDOwner);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageDownloadUGCResult_t *_wrap_new_RemoteStorageDownloadUGCResult_t_steam_fb253aa6b5654893() {
  RemoteStorageDownloadUGCResult_t *result = 0 ;
  RemoteStorageDownloadUGCResult_t *_swig_go_result;
  
  
  result = (RemoteStorageDownloadUGCResult_t *)new RemoteStorageDownloadUGCResult_t();
  *(RemoteStorageDownloadUGCResult_t **)&_swig_go_result = (RemoteStorageDownloadUGCResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageDownloadUGCResult_t_steam_fb253aa6b5654893(RemoteStorageDownloadUGCResult_t *_swig_go_0) {
  RemoteStorageDownloadUGCResult_t *arg1 = (RemoteStorageDownloadUGCResult_t *) 0 ;
  
  arg1 = *(RemoteStorageDownloadUGCResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageGetPublishedFileDetailsResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageGetPublishedFileDetailsResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nCreatorAppID_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nCreatorAppID = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nCreatorAppID_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nCreatorAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nConsumerAppID_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nConsumerAppID = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nConsumerAppID_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nConsumerAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rgchTitle_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, _gostring_ _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchTitle, (const char *)arg2, k_cchPublishedDocumentTitleMax-1);
      arg1->m_rgchTitle[k_cchPublishedDocumentTitleMax-1] = 0;
    } else {
      arg1->m_rgchTitle[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rgchTitle_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchTitle);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rgchDescription_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, _gostring_ _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchDescription, (const char *)arg2, k_cchPublishedDocumentDescriptionMax-1);
      arg1->m_rgchDescription[k_cchPublishedDocumentDescriptionMax-1] = 0;
    } else {
      arg1->m_rgchDescription[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rgchDescription_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchDescription);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_hFile_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  UGCHandle_t arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hFile = arg2;
  
}


long long _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_hFile_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  UGCHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (UGCHandle_t) ((arg1)->m_hFile);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_hPreviewFile_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  UGCHandle_t arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hPreviewFile = arg2;
  
}


long long _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_hPreviewFile_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  UGCHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (UGCHandle_t) ((arg1)->m_hPreviewFile);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_ulSteamIDOwner_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDOwner = arg2;
  
}


long long _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_ulSteamIDOwner_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDOwner);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rtimeCreated_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_rtimeCreated = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rtimeCreated_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_rtimeCreated);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rtimeUpdated_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_rtimeUpdated = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rtimeUpdated_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_rtimeUpdated);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_eVisibility_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  ERemoteStoragePublishedFileVisibility arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (ERemoteStoragePublishedFileVisibility)_swig_go_1; 
  
  if (arg1) (arg1)->m_eVisibility = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_eVisibility_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  ERemoteStoragePublishedFileVisibility result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (ERemoteStoragePublishedFileVisibility) ((arg1)->m_eVisibility);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_bBanned_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, bool _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bBanned = arg2;
  
}


bool _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_bBanned_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bBanned);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rgchTags_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, _gostring_ _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchTags, (const char *)arg2, k_cchTagListMax-1);
      arg1->m_rgchTags[k_cchTagListMax-1] = 0;
    } else {
      arg1->m_rgchTags[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rgchTags_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchTags);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_bTagsTruncated_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, bool _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bTagsTruncated = arg2;
  
}


bool _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_bTagsTruncated_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bTagsTruncated);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_pchFileName_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, _gostring_ _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pchFileName, (const char *)arg2, k_cchFilenameMax-1);
      arg1->m_pchFileName[k_cchFilenameMax-1] = 0;
    } else {
      arg1->m_pchFileName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_pchFileName_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pchFileName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nFileSize_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nFileSize = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nFileSize_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nFileSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nPreviewFileSize_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPreviewFileSize = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_nPreviewFileSize_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nPreviewFileSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rgchURL_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, _gostring_ _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchURL, (const char *)arg2, k_cchPublishedFileURLMax-1);
      arg1->m_rgchURL[k_cchPublishedFileURLMax-1] = 0;
    } else {
      arg1->m_rgchURL[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_rgchURL_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_eFileType_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  EWorkshopFileType arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (EWorkshopFileType)_swig_go_1; 
  
  if (arg1) (arg1)->m_eFileType = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_eFileType_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (EWorkshopFileType) ((arg1)->m_eFileType);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_bAcceptedForUse_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0, bool _swig_go_1) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bAcceptedForUse = arg2;
  
}


bool _wrap_RemoteStorageGetPublishedFileDetailsResult_t_m_bAcceptedForUse_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bAcceptedForUse);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageGetPublishedFileDetailsResult_t *_wrap_new_RemoteStorageGetPublishedFileDetailsResult_t_steam_fb253aa6b5654893() {
  RemoteStorageGetPublishedFileDetailsResult_t *result = 0 ;
  RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_result;
  
  
  result = (RemoteStorageGetPublishedFileDetailsResult_t *)new RemoteStorageGetPublishedFileDetailsResult_t();
  *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_result = (RemoteStorageGetPublishedFileDetailsResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageGetPublishedFileDetailsResult_t_steam_fb253aa6b5654893(RemoteStorageGetPublishedFileDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedFileDetailsResult_t *arg1 = (RemoteStorageGetPublishedFileDetailsResult_t *) 0 ;
  
  arg1 = *(RemoteStorageGetPublishedFileDetailsResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageEnumerateWorkshopFilesResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageEnumerateWorkshopFilesResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_nResultsReturned_set_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nResultsReturned = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_nResultsReturned_get_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nResultsReturned);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_nTotalResultCount_set_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nTotalResultCount = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_nTotalResultCount_get_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nTotalResultCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_rgPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0, long long *_swig_go_1) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  PublishedFileId_t *arg2 ;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = *(PublishedFileId_t **)&_swig_go_1; 
  
  {
    size_t ii;
    PublishedFileId_t *b = (PublishedFileId_t *) arg1->m_rgPublishedFileId;
    for (ii = 0; ii < (size_t)k_unEnumeratePublishedFilesMaxResults; ii++) b[ii] = *((PublishedFileId_t *) arg2 + ii);
  }
  
}


long long *_wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_rgPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  PublishedFileId_t *result = 0 ;
  long long *_swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t *)(PublishedFileId_t *) ((arg1)->m_rgPublishedFileId);
  *(PublishedFileId_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_rgScore_set_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0, float *_swig_go_1) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_rgScore;
    for (ii = 0; ii < (size_t)k_unEnumeratePublishedFilesMaxResults; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_rgScore_get_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_rgScore);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_nAppId_set_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppId = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_nAppId_get_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_unStartIndex_set_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unStartIndex = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateWorkshopFilesResult_t_m_unStartIndex_get_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unStartIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageEnumerateWorkshopFilesResult_t *_wrap_new_RemoteStorageEnumerateWorkshopFilesResult_t_steam_fb253aa6b5654893() {
  RemoteStorageEnumerateWorkshopFilesResult_t *result = 0 ;
  RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_result;
  
  
  result = (RemoteStorageEnumerateWorkshopFilesResult_t *)new RemoteStorageEnumerateWorkshopFilesResult_t();
  *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_result = (RemoteStorageEnumerateWorkshopFilesResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageEnumerateWorkshopFilesResult_t_steam_fb253aa6b5654893(RemoteStorageEnumerateWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateWorkshopFilesResult_t *) 0 ;
  
  arg1 = *(RemoteStorageEnumerateWorkshopFilesResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageGetPublishedItemVoteDetailsResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageGetPublishedItemVoteDetailsResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_unPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_unPublishedFileId = arg2;
  
}


long long _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_unPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_unPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_nVotesFor_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nVotesFor = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_nVotesFor_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nVotesFor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_nVotesAgainst_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nVotesAgainst = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_nVotesAgainst_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nVotesAgainst);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_nReports_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nReports = arg2;
  
}


intgo _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_nReports_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nReports);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_fScore_set_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0, float _swig_go_1) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  float arg2 ;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_fScore = arg2;
  
}


float _wrap_RemoteStorageGetPublishedItemVoteDetailsResult_t_m_fScore_get_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_fScore);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageGetPublishedItemVoteDetailsResult_t *_wrap_new_RemoteStorageGetPublishedItemVoteDetailsResult_t_steam_fb253aa6b5654893() {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *result = 0 ;
  RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_result;
  
  
  result = (RemoteStorageGetPublishedItemVoteDetailsResult_t *)new RemoteStorageGetPublishedItemVoteDetailsResult_t();
  *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_result = (RemoteStorageGetPublishedItemVoteDetailsResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageGetPublishedItemVoteDetailsResult_t_steam_fb253aa6b5654893(RemoteStorageGetPublishedItemVoteDetailsResult_t *_swig_go_0) {
  RemoteStorageGetPublishedItemVoteDetailsResult_t *arg1 = (RemoteStorageGetPublishedItemVoteDetailsResult_t *) 0 ;
  
  arg1 = *(RemoteStorageGetPublishedItemVoteDetailsResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStoragePublishedFileSubscribed_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStoragePublishedFileSubscribed_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishedFileSubscribed_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStoragePublishedFileSubscribed_t *_swig_go_0, long long _swig_go_1) {
  RemoteStoragePublishedFileSubscribed_t *arg1 = (RemoteStoragePublishedFileSubscribed_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStoragePublishedFileSubscribed_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStoragePublishedFileSubscribed_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStoragePublishedFileSubscribed_t *_swig_go_0) {
  RemoteStoragePublishedFileSubscribed_t *arg1 = (RemoteStoragePublishedFileSubscribed_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStoragePublishedFileSubscribed_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishedFileSubscribed_t_m_nAppID_set_steam_fb253aa6b5654893(RemoteStoragePublishedFileSubscribed_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStoragePublishedFileSubscribed_t *arg1 = (RemoteStoragePublishedFileSubscribed_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStoragePublishedFileSubscribed_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoteStoragePublishedFileSubscribed_t_m_nAppID_get_steam_fb253aa6b5654893(RemoteStoragePublishedFileSubscribed_t *_swig_go_0) {
  RemoteStoragePublishedFileSubscribed_t *arg1 = (RemoteStoragePublishedFileSubscribed_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStoragePublishedFileSubscribed_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStoragePublishedFileSubscribed_t *_wrap_new_RemoteStoragePublishedFileSubscribed_t_steam_fb253aa6b5654893() {
  RemoteStoragePublishedFileSubscribed_t *result = 0 ;
  RemoteStoragePublishedFileSubscribed_t *_swig_go_result;
  
  
  result = (RemoteStoragePublishedFileSubscribed_t *)new RemoteStoragePublishedFileSubscribed_t();
  *(RemoteStoragePublishedFileSubscribed_t **)&_swig_go_result = (RemoteStoragePublishedFileSubscribed_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStoragePublishedFileSubscribed_t_steam_fb253aa6b5654893(RemoteStoragePublishedFileSubscribed_t *_swig_go_0) {
  RemoteStoragePublishedFileSubscribed_t *arg1 = (RemoteStoragePublishedFileSubscribed_t *) 0 ;
  
  arg1 = *(RemoteStoragePublishedFileSubscribed_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStoragePublishedFileUnsubscribed_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStoragePublishedFileUnsubscribed_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishedFileUnsubscribed_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStoragePublishedFileUnsubscribed_t *_swig_go_0, long long _swig_go_1) {
  RemoteStoragePublishedFileUnsubscribed_t *arg1 = (RemoteStoragePublishedFileUnsubscribed_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStoragePublishedFileUnsubscribed_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStoragePublishedFileUnsubscribed_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStoragePublishedFileUnsubscribed_t *_swig_go_0) {
  RemoteStoragePublishedFileUnsubscribed_t *arg1 = (RemoteStoragePublishedFileUnsubscribed_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStoragePublishedFileUnsubscribed_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishedFileUnsubscribed_t_m_nAppID_set_steam_fb253aa6b5654893(RemoteStoragePublishedFileUnsubscribed_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStoragePublishedFileUnsubscribed_t *arg1 = (RemoteStoragePublishedFileUnsubscribed_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStoragePublishedFileUnsubscribed_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoteStoragePublishedFileUnsubscribed_t_m_nAppID_get_steam_fb253aa6b5654893(RemoteStoragePublishedFileUnsubscribed_t *_swig_go_0) {
  RemoteStoragePublishedFileUnsubscribed_t *arg1 = (RemoteStoragePublishedFileUnsubscribed_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStoragePublishedFileUnsubscribed_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStoragePublishedFileUnsubscribed_t *_wrap_new_RemoteStoragePublishedFileUnsubscribed_t_steam_fb253aa6b5654893() {
  RemoteStoragePublishedFileUnsubscribed_t *result = 0 ;
  RemoteStoragePublishedFileUnsubscribed_t *_swig_go_result;
  
  
  result = (RemoteStoragePublishedFileUnsubscribed_t *)new RemoteStoragePublishedFileUnsubscribed_t();
  *(RemoteStoragePublishedFileUnsubscribed_t **)&_swig_go_result = (RemoteStoragePublishedFileUnsubscribed_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStoragePublishedFileUnsubscribed_t_steam_fb253aa6b5654893(RemoteStoragePublishedFileUnsubscribed_t *_swig_go_0) {
  RemoteStoragePublishedFileUnsubscribed_t *arg1 = (RemoteStoragePublishedFileUnsubscribed_t *) 0 ;
  
  arg1 = *(RemoteStoragePublishedFileUnsubscribed_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStoragePublishedFileDeleted_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStoragePublishedFileDeleted_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishedFileDeleted_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStoragePublishedFileDeleted_t *_swig_go_0, long long _swig_go_1) {
  RemoteStoragePublishedFileDeleted_t *arg1 = (RemoteStoragePublishedFileDeleted_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStoragePublishedFileDeleted_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStoragePublishedFileDeleted_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStoragePublishedFileDeleted_t *_swig_go_0) {
  RemoteStoragePublishedFileDeleted_t *arg1 = (RemoteStoragePublishedFileDeleted_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStoragePublishedFileDeleted_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishedFileDeleted_t_m_nAppID_set_steam_fb253aa6b5654893(RemoteStoragePublishedFileDeleted_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStoragePublishedFileDeleted_t *arg1 = (RemoteStoragePublishedFileDeleted_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStoragePublishedFileDeleted_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoteStoragePublishedFileDeleted_t_m_nAppID_get_steam_fb253aa6b5654893(RemoteStoragePublishedFileDeleted_t *_swig_go_0) {
  RemoteStoragePublishedFileDeleted_t *arg1 = (RemoteStoragePublishedFileDeleted_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStoragePublishedFileDeleted_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStoragePublishedFileDeleted_t *_wrap_new_RemoteStoragePublishedFileDeleted_t_steam_fb253aa6b5654893() {
  RemoteStoragePublishedFileDeleted_t *result = 0 ;
  RemoteStoragePublishedFileDeleted_t *_swig_go_result;
  
  
  result = (RemoteStoragePublishedFileDeleted_t *)new RemoteStoragePublishedFileDeleted_t();
  *(RemoteStoragePublishedFileDeleted_t **)&_swig_go_result = (RemoteStoragePublishedFileDeleted_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStoragePublishedFileDeleted_t_steam_fb253aa6b5654893(RemoteStoragePublishedFileDeleted_t *_swig_go_0) {
  RemoteStoragePublishedFileDeleted_t *arg1 = (RemoteStoragePublishedFileDeleted_t *) 0 ;
  
  arg1 = *(RemoteStoragePublishedFileDeleted_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageUpdateUserPublishedItemVoteResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageUpdateUserPublishedItemVoteResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUpdateUserPublishedItemVoteResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageUpdateUserPublishedItemVoteResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageUpdateUserPublishedItemVoteResult_t *arg1 = (RemoteStorageUpdateUserPublishedItemVoteResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageUpdateUserPublishedItemVoteResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageUpdateUserPublishedItemVoteResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageUpdateUserPublishedItemVoteResult_t *_swig_go_0) {
  RemoteStorageUpdateUserPublishedItemVoteResult_t *arg1 = (RemoteStorageUpdateUserPublishedItemVoteResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageUpdateUserPublishedItemVoteResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUpdateUserPublishedItemVoteResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageUpdateUserPublishedItemVoteResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageUpdateUserPublishedItemVoteResult_t *arg1 = (RemoteStorageUpdateUserPublishedItemVoteResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStorageUpdateUserPublishedItemVoteResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStorageUpdateUserPublishedItemVoteResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageUpdateUserPublishedItemVoteResult_t *_swig_go_0) {
  RemoteStorageUpdateUserPublishedItemVoteResult_t *arg1 = (RemoteStorageUpdateUserPublishedItemVoteResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageUpdateUserPublishedItemVoteResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageUpdateUserPublishedItemVoteResult_t *_wrap_new_RemoteStorageUpdateUserPublishedItemVoteResult_t_steam_fb253aa6b5654893() {
  RemoteStorageUpdateUserPublishedItemVoteResult_t *result = 0 ;
  RemoteStorageUpdateUserPublishedItemVoteResult_t *_swig_go_result;
  
  
  result = (RemoteStorageUpdateUserPublishedItemVoteResult_t *)new RemoteStorageUpdateUserPublishedItemVoteResult_t();
  *(RemoteStorageUpdateUserPublishedItemVoteResult_t **)&_swig_go_result = (RemoteStorageUpdateUserPublishedItemVoteResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageUpdateUserPublishedItemVoteResult_t_steam_fb253aa6b5654893(RemoteStorageUpdateUserPublishedItemVoteResult_t *_swig_go_0) {
  RemoteStorageUpdateUserPublishedItemVoteResult_t *arg1 = (RemoteStorageUpdateUserPublishedItemVoteResult_t *) 0 ;
  
  arg1 = *(RemoteStorageUpdateUserPublishedItemVoteResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageUserVoteDetails_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageUserVoteDetails_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUserVoteDetails_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageUserVoteDetails_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageUserVoteDetails_t *arg1 = (RemoteStorageUserVoteDetails_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageUserVoteDetails_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageUserVoteDetails_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageUserVoteDetails_t *_swig_go_0) {
  RemoteStorageUserVoteDetails_t *arg1 = (RemoteStorageUserVoteDetails_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageUserVoteDetails_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUserVoteDetails_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageUserVoteDetails_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageUserVoteDetails_t *arg1 = (RemoteStorageUserVoteDetails_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStorageUserVoteDetails_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStorageUserVoteDetails_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageUserVoteDetails_t *_swig_go_0) {
  RemoteStorageUserVoteDetails_t *arg1 = (RemoteStorageUserVoteDetails_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageUserVoteDetails_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageUserVoteDetails_t_m_eVote_set_steam_fb253aa6b5654893(RemoteStorageUserVoteDetails_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageUserVoteDetails_t *arg1 = (RemoteStorageUserVoteDetails_t *) 0 ;
  EWorkshopVote arg2 ;
  
  arg1 = *(RemoteStorageUserVoteDetails_t **)&_swig_go_0; 
  arg2 = (EWorkshopVote)_swig_go_1; 
  
  if (arg1) (arg1)->m_eVote = arg2;
  
}


intgo _wrap_RemoteStorageUserVoteDetails_t_m_eVote_get_steam_fb253aa6b5654893(RemoteStorageUserVoteDetails_t *_swig_go_0) {
  RemoteStorageUserVoteDetails_t *arg1 = (RemoteStorageUserVoteDetails_t *) 0 ;
  EWorkshopVote result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageUserVoteDetails_t **)&_swig_go_0; 
  
  result = (EWorkshopVote) ((arg1)->m_eVote);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


RemoteStorageUserVoteDetails_t *_wrap_new_RemoteStorageUserVoteDetails_t_steam_fb253aa6b5654893() {
  RemoteStorageUserVoteDetails_t *result = 0 ;
  RemoteStorageUserVoteDetails_t *_swig_go_result;
  
  
  result = (RemoteStorageUserVoteDetails_t *)new RemoteStorageUserVoteDetails_t();
  *(RemoteStorageUserVoteDetails_t **)&_swig_go_result = (RemoteStorageUserVoteDetails_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageUserVoteDetails_t_steam_fb253aa6b5654893(RemoteStorageUserVoteDetails_t *_swig_go_0) {
  RemoteStorageUserVoteDetails_t *arg1 = (RemoteStorageUserVoteDetails_t *) 0 ;
  
  arg1 = *(RemoteStorageUserVoteDetails_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageEnumerateUserSharedWorkshopFilesResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_m_nResultsReturned_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nResultsReturned = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_m_nResultsReturned_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nResultsReturned);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_m_nTotalResultCount_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nTotalResultCount = arg2;
  
}


intgo _wrap_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_m_nTotalResultCount_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nTotalResultCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_m_rgPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_0, long long *_swig_go_1) {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *) 0 ;
  PublishedFileId_t *arg2 ;
  
  arg1 = *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_0; 
  arg2 = *(PublishedFileId_t **)&_swig_go_1; 
  
  {
    size_t ii;
    PublishedFileId_t *b = (PublishedFileId_t *) arg1->m_rgPublishedFileId;
    for (ii = 0; ii < (size_t)k_unEnumeratePublishedFilesMaxResults; ii++) b[ii] = *((PublishedFileId_t *) arg2 + ii);
  }
  
}


long long *_wrap_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_m_rgPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *) 0 ;
  PublishedFileId_t *result = 0 ;
  long long *_swig_go_result;
  
  arg1 = *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t *)(PublishedFileId_t *) ((arg1)->m_rgPublishedFileId);
  *(PublishedFileId_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_wrap_new_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_steam_fb253aa6b5654893() {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *result = 0 ;
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_result;
  
  
  result = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *)new RemoteStorageEnumerateUserSharedWorkshopFilesResult_t();
  *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_result = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_steam_fb253aa6b5654893(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *_swig_go_0) {
  RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *arg1 = (RemoteStorageEnumerateUserSharedWorkshopFilesResult_t *) 0 ;
  
  arg1 = *(RemoteStorageEnumerateUserSharedWorkshopFilesResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageSetUserPublishedFileActionResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageSetUserPublishedFileActionResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageSetUserPublishedFileActionResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageSetUserPublishedFileActionResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageSetUserPublishedFileActionResult_t *arg1 = (RemoteStorageSetUserPublishedFileActionResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageSetUserPublishedFileActionResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageSetUserPublishedFileActionResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageSetUserPublishedFileActionResult_t *_swig_go_0) {
  RemoteStorageSetUserPublishedFileActionResult_t *arg1 = (RemoteStorageSetUserPublishedFileActionResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageSetUserPublishedFileActionResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageSetUserPublishedFileActionResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageSetUserPublishedFileActionResult_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageSetUserPublishedFileActionResult_t *arg1 = (RemoteStorageSetUserPublishedFileActionResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStorageSetUserPublishedFileActionResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStorageSetUserPublishedFileActionResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageSetUserPublishedFileActionResult_t *_swig_go_0) {
  RemoteStorageSetUserPublishedFileActionResult_t *arg1 = (RemoteStorageSetUserPublishedFileActionResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageSetUserPublishedFileActionResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageSetUserPublishedFileActionResult_t_m_eAction_set_steam_fb253aa6b5654893(RemoteStorageSetUserPublishedFileActionResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageSetUserPublishedFileActionResult_t *arg1 = (RemoteStorageSetUserPublishedFileActionResult_t *) 0 ;
  EWorkshopFileAction arg2 ;
  
  arg1 = *(RemoteStorageSetUserPublishedFileActionResult_t **)&_swig_go_0; 
  arg2 = (EWorkshopFileAction)_swig_go_1; 
  
  if (arg1) (arg1)->m_eAction = arg2;
  
}


intgo _wrap_RemoteStorageSetUserPublishedFileActionResult_t_m_eAction_get_steam_fb253aa6b5654893(RemoteStorageSetUserPublishedFileActionResult_t *_swig_go_0) {
  RemoteStorageSetUserPublishedFileActionResult_t *arg1 = (RemoteStorageSetUserPublishedFileActionResult_t *) 0 ;
  EWorkshopFileAction result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageSetUserPublishedFileActionResult_t **)&_swig_go_0; 
  
  result = (EWorkshopFileAction) ((arg1)->m_eAction);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


RemoteStorageSetUserPublishedFileActionResult_t *_wrap_new_RemoteStorageSetUserPublishedFileActionResult_t_steam_fb253aa6b5654893() {
  RemoteStorageSetUserPublishedFileActionResult_t *result = 0 ;
  RemoteStorageSetUserPublishedFileActionResult_t *_swig_go_result;
  
  
  result = (RemoteStorageSetUserPublishedFileActionResult_t *)new RemoteStorageSetUserPublishedFileActionResult_t();
  *(RemoteStorageSetUserPublishedFileActionResult_t **)&_swig_go_result = (RemoteStorageSetUserPublishedFileActionResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageSetUserPublishedFileActionResult_t_steam_fb253aa6b5654893(RemoteStorageSetUserPublishedFileActionResult_t *_swig_go_0) {
  RemoteStorageSetUserPublishedFileActionResult_t *arg1 = (RemoteStorageSetUserPublishedFileActionResult_t *) 0 ;
  
  arg1 = *(RemoteStorageSetUserPublishedFileActionResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageEnumeratePublishedFilesByUserActionResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_eAction_set_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  EWorkshopFileAction arg2 ;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  arg2 = (EWorkshopFileAction)_swig_go_1; 
  
  if (arg1) (arg1)->m_eAction = arg2;
  
}


intgo _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_eAction_get_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  EWorkshopFileAction result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  
  result = (EWorkshopFileAction) ((arg1)->m_eAction);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_nResultsReturned_set_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nResultsReturned = arg2;
  
}


intgo _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_nResultsReturned_get_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nResultsReturned);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_nTotalResultCount_set_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nTotalResultCount = arg2;
  
}


intgo _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_nTotalResultCount_get_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nTotalResultCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_rgPublishedFileId_set_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0, long long *_swig_go_1) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  PublishedFileId_t *arg2 ;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  arg2 = *(PublishedFileId_t **)&_swig_go_1; 
  
  {
    size_t ii;
    PublishedFileId_t *b = (PublishedFileId_t *) arg1->m_rgPublishedFileId;
    for (ii = 0; ii < (size_t)k_unEnumeratePublishedFilesMaxResults; ii++) b[ii] = *((PublishedFileId_t *) arg2 + ii);
  }
  
}


long long *_wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_rgPublishedFileId_get_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  PublishedFileId_t *result = 0 ;
  long long *_swig_go_result;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t *)(PublishedFileId_t *) ((arg1)->m_rgPublishedFileId);
  *(PublishedFileId_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_rgRTimeUpdated_set_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0, intgo *_swig_go_1) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  uint32 *arg2 ;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  arg2 = *(uint32 **)&_swig_go_1; 
  
  {
    size_t ii;
    uint32 *b = (uint32 *) arg1->m_rgRTimeUpdated;
    for (ii = 0; ii < (size_t)k_unEnumeratePublishedFilesMaxResults; ii++) b[ii] = *((uint32 *) arg2 + ii);
  }
  
}


intgo *_wrap_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_m_rgRTimeUpdated_get_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  uint32 *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  
  result = (uint32 *)(uint32 *) ((arg1)->m_rgRTimeUpdated);
  *(uint32 **)&_swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_wrap_new_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_steam_fb253aa6b5654893() {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *result = 0 ;
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_result;
  
  
  result = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *)new RemoteStorageEnumeratePublishedFilesByUserActionResult_t();
  *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_result = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_steam_fb253aa6b5654893(RemoteStorageEnumeratePublishedFilesByUserActionResult_t *_swig_go_0) {
  RemoteStorageEnumeratePublishedFilesByUserActionResult_t *arg1 = (RemoteStorageEnumeratePublishedFilesByUserActionResult_t *) 0 ;
  
  arg1 = *(RemoteStorageEnumeratePublishedFilesByUserActionResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStoragePublishFileProgress_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStoragePublishFileProgress_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishFileProgress_t_m_dPercentFile_set_steam_fb253aa6b5654893(RemoteStoragePublishFileProgress_t *_swig_go_0, double _swig_go_1) {
  RemoteStoragePublishFileProgress_t *arg1 = (RemoteStoragePublishFileProgress_t *) 0 ;
  double arg2 ;
  
  arg1 = *(RemoteStoragePublishFileProgress_t **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_dPercentFile = arg2;
  
}


double _wrap_RemoteStoragePublishFileProgress_t_m_dPercentFile_get_steam_fb253aa6b5654893(RemoteStoragePublishFileProgress_t *_swig_go_0) {
  RemoteStoragePublishFileProgress_t *arg1 = (RemoteStoragePublishFileProgress_t *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(RemoteStoragePublishFileProgress_t **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_dPercentFile);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishFileProgress_t_m_bPreview_set_steam_fb253aa6b5654893(RemoteStoragePublishFileProgress_t *_swig_go_0, bool _swig_go_1) {
  RemoteStoragePublishFileProgress_t *arg1 = (RemoteStoragePublishFileProgress_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(RemoteStoragePublishFileProgress_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bPreview = arg2;
  
}


bool _wrap_RemoteStoragePublishFileProgress_t_m_bPreview_get_steam_fb253aa6b5654893(RemoteStoragePublishFileProgress_t *_swig_go_0) {
  RemoteStoragePublishFileProgress_t *arg1 = (RemoteStoragePublishFileProgress_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(RemoteStoragePublishFileProgress_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bPreview);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStoragePublishFileProgress_t *_wrap_new_RemoteStoragePublishFileProgress_t_steam_fb253aa6b5654893() {
  RemoteStoragePublishFileProgress_t *result = 0 ;
  RemoteStoragePublishFileProgress_t *_swig_go_result;
  
  
  result = (RemoteStoragePublishFileProgress_t *)new RemoteStoragePublishFileProgress_t();
  *(RemoteStoragePublishFileProgress_t **)&_swig_go_result = (RemoteStoragePublishFileProgress_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStoragePublishFileProgress_t_steam_fb253aa6b5654893(RemoteStoragePublishFileProgress_t *_swig_go_0) {
  RemoteStoragePublishFileProgress_t *arg1 = (RemoteStoragePublishFileProgress_t *) 0 ;
  
  arg1 = *(RemoteStoragePublishFileProgress_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStoragePublishedFileUpdated_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStoragePublishedFileUpdated_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishedFileUpdated_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoteStoragePublishedFileUpdated_t *_swig_go_0, long long _swig_go_1) {
  RemoteStoragePublishedFileUpdated_t *arg1 = (RemoteStoragePublishedFileUpdated_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoteStoragePublishedFileUpdated_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoteStoragePublishedFileUpdated_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoteStoragePublishedFileUpdated_t *_swig_go_0) {
  RemoteStoragePublishedFileUpdated_t *arg1 = (RemoteStoragePublishedFileUpdated_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStoragePublishedFileUpdated_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishedFileUpdated_t_m_nAppID_set_steam_fb253aa6b5654893(RemoteStoragePublishedFileUpdated_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStoragePublishedFileUpdated_t *arg1 = (RemoteStoragePublishedFileUpdated_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoteStoragePublishedFileUpdated_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoteStoragePublishedFileUpdated_t_m_nAppID_get_steam_fb253aa6b5654893(RemoteStoragePublishedFileUpdated_t *_swig_go_0) {
  RemoteStoragePublishedFileUpdated_t *arg1 = (RemoteStoragePublishedFileUpdated_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStoragePublishedFileUpdated_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStoragePublishedFileUpdated_t_m_ulUnused_set_steam_fb253aa6b5654893(RemoteStoragePublishedFileUpdated_t *_swig_go_0, long long _swig_go_1) {
  RemoteStoragePublishedFileUpdated_t *arg1 = (RemoteStoragePublishedFileUpdated_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(RemoteStoragePublishedFileUpdated_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulUnused = arg2;
  
}


long long _wrap_RemoteStoragePublishedFileUpdated_t_m_ulUnused_get_steam_fb253aa6b5654893(RemoteStoragePublishedFileUpdated_t *_swig_go_0) {
  RemoteStoragePublishedFileUpdated_t *arg1 = (RemoteStoragePublishedFileUpdated_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStoragePublishedFileUpdated_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulUnused);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStoragePublishedFileUpdated_t *_wrap_new_RemoteStoragePublishedFileUpdated_t_steam_fb253aa6b5654893() {
  RemoteStoragePublishedFileUpdated_t *result = 0 ;
  RemoteStoragePublishedFileUpdated_t *_swig_go_result;
  
  
  result = (RemoteStoragePublishedFileUpdated_t *)new RemoteStoragePublishedFileUpdated_t();
  *(RemoteStoragePublishedFileUpdated_t **)&_swig_go_result = (RemoteStoragePublishedFileUpdated_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStoragePublishedFileUpdated_t_steam_fb253aa6b5654893(RemoteStoragePublishedFileUpdated_t *_swig_go_0) {
  RemoteStoragePublishedFileUpdated_t *arg1 = (RemoteStoragePublishedFileUpdated_t *) 0 ;
  
  arg1 = *(RemoteStoragePublishedFileUpdated_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageFileWriteAsyncComplete_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageFileWriteAsyncComplete_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageFileWriteAsyncComplete_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageFileWriteAsyncComplete_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageFileWriteAsyncComplete_t *arg1 = (RemoteStorageFileWriteAsyncComplete_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageFileWriteAsyncComplete_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageFileWriteAsyncComplete_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageFileWriteAsyncComplete_t *_swig_go_0) {
  RemoteStorageFileWriteAsyncComplete_t *arg1 = (RemoteStorageFileWriteAsyncComplete_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageFileWriteAsyncComplete_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


RemoteStorageFileWriteAsyncComplete_t *_wrap_new_RemoteStorageFileWriteAsyncComplete_t_steam_fb253aa6b5654893() {
  RemoteStorageFileWriteAsyncComplete_t *result = 0 ;
  RemoteStorageFileWriteAsyncComplete_t *_swig_go_result;
  
  
  result = (RemoteStorageFileWriteAsyncComplete_t *)new RemoteStorageFileWriteAsyncComplete_t();
  *(RemoteStorageFileWriteAsyncComplete_t **)&_swig_go_result = (RemoteStorageFileWriteAsyncComplete_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageFileWriteAsyncComplete_t_steam_fb253aa6b5654893(RemoteStorageFileWriteAsyncComplete_t *_swig_go_0) {
  RemoteStorageFileWriteAsyncComplete_t *arg1 = (RemoteStorageFileWriteAsyncComplete_t *) 0 ;
  
  arg1 = *(RemoteStorageFileWriteAsyncComplete_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoteStorageFileReadAsyncComplete_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoteStorageFileReadAsyncComplete_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageFileReadAsyncComplete_t_m_hFileReadAsync_set_steam_fb253aa6b5654893(RemoteStorageFileReadAsyncComplete_t *_swig_go_0, long long _swig_go_1) {
  RemoteStorageFileReadAsyncComplete_t *arg1 = (RemoteStorageFileReadAsyncComplete_t *) 0 ;
  SteamAPICall_t arg2 ;
  
  arg1 = *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_0; 
  arg2 = (SteamAPICall_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hFileReadAsync = arg2;
  
}


long long _wrap_RemoteStorageFileReadAsyncComplete_t_m_hFileReadAsync_get_steam_fb253aa6b5654893(RemoteStorageFileReadAsyncComplete_t *_swig_go_0) {
  RemoteStorageFileReadAsyncComplete_t *arg1 = (RemoteStorageFileReadAsyncComplete_t *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_0; 
  
  result = (SteamAPICall_t) ((arg1)->m_hFileReadAsync);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageFileReadAsyncComplete_t_m_eResult_set_steam_fb253aa6b5654893(RemoteStorageFileReadAsyncComplete_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageFileReadAsyncComplete_t *arg1 = (RemoteStorageFileReadAsyncComplete_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoteStorageFileReadAsyncComplete_t_m_eResult_get_steam_fb253aa6b5654893(RemoteStorageFileReadAsyncComplete_t *_swig_go_0) {
  RemoteStorageFileReadAsyncComplete_t *arg1 = (RemoteStorageFileReadAsyncComplete_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageFileReadAsyncComplete_t_m_nOffset_set_steam_fb253aa6b5654893(RemoteStorageFileReadAsyncComplete_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageFileReadAsyncComplete_t *arg1 = (RemoteStorageFileReadAsyncComplete_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nOffset = arg2;
  
}


intgo _wrap_RemoteStorageFileReadAsyncComplete_t_m_nOffset_get_steam_fb253aa6b5654893(RemoteStorageFileReadAsyncComplete_t *_swig_go_0) {
  RemoteStorageFileReadAsyncComplete_t *arg1 = (RemoteStorageFileReadAsyncComplete_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nOffset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoteStorageFileReadAsyncComplete_t_m_cubRead_set_steam_fb253aa6b5654893(RemoteStorageFileReadAsyncComplete_t *_swig_go_0, intgo _swig_go_1) {
  RemoteStorageFileReadAsyncComplete_t *arg1 = (RemoteStorageFileReadAsyncComplete_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_cubRead = arg2;
  
}


intgo _wrap_RemoteStorageFileReadAsyncComplete_t_m_cubRead_get_steam_fb253aa6b5654893(RemoteStorageFileReadAsyncComplete_t *_swig_go_0) {
  RemoteStorageFileReadAsyncComplete_t *arg1 = (RemoteStorageFileReadAsyncComplete_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_cubRead);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoteStorageFileReadAsyncComplete_t *_wrap_new_RemoteStorageFileReadAsyncComplete_t_steam_fb253aa6b5654893() {
  RemoteStorageFileReadAsyncComplete_t *result = 0 ;
  RemoteStorageFileReadAsyncComplete_t *_swig_go_result;
  
  
  result = (RemoteStorageFileReadAsyncComplete_t *)new RemoteStorageFileReadAsyncComplete_t();
  *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_result = (RemoteStorageFileReadAsyncComplete_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoteStorageFileReadAsyncComplete_t_steam_fb253aa6b5654893(RemoteStorageFileReadAsyncComplete_t *_swig_go_0) {
  RemoteStorageFileReadAsyncComplete_t *arg1 = (RemoteStorageFileReadAsyncComplete_t *) 0 ;
  
  arg1 = *(RemoteStorageFileReadAsyncComplete_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_cchStatNameMax_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_cchStatNameMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_cchLeaderboardNameMax_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_cchLeaderboardNameMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_cLeaderboardDetailsMax_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = k_cLeaderboardDetailsMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardDataRequestGlobal_steam_fb253aa6b5654893() {
  ELeaderboardDataRequest result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardDataRequestGlobal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardDataRequestGlobalAroundUser_steam_fb253aa6b5654893() {
  ELeaderboardDataRequest result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardDataRequestGlobalAroundUser;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardDataRequestFriends_steam_fb253aa6b5654893() {
  ELeaderboardDataRequest result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardDataRequestFriends;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardDataRequestUsers_steam_fb253aa6b5654893() {
  ELeaderboardDataRequest result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardDataRequestUsers;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardSortMethodNone_steam_fb253aa6b5654893() {
  ELeaderboardSortMethod result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardSortMethodNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardSortMethodAscending_steam_fb253aa6b5654893() {
  ELeaderboardSortMethod result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardSortMethodAscending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardSortMethodDescending_steam_fb253aa6b5654893() {
  ELeaderboardSortMethod result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardSortMethodDescending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardDisplayTypeNone_steam_fb253aa6b5654893() {
  ELeaderboardDisplayType result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardDisplayTypeNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardDisplayTypeNumeric_steam_fb253aa6b5654893() {
  ELeaderboardDisplayType result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardDisplayTypeNumeric;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardDisplayTypeTimeSeconds_steam_fb253aa6b5654893() {
  ELeaderboardDisplayType result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardDisplayTypeTimeSeconds;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardDisplayTypeTimeMilliSeconds_steam_fb253aa6b5654893() {
  ELeaderboardDisplayType result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardDisplayTypeTimeMilliSeconds;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardUploadScoreMethodNone_steam_fb253aa6b5654893() {
  ELeaderboardUploadScoreMethod result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardUploadScoreMethodNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardUploadScoreMethodKeepBest_steam_fb253aa6b5654893() {
  ELeaderboardUploadScoreMethod result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardUploadScoreMethodKeepBest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ELeaderboardUploadScoreMethodForceUpdate_steam_fb253aa6b5654893() {
  ELeaderboardUploadScoreMethod result;
  intgo _swig_go_result;
  
  
  result = k_ELeaderboardUploadScoreMethodForceUpdate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LeaderboardEntry_t_m_steamIDUser_set_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0, CSteamID *_swig_go_1) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDUser = *arg2;
  
}


CSteamID *_wrap_LeaderboardEntry_t_m_steamIDUser_get_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDUser);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_LeaderboardEntry_t_m_nGlobalRank_set_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0, intgo _swig_go_1) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nGlobalRank = arg2;
  
}


intgo _wrap_LeaderboardEntry_t_m_nGlobalRank_get_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nGlobalRank);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardEntry_t_m_nScore_set_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0, intgo _swig_go_1) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nScore = arg2;
  
}


intgo _wrap_LeaderboardEntry_t_m_nScore_get_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nScore);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardEntry_t_m_cDetails_set_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0, intgo _swig_go_1) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_cDetails = arg2;
  
}


intgo _wrap_LeaderboardEntry_t_m_cDetails_get_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_cDetails);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardEntry_t_m_hUGC_set_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0, long long _swig_go_1) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  UGCHandle_t arg2 ;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hUGC = arg2;
  
}


long long _wrap_LeaderboardEntry_t_m_hUGC_get_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  UGCHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  
  result = (UGCHandle_t) ((arg1)->m_hUGC);
  _swig_go_result = result; 
  return _swig_go_result;
}


LeaderboardEntry_t *_wrap_new_LeaderboardEntry_t_steam_fb253aa6b5654893() {
  LeaderboardEntry_t *result = 0 ;
  LeaderboardEntry_t *_swig_go_result;
  
  
  result = (LeaderboardEntry_t *)new LeaderboardEntry_t();
  *(LeaderboardEntry_t **)&_swig_go_result = (LeaderboardEntry_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LeaderboardEntry_t_steam_fb253aa6b5654893(LeaderboardEntry_t *_swig_go_0) {
  LeaderboardEntry_t *arg1 = (LeaderboardEntry_t *) 0 ;
  
  arg1 = *(LeaderboardEntry_t **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_ISteamUserStats_RequestCurrentStats_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  result = (bool)(arg1)->RequestCurrentStats();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetStat__SWIG_0_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, intgo *_swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  int32 *arg3 = (int32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(int32 **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetStat((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetStat__SWIG_1_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, float *_swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = (float *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(float **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetStat((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_SetStat__SWIG_0_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  int32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int32)_swig_go_2; 
  
  result = (bool)(arg1)->SetStat((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_SetStat__SWIG_1_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (float)_swig_go_2; 
  
  result = (bool)(arg1)->SetStat((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_UpdateAvgRateStat_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2, double _swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  double arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (float)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (bool)(arg1)->UpdateAvgRateStat((char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetAchievement_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, bool *_swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  bool *arg3 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(bool **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetAchievement((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_SetAchievement_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->SetAchievement((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_ClearAchievement_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->ClearAchievement((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetAchievementAndUnlockTime_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, bool *_swig_go_2, intgo *_swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  bool *arg3 = (bool *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(bool **)&_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetAchievementAndUnlockTime((char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_StoreStats_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  result = (bool)(arg1)->StoreStats();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUserStats_GetAchievementIcon_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int)(arg1)->GetAchievementIcon((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamUserStats_GetAchievementDisplayAttribute_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (char *)(arg1)->GetAchievementDisplayAttribute((char const *)arg2,(char const *)arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_IndicateAchievementProgress_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32 arg3 ;
  uint32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (bool)(arg1)->IndicateAchievementProgress((char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_ISteamUserStats_GetNumAchievements_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetNumAchievements();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamUserStats_GetAchievementName_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, intgo _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  uint32 arg2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  result = (char *)(arg1)->GetAchievementName(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_RequestUserStats_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (SteamAPICall_t)(arg1)->RequestUserStats(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetUserStat__SWIG_0_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2, intgo *_swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  int32 *arg4 = (int32 *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(int32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetUserStat(arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetUserStat__SWIG_1_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2, float *_swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  float *arg4 = (float *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(float **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetUserStat(arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetUserAchievement_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2, bool *_swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  bool *arg4 = (bool *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(bool **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetUserAchievement(arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetUserAchievementAndUnlockTime_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, CSteamID *_swig_go_1, _gostring_ _swig_go_2, bool *_swig_go_3, intgo *_swig_go_4) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  CSteamID arg2 ;
  char *arg3 = (char *) 0 ;
  bool *arg4 = (bool *) 0 ;
  uint32 *arg5 = (uint32 *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(bool **)&_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  
  result = (bool)(arg1)->GetUserAchievementAndUnlockTime(arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_ResetAllStats_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, bool _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->ResetAllStats(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_FindOrCreateLeaderboard_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  ELeaderboardSortMethod arg3 ;
  ELeaderboardDisplayType arg4 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (ELeaderboardSortMethod)_swig_go_2; 
  arg4 = (ELeaderboardDisplayType)_swig_go_3; 
  
  result = (SteamAPICall_t)(arg1)->FindOrCreateLeaderboard((char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_FindLeaderboard_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (SteamAPICall_t)(arg1)->FindLeaderboard((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamUserStats_GetLeaderboardName_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, long long _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamLeaderboard_t arg2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  
  result = (char *)(arg1)->GetLeaderboardName(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_ISteamUserStats_GetLeaderboardEntryCount_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, long long _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamLeaderboard_t arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  
  result = (int)(arg1)->GetLeaderboardEntryCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUserStats_GetLeaderboardSortMethod_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, long long _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamLeaderboard_t arg2 ;
  ELeaderboardSortMethod result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  
  result = (ELeaderboardSortMethod)(arg1)->GetLeaderboardSortMethod(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUserStats_GetLeaderboardDisplayType_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, long long _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamLeaderboard_t arg2 ;
  ELeaderboardDisplayType result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  
  result = (ELeaderboardDisplayType)(arg1)->GetLeaderboardDisplayType(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_DownloadLeaderboardEntries_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamLeaderboard_t arg2 ;
  ELeaderboardDataRequest arg3 ;
  int arg4 ;
  int arg5 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  arg3 = (ELeaderboardDataRequest)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (SteamAPICall_t)(arg1)->DownloadLeaderboardEntries(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_DownloadLeaderboardEntriesForUsers_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, long long _swig_go_1, CSteamID *_swig_go_2, intgo _swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamLeaderboard_t arg2 ;
  CSteamID *arg3 = (CSteamID *) 0 ;
  int arg4 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  arg3 = *(CSteamID **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (SteamAPICall_t)(arg1)->DownloadLeaderboardEntriesForUsers(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetDownloadedLeaderboardEntry_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, LeaderboardEntry_t *_swig_go_3, intgo *_swig_go_4, intgo _swig_go_5) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamLeaderboardEntries_t arg2 ;
  int arg3 ;
  LeaderboardEntry_t *arg4 = (LeaderboardEntry_t *) 0 ;
  int32 *arg5 = (int32 *) 0 ;
  int arg6 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (SteamLeaderboardEntries_t)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(LeaderboardEntry_t **)&_swig_go_3; 
  arg5 = *(int32 **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (bool)(arg1)->GetDownloadedLeaderboardEntry(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_UploadLeaderboardScore_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo *_swig_go_4, intgo _swig_go_5) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamLeaderboard_t arg2 ;
  ELeaderboardUploadScoreMethod arg3 ;
  int32 arg4 ;
  int32 *arg5 = (int32 *) 0 ;
  int arg6 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  arg3 = (ELeaderboardUploadScoreMethod)_swig_go_2; 
  arg4 = (int32)_swig_go_3; 
  arg5 = *(int32 **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (SteamAPICall_t)(arg1)->UploadLeaderboardScore(arg2,arg3,arg4,(int32 const *)arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_AttachLeaderboardUGC_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamLeaderboard_t arg2 ;
  UGCHandle_t arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  arg3 = (UGCHandle_t)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->AttachLeaderboardUGC(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_GetNumberOfCurrentPlayers_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  result = (SteamAPICall_t)(arg1)->GetNumberOfCurrentPlayers();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_RequestGlobalAchievementPercentages_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  result = (SteamAPICall_t)(arg1)->RequestGlobalAchievementPercentages();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUserStats_GetMostAchievedAchievementInfo_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, float *_swig_go_3, bool *_swig_go_4) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  uint32 arg3 ;
  float *arg4 = (float *) 0 ;
  bool *arg5 = (bool *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (uint32)_swig_go_2; 
  arg4 = *(float **)&_swig_go_3; 
  arg5 = *(bool **)&_swig_go_4; 
  
  result = (int)(arg1)->GetMostAchievedAchievementInfo(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_ISteamUserStats_GetNextMostAchievedAchievementInfo_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, float *_swig_go_4, bool *_swig_go_5) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  uint32 arg4 ;
  float *arg5 = (float *) 0 ;
  bool *arg6 = (bool *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(float **)&_swig_go_4; 
  arg6 = *(bool **)&_swig_go_5; 
  
  result = (int)(arg1)->GetNextMostAchievedAchievementInfo(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetAchievementAchievedPercent_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, float *_swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = (float *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(float **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetAchievementAchievedPercent((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


long long _wrap_ISteamUserStats_RequestGlobalStats_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, intgo _swig_go_1) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  int arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->RequestGlobalStats(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetGlobalStat__SWIG_0_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, long long *_swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  int64 *arg3 = (int64 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(int64 **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetGlobalStat((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamUserStats_GetGlobalStat__SWIG_1_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, double *_swig_go_2) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  double *arg3 = (double *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(double **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetGlobalStat((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_ISteamUserStats_GetGlobalStatHistory__SWIG_0_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, long long *_swig_go_2, intgo _swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  int64 *arg3 = (int64 *) 0 ;
  uint32 arg4 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(int64 **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (int32)(arg1)->GetGlobalStatHistory((char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_ISteamUserStats_GetGlobalStatHistory__SWIG_1_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0, _gostring_ _swig_go_1, double *_swig_go_2, intgo _swig_go_3) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  char *arg2 = (char *) 0 ;
  double *arg3 = (double *) 0 ;
  uint32 arg4 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(double **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (int32)(arg1)->GetGlobalStatHistory((char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_delete_ISteamUserStats_steam_fb253aa6b5654893(ISteamUserStats *_swig_go_0) {
  ISteamUserStats *arg1 = (ISteamUserStats *) 0 ;
  
  arg1 = *(ISteamUserStats **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_UserStatsReceived_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = UserStatsReceived_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_UserStatsReceived_t_m_nGameID_set_steam_fb253aa6b5654893(UserStatsReceived_t *_swig_go_0, long long _swig_go_1) {
  UserStatsReceived_t *arg1 = (UserStatsReceived_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(UserStatsReceived_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_nGameID = arg2;
  
}


long long _wrap_UserStatsReceived_t_m_nGameID_get_steam_fb253aa6b5654893(UserStatsReceived_t *_swig_go_0) {
  UserStatsReceived_t *arg1 = (UserStatsReceived_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(UserStatsReceived_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_nGameID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_UserStatsReceived_t_m_eResult_set_steam_fb253aa6b5654893(UserStatsReceived_t *_swig_go_0, intgo _swig_go_1) {
  UserStatsReceived_t *arg1 = (UserStatsReceived_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(UserStatsReceived_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_UserStatsReceived_t_m_eResult_get_steam_fb253aa6b5654893(UserStatsReceived_t *_swig_go_0) {
  UserStatsReceived_t *arg1 = (UserStatsReceived_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(UserStatsReceived_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_UserStatsReceived_t_m_steamIDUser_set_steam_fb253aa6b5654893(UserStatsReceived_t *_swig_go_0, CSteamID *_swig_go_1) {
  UserStatsReceived_t *arg1 = (UserStatsReceived_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(UserStatsReceived_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDUser = *arg2;
  
}


CSteamID *_wrap_UserStatsReceived_t_m_steamIDUser_get_steam_fb253aa6b5654893(UserStatsReceived_t *_swig_go_0) {
  UserStatsReceived_t *arg1 = (UserStatsReceived_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(UserStatsReceived_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDUser);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


UserStatsReceived_t *_wrap_new_UserStatsReceived_t_steam_fb253aa6b5654893() {
  UserStatsReceived_t *result = 0 ;
  UserStatsReceived_t *_swig_go_result;
  
  
  result = (UserStatsReceived_t *)new UserStatsReceived_t();
  *(UserStatsReceived_t **)&_swig_go_result = (UserStatsReceived_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_UserStatsReceived_t_steam_fb253aa6b5654893(UserStatsReceived_t *_swig_go_0) {
  UserStatsReceived_t *arg1 = (UserStatsReceived_t *) 0 ;
  
  arg1 = *(UserStatsReceived_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_UserStatsStored_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = UserStatsStored_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_UserStatsStored_t_m_nGameID_set_steam_fb253aa6b5654893(UserStatsStored_t *_swig_go_0, long long _swig_go_1) {
  UserStatsStored_t *arg1 = (UserStatsStored_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(UserStatsStored_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_nGameID = arg2;
  
}


long long _wrap_UserStatsStored_t_m_nGameID_get_steam_fb253aa6b5654893(UserStatsStored_t *_swig_go_0) {
  UserStatsStored_t *arg1 = (UserStatsStored_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(UserStatsStored_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_nGameID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_UserStatsStored_t_m_eResult_set_steam_fb253aa6b5654893(UserStatsStored_t *_swig_go_0, intgo _swig_go_1) {
  UserStatsStored_t *arg1 = (UserStatsStored_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(UserStatsStored_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_UserStatsStored_t_m_eResult_get_steam_fb253aa6b5654893(UserStatsStored_t *_swig_go_0) {
  UserStatsStored_t *arg1 = (UserStatsStored_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(UserStatsStored_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


UserStatsStored_t *_wrap_new_UserStatsStored_t_steam_fb253aa6b5654893() {
  UserStatsStored_t *result = 0 ;
  UserStatsStored_t *_swig_go_result;
  
  
  result = (UserStatsStored_t *)new UserStatsStored_t();
  *(UserStatsStored_t **)&_swig_go_result = (UserStatsStored_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_UserStatsStored_t_steam_fb253aa6b5654893(UserStatsStored_t *_swig_go_0) {
  UserStatsStored_t *arg1 = (UserStatsStored_t *) 0 ;
  
  arg1 = *(UserStatsStored_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_UserAchievementStored_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = UserAchievementStored_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_UserAchievementStored_t_m_nGameID_set_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0, long long _swig_go_1) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_nGameID = arg2;
  
}


long long _wrap_UserAchievementStored_t_m_nGameID_get_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_nGameID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_UserAchievementStored_t_m_bGroupAchievement_set_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0, bool _swig_go_1) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bGroupAchievement = arg2;
  
}


bool _wrap_UserAchievementStored_t_m_bGroupAchievement_get_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bGroupAchievement);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_UserAchievementStored_t_m_rgchAchievementName_set_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0, _gostring_ _swig_go_1) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchAchievementName, (const char *)arg2, k_cchStatNameMax-1);
      arg1->m_rgchAchievementName[k_cchStatNameMax-1] = 0;
    } else {
      arg1->m_rgchAchievementName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_UserAchievementStored_t_m_rgchAchievementName_get_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchAchievementName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_UserAchievementStored_t_m_nCurProgress_set_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0, intgo _swig_go_1) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nCurProgress = arg2;
  
}


intgo _wrap_UserAchievementStored_t_m_nCurProgress_get_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nCurProgress);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_UserAchievementStored_t_m_nMaxProgress_set_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0, intgo _swig_go_1) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nMaxProgress = arg2;
  
}


intgo _wrap_UserAchievementStored_t_m_nMaxProgress_get_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nMaxProgress);
  _swig_go_result = result; 
  return _swig_go_result;
}


UserAchievementStored_t *_wrap_new_UserAchievementStored_t_steam_fb253aa6b5654893() {
  UserAchievementStored_t *result = 0 ;
  UserAchievementStored_t *_swig_go_result;
  
  
  result = (UserAchievementStored_t *)new UserAchievementStored_t();
  *(UserAchievementStored_t **)&_swig_go_result = (UserAchievementStored_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_UserAchievementStored_t_steam_fb253aa6b5654893(UserAchievementStored_t *_swig_go_0) {
  UserAchievementStored_t *arg1 = (UserAchievementStored_t *) 0 ;
  
  arg1 = *(UserAchievementStored_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LeaderboardFindResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LeaderboardFindResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LeaderboardFindResult_t_m_hSteamLeaderboard_set_steam_fb253aa6b5654893(LeaderboardFindResult_t *_swig_go_0, long long _swig_go_1) {
  LeaderboardFindResult_t *arg1 = (LeaderboardFindResult_t *) 0 ;
  SteamLeaderboard_t arg2 ;
  
  arg1 = *(LeaderboardFindResult_t **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hSteamLeaderboard = arg2;
  
}


long long _wrap_LeaderboardFindResult_t_m_hSteamLeaderboard_get_steam_fb253aa6b5654893(LeaderboardFindResult_t *_swig_go_0) {
  LeaderboardFindResult_t *arg1 = (LeaderboardFindResult_t *) 0 ;
  SteamLeaderboard_t result;
  long long _swig_go_result;
  
  arg1 = *(LeaderboardFindResult_t **)&_swig_go_0; 
  
  result = (SteamLeaderboard_t) ((arg1)->m_hSteamLeaderboard);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardFindResult_t_m_bLeaderboardFound_set_steam_fb253aa6b5654893(LeaderboardFindResult_t *_swig_go_0, char _swig_go_1) {
  LeaderboardFindResult_t *arg1 = (LeaderboardFindResult_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(LeaderboardFindResult_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bLeaderboardFound = arg2;
  
}


char _wrap_LeaderboardFindResult_t_m_bLeaderboardFound_get_steam_fb253aa6b5654893(LeaderboardFindResult_t *_swig_go_0) {
  LeaderboardFindResult_t *arg1 = (LeaderboardFindResult_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(LeaderboardFindResult_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bLeaderboardFound);
  _swig_go_result = result; 
  return _swig_go_result;
}


LeaderboardFindResult_t *_wrap_new_LeaderboardFindResult_t_steam_fb253aa6b5654893() {
  LeaderboardFindResult_t *result = 0 ;
  LeaderboardFindResult_t *_swig_go_result;
  
  
  result = (LeaderboardFindResult_t *)new LeaderboardFindResult_t();
  *(LeaderboardFindResult_t **)&_swig_go_result = (LeaderboardFindResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LeaderboardFindResult_t_steam_fb253aa6b5654893(LeaderboardFindResult_t *_swig_go_0) {
  LeaderboardFindResult_t *arg1 = (LeaderboardFindResult_t *) 0 ;
  
  arg1 = *(LeaderboardFindResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LeaderboardScoresDownloaded_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LeaderboardScoresDownloaded_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LeaderboardScoresDownloaded_t_m_hSteamLeaderboard_set_steam_fb253aa6b5654893(LeaderboardScoresDownloaded_t *_swig_go_0, long long _swig_go_1) {
  LeaderboardScoresDownloaded_t *arg1 = (LeaderboardScoresDownloaded_t *) 0 ;
  SteamLeaderboard_t arg2 ;
  
  arg1 = *(LeaderboardScoresDownloaded_t **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hSteamLeaderboard = arg2;
  
}


long long _wrap_LeaderboardScoresDownloaded_t_m_hSteamLeaderboard_get_steam_fb253aa6b5654893(LeaderboardScoresDownloaded_t *_swig_go_0) {
  LeaderboardScoresDownloaded_t *arg1 = (LeaderboardScoresDownloaded_t *) 0 ;
  SteamLeaderboard_t result;
  long long _swig_go_result;
  
  arg1 = *(LeaderboardScoresDownloaded_t **)&_swig_go_0; 
  
  result = (SteamLeaderboard_t) ((arg1)->m_hSteamLeaderboard);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardScoresDownloaded_t_m_hSteamLeaderboardEntries_set_steam_fb253aa6b5654893(LeaderboardScoresDownloaded_t *_swig_go_0, long long _swig_go_1) {
  LeaderboardScoresDownloaded_t *arg1 = (LeaderboardScoresDownloaded_t *) 0 ;
  SteamLeaderboardEntries_t arg2 ;
  
  arg1 = *(LeaderboardScoresDownloaded_t **)&_swig_go_0; 
  arg2 = (SteamLeaderboardEntries_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hSteamLeaderboardEntries = arg2;
  
}


long long _wrap_LeaderboardScoresDownloaded_t_m_hSteamLeaderboardEntries_get_steam_fb253aa6b5654893(LeaderboardScoresDownloaded_t *_swig_go_0) {
  LeaderboardScoresDownloaded_t *arg1 = (LeaderboardScoresDownloaded_t *) 0 ;
  SteamLeaderboardEntries_t result;
  long long _swig_go_result;
  
  arg1 = *(LeaderboardScoresDownloaded_t **)&_swig_go_0; 
  
  result = (SteamLeaderboardEntries_t) ((arg1)->m_hSteamLeaderboardEntries);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardScoresDownloaded_t_m_cEntryCount_set_steam_fb253aa6b5654893(LeaderboardScoresDownloaded_t *_swig_go_0, intgo _swig_go_1) {
  LeaderboardScoresDownloaded_t *arg1 = (LeaderboardScoresDownloaded_t *) 0 ;
  int arg2 ;
  
  arg1 = *(LeaderboardScoresDownloaded_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_cEntryCount = arg2;
  
}


intgo _wrap_LeaderboardScoresDownloaded_t_m_cEntryCount_get_steam_fb253aa6b5654893(LeaderboardScoresDownloaded_t *_swig_go_0) {
  LeaderboardScoresDownloaded_t *arg1 = (LeaderboardScoresDownloaded_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LeaderboardScoresDownloaded_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_cEntryCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


LeaderboardScoresDownloaded_t *_wrap_new_LeaderboardScoresDownloaded_t_steam_fb253aa6b5654893() {
  LeaderboardScoresDownloaded_t *result = 0 ;
  LeaderboardScoresDownloaded_t *_swig_go_result;
  
  
  result = (LeaderboardScoresDownloaded_t *)new LeaderboardScoresDownloaded_t();
  *(LeaderboardScoresDownloaded_t **)&_swig_go_result = (LeaderboardScoresDownloaded_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LeaderboardScoresDownloaded_t_steam_fb253aa6b5654893(LeaderboardScoresDownloaded_t *_swig_go_0) {
  LeaderboardScoresDownloaded_t *arg1 = (LeaderboardScoresDownloaded_t *) 0 ;
  
  arg1 = *(LeaderboardScoresDownloaded_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LeaderboardScoreUploaded_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LeaderboardScoreUploaded_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LeaderboardScoreUploaded_t_m_bSuccess_set_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0, char _swig_go_1) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bSuccess = arg2;
  
}


char _wrap_LeaderboardScoreUploaded_t_m_bSuccess_get_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bSuccess);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardScoreUploaded_t_m_hSteamLeaderboard_set_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0, long long _swig_go_1) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  SteamLeaderboard_t arg2 ;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hSteamLeaderboard = arg2;
  
}


long long _wrap_LeaderboardScoreUploaded_t_m_hSteamLeaderboard_get_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  SteamLeaderboard_t result;
  long long _swig_go_result;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  
  result = (SteamLeaderboard_t) ((arg1)->m_hSteamLeaderboard);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardScoreUploaded_t_m_nScore_set_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0, intgo _swig_go_1) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nScore = arg2;
  
}


intgo _wrap_LeaderboardScoreUploaded_t_m_nScore_get_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nScore);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardScoreUploaded_t_m_bScoreChanged_set_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0, char _swig_go_1) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bScoreChanged = arg2;
  
}


char _wrap_LeaderboardScoreUploaded_t_m_bScoreChanged_get_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bScoreChanged);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardScoreUploaded_t_m_nGlobalRankNew_set_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0, intgo _swig_go_1) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  int arg2 ;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nGlobalRankNew = arg2;
  
}


intgo _wrap_LeaderboardScoreUploaded_t_m_nGlobalRankNew_get_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nGlobalRankNew);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LeaderboardScoreUploaded_t_m_nGlobalRankPrevious_set_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0, intgo _swig_go_1) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  int arg2 ;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nGlobalRankPrevious = arg2;
  
}


intgo _wrap_LeaderboardScoreUploaded_t_m_nGlobalRankPrevious_get_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nGlobalRankPrevious);
  _swig_go_result = result; 
  return _swig_go_result;
}


LeaderboardScoreUploaded_t *_wrap_new_LeaderboardScoreUploaded_t_steam_fb253aa6b5654893() {
  LeaderboardScoreUploaded_t *result = 0 ;
  LeaderboardScoreUploaded_t *_swig_go_result;
  
  
  result = (LeaderboardScoreUploaded_t *)new LeaderboardScoreUploaded_t();
  *(LeaderboardScoreUploaded_t **)&_swig_go_result = (LeaderboardScoreUploaded_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LeaderboardScoreUploaded_t_steam_fb253aa6b5654893(LeaderboardScoreUploaded_t *_swig_go_0) {
  LeaderboardScoreUploaded_t *arg1 = (LeaderboardScoreUploaded_t *) 0 ;
  
  arg1 = *(LeaderboardScoreUploaded_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_NumberOfCurrentPlayers_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = NumberOfCurrentPlayers_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_NumberOfCurrentPlayers_t_m_bSuccess_set_steam_fb253aa6b5654893(NumberOfCurrentPlayers_t *_swig_go_0, char _swig_go_1) {
  NumberOfCurrentPlayers_t *arg1 = (NumberOfCurrentPlayers_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(NumberOfCurrentPlayers_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bSuccess = arg2;
  
}


char _wrap_NumberOfCurrentPlayers_t_m_bSuccess_get_steam_fb253aa6b5654893(NumberOfCurrentPlayers_t *_swig_go_0) {
  NumberOfCurrentPlayers_t *arg1 = (NumberOfCurrentPlayers_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(NumberOfCurrentPlayers_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bSuccess);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_NumberOfCurrentPlayers_t_m_cPlayers_set_steam_fb253aa6b5654893(NumberOfCurrentPlayers_t *_swig_go_0, intgo _swig_go_1) {
  NumberOfCurrentPlayers_t *arg1 = (NumberOfCurrentPlayers_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(NumberOfCurrentPlayers_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_cPlayers = arg2;
  
}


intgo _wrap_NumberOfCurrentPlayers_t_m_cPlayers_get_steam_fb253aa6b5654893(NumberOfCurrentPlayers_t *_swig_go_0) {
  NumberOfCurrentPlayers_t *arg1 = (NumberOfCurrentPlayers_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(NumberOfCurrentPlayers_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_cPlayers);
  _swig_go_result = result; 
  return _swig_go_result;
}


NumberOfCurrentPlayers_t *_wrap_new_NumberOfCurrentPlayers_t_steam_fb253aa6b5654893() {
  NumberOfCurrentPlayers_t *result = 0 ;
  NumberOfCurrentPlayers_t *_swig_go_result;
  
  
  result = (NumberOfCurrentPlayers_t *)new NumberOfCurrentPlayers_t();
  *(NumberOfCurrentPlayers_t **)&_swig_go_result = (NumberOfCurrentPlayers_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_NumberOfCurrentPlayers_t_steam_fb253aa6b5654893(NumberOfCurrentPlayers_t *_swig_go_0) {
  NumberOfCurrentPlayers_t *arg1 = (NumberOfCurrentPlayers_t *) 0 ;
  
  arg1 = *(NumberOfCurrentPlayers_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_UserStatsUnloaded_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = UserStatsUnloaded_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_UserStatsUnloaded_t_m_steamIDUser_set_steam_fb253aa6b5654893(UserStatsUnloaded_t *_swig_go_0, CSteamID *_swig_go_1) {
  UserStatsUnloaded_t *arg1 = (UserStatsUnloaded_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(UserStatsUnloaded_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDUser = *arg2;
  
}


CSteamID *_wrap_UserStatsUnloaded_t_m_steamIDUser_get_steam_fb253aa6b5654893(UserStatsUnloaded_t *_swig_go_0) {
  UserStatsUnloaded_t *arg1 = (UserStatsUnloaded_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(UserStatsUnloaded_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDUser);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


UserStatsUnloaded_t *_wrap_new_UserStatsUnloaded_t_steam_fb253aa6b5654893() {
  UserStatsUnloaded_t *result = 0 ;
  UserStatsUnloaded_t *_swig_go_result;
  
  
  result = (UserStatsUnloaded_t *)new UserStatsUnloaded_t();
  *(UserStatsUnloaded_t **)&_swig_go_result = (UserStatsUnloaded_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_UserStatsUnloaded_t_steam_fb253aa6b5654893(UserStatsUnloaded_t *_swig_go_0) {
  UserStatsUnloaded_t *arg1 = (UserStatsUnloaded_t *) 0 ;
  
  arg1 = *(UserStatsUnloaded_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_UserAchievementIconFetched_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = UserAchievementIconFetched_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_UserAchievementIconFetched_t_m_nGameID_set_steam_fb253aa6b5654893(UserAchievementIconFetched_t *_swig_go_0, CGameID *_swig_go_1) {
  UserAchievementIconFetched_t *arg1 = (UserAchievementIconFetched_t *) 0 ;
  CGameID *arg2 = (CGameID *) 0 ;
  
  arg1 = *(UserAchievementIconFetched_t **)&_swig_go_0; 
  arg2 = *(CGameID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_nGameID = *arg2;
  
}


CGameID *_wrap_UserAchievementIconFetched_t_m_nGameID_get_steam_fb253aa6b5654893(UserAchievementIconFetched_t *_swig_go_0) {
  UserAchievementIconFetched_t *arg1 = (UserAchievementIconFetched_t *) 0 ;
  CGameID *result = 0 ;
  CGameID *_swig_go_result;
  
  arg1 = *(UserAchievementIconFetched_t **)&_swig_go_0; 
  
  result = (CGameID *)& ((arg1)->m_nGameID);
  *(CGameID **)&_swig_go_result = (CGameID *)result; 
  return _swig_go_result;
}


void _wrap_UserAchievementIconFetched_t_m_rgchAchievementName_set_steam_fb253aa6b5654893(UserAchievementIconFetched_t *_swig_go_0, _gostring_ _swig_go_1) {
  UserAchievementIconFetched_t *arg1 = (UserAchievementIconFetched_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(UserAchievementIconFetched_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchAchievementName, (const char *)arg2, k_cchStatNameMax-1);
      arg1->m_rgchAchievementName[k_cchStatNameMax-1] = 0;
    } else {
      arg1->m_rgchAchievementName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_UserAchievementIconFetched_t_m_rgchAchievementName_get_steam_fb253aa6b5654893(UserAchievementIconFetched_t *_swig_go_0) {
  UserAchievementIconFetched_t *arg1 = (UserAchievementIconFetched_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(UserAchievementIconFetched_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchAchievementName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_UserAchievementIconFetched_t_m_bAchieved_set_steam_fb253aa6b5654893(UserAchievementIconFetched_t *_swig_go_0, bool _swig_go_1) {
  UserAchievementIconFetched_t *arg1 = (UserAchievementIconFetched_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(UserAchievementIconFetched_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bAchieved = arg2;
  
}


bool _wrap_UserAchievementIconFetched_t_m_bAchieved_get_steam_fb253aa6b5654893(UserAchievementIconFetched_t *_swig_go_0) {
  UserAchievementIconFetched_t *arg1 = (UserAchievementIconFetched_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(UserAchievementIconFetched_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bAchieved);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_UserAchievementIconFetched_t_m_nIconHandle_set_steam_fb253aa6b5654893(UserAchievementIconFetched_t *_swig_go_0, intgo _swig_go_1) {
  UserAchievementIconFetched_t *arg1 = (UserAchievementIconFetched_t *) 0 ;
  int arg2 ;
  
  arg1 = *(UserAchievementIconFetched_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nIconHandle = arg2;
  
}


intgo _wrap_UserAchievementIconFetched_t_m_nIconHandle_get_steam_fb253aa6b5654893(UserAchievementIconFetched_t *_swig_go_0) {
  UserAchievementIconFetched_t *arg1 = (UserAchievementIconFetched_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(UserAchievementIconFetched_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nIconHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


UserAchievementIconFetched_t *_wrap_new_UserAchievementIconFetched_t_steam_fb253aa6b5654893() {
  UserAchievementIconFetched_t *result = 0 ;
  UserAchievementIconFetched_t *_swig_go_result;
  
  
  result = (UserAchievementIconFetched_t *)new UserAchievementIconFetched_t();
  *(UserAchievementIconFetched_t **)&_swig_go_result = (UserAchievementIconFetched_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_UserAchievementIconFetched_t_steam_fb253aa6b5654893(UserAchievementIconFetched_t *_swig_go_0) {
  UserAchievementIconFetched_t *arg1 = (UserAchievementIconFetched_t *) 0 ;
  
  arg1 = *(UserAchievementIconFetched_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GlobalAchievementPercentagesReady_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GlobalAchievementPercentagesReady_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GlobalAchievementPercentagesReady_t_m_nGameID_set_steam_fb253aa6b5654893(GlobalAchievementPercentagesReady_t *_swig_go_0, long long _swig_go_1) {
  GlobalAchievementPercentagesReady_t *arg1 = (GlobalAchievementPercentagesReady_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(GlobalAchievementPercentagesReady_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_nGameID = arg2;
  
}


long long _wrap_GlobalAchievementPercentagesReady_t_m_nGameID_get_steam_fb253aa6b5654893(GlobalAchievementPercentagesReady_t *_swig_go_0) {
  GlobalAchievementPercentagesReady_t *arg1 = (GlobalAchievementPercentagesReady_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(GlobalAchievementPercentagesReady_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_nGameID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GlobalAchievementPercentagesReady_t_m_eResult_set_steam_fb253aa6b5654893(GlobalAchievementPercentagesReady_t *_swig_go_0, intgo _swig_go_1) {
  GlobalAchievementPercentagesReady_t *arg1 = (GlobalAchievementPercentagesReady_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(GlobalAchievementPercentagesReady_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_GlobalAchievementPercentagesReady_t_m_eResult_get_steam_fb253aa6b5654893(GlobalAchievementPercentagesReady_t *_swig_go_0) {
  GlobalAchievementPercentagesReady_t *arg1 = (GlobalAchievementPercentagesReady_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(GlobalAchievementPercentagesReady_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


GlobalAchievementPercentagesReady_t *_wrap_new_GlobalAchievementPercentagesReady_t_steam_fb253aa6b5654893() {
  GlobalAchievementPercentagesReady_t *result = 0 ;
  GlobalAchievementPercentagesReady_t *_swig_go_result;
  
  
  result = (GlobalAchievementPercentagesReady_t *)new GlobalAchievementPercentagesReady_t();
  *(GlobalAchievementPercentagesReady_t **)&_swig_go_result = (GlobalAchievementPercentagesReady_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GlobalAchievementPercentagesReady_t_steam_fb253aa6b5654893(GlobalAchievementPercentagesReady_t *_swig_go_0) {
  GlobalAchievementPercentagesReady_t *arg1 = (GlobalAchievementPercentagesReady_t *) 0 ;
  
  arg1 = *(GlobalAchievementPercentagesReady_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_LeaderboardUGCSet_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = LeaderboardUGCSet_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LeaderboardUGCSet_t_m_eResult_set_steam_fb253aa6b5654893(LeaderboardUGCSet_t *_swig_go_0, intgo _swig_go_1) {
  LeaderboardUGCSet_t *arg1 = (LeaderboardUGCSet_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(LeaderboardUGCSet_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_LeaderboardUGCSet_t_m_eResult_get_steam_fb253aa6b5654893(LeaderboardUGCSet_t *_swig_go_0) {
  LeaderboardUGCSet_t *arg1 = (LeaderboardUGCSet_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(LeaderboardUGCSet_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_LeaderboardUGCSet_t_m_hSteamLeaderboard_set_steam_fb253aa6b5654893(LeaderboardUGCSet_t *_swig_go_0, long long _swig_go_1) {
  LeaderboardUGCSet_t *arg1 = (LeaderboardUGCSet_t *) 0 ;
  SteamLeaderboard_t arg2 ;
  
  arg1 = *(LeaderboardUGCSet_t **)&_swig_go_0; 
  arg2 = (SteamLeaderboard_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hSteamLeaderboard = arg2;
  
}


long long _wrap_LeaderboardUGCSet_t_m_hSteamLeaderboard_get_steam_fb253aa6b5654893(LeaderboardUGCSet_t *_swig_go_0) {
  LeaderboardUGCSet_t *arg1 = (LeaderboardUGCSet_t *) 0 ;
  SteamLeaderboard_t result;
  long long _swig_go_result;
  
  arg1 = *(LeaderboardUGCSet_t **)&_swig_go_0; 
  
  result = (SteamLeaderboard_t) ((arg1)->m_hSteamLeaderboard);
  _swig_go_result = result; 
  return _swig_go_result;
}


LeaderboardUGCSet_t *_wrap_new_LeaderboardUGCSet_t_steam_fb253aa6b5654893() {
  LeaderboardUGCSet_t *result = 0 ;
  LeaderboardUGCSet_t *_swig_go_result;
  
  
  result = (LeaderboardUGCSet_t *)new LeaderboardUGCSet_t();
  *(LeaderboardUGCSet_t **)&_swig_go_result = (LeaderboardUGCSet_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_LeaderboardUGCSet_t_steam_fb253aa6b5654893(LeaderboardUGCSet_t *_swig_go_0) {
  LeaderboardUGCSet_t *arg1 = (LeaderboardUGCSet_t *) 0 ;
  
  arg1 = *(LeaderboardUGCSet_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_PS3TrophiesInstalled_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = PS3TrophiesInstalled_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_PS3TrophiesInstalled_t_m_nGameID_set_steam_fb253aa6b5654893(PS3TrophiesInstalled_t *_swig_go_0, long long _swig_go_1) {
  PS3TrophiesInstalled_t *arg1 = (PS3TrophiesInstalled_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(PS3TrophiesInstalled_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_nGameID = arg2;
  
}


long long _wrap_PS3TrophiesInstalled_t_m_nGameID_get_steam_fb253aa6b5654893(PS3TrophiesInstalled_t *_swig_go_0) {
  PS3TrophiesInstalled_t *arg1 = (PS3TrophiesInstalled_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PS3TrophiesInstalled_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_nGameID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_PS3TrophiesInstalled_t_m_eResult_set_steam_fb253aa6b5654893(PS3TrophiesInstalled_t *_swig_go_0, intgo _swig_go_1) {
  PS3TrophiesInstalled_t *arg1 = (PS3TrophiesInstalled_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(PS3TrophiesInstalled_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_PS3TrophiesInstalled_t_m_eResult_get_steam_fb253aa6b5654893(PS3TrophiesInstalled_t *_swig_go_0) {
  PS3TrophiesInstalled_t *arg1 = (PS3TrophiesInstalled_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(PS3TrophiesInstalled_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_PS3TrophiesInstalled_t_m_ulRequiredDiskSpace_set_steam_fb253aa6b5654893(PS3TrophiesInstalled_t *_swig_go_0, long long _swig_go_1) {
  PS3TrophiesInstalled_t *arg1 = (PS3TrophiesInstalled_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(PS3TrophiesInstalled_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulRequiredDiskSpace = arg2;
  
}


long long _wrap_PS3TrophiesInstalled_t_m_ulRequiredDiskSpace_get_steam_fb253aa6b5654893(PS3TrophiesInstalled_t *_swig_go_0) {
  PS3TrophiesInstalled_t *arg1 = (PS3TrophiesInstalled_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PS3TrophiesInstalled_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulRequiredDiskSpace);
  _swig_go_result = result; 
  return _swig_go_result;
}


PS3TrophiesInstalled_t *_wrap_new_PS3TrophiesInstalled_t_steam_fb253aa6b5654893() {
  PS3TrophiesInstalled_t *result = 0 ;
  PS3TrophiesInstalled_t *_swig_go_result;
  
  
  result = (PS3TrophiesInstalled_t *)new PS3TrophiesInstalled_t();
  *(PS3TrophiesInstalled_t **)&_swig_go_result = (PS3TrophiesInstalled_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_PS3TrophiesInstalled_t_steam_fb253aa6b5654893(PS3TrophiesInstalled_t *_swig_go_0) {
  PS3TrophiesInstalled_t *arg1 = (PS3TrophiesInstalled_t *) 0 ;
  
  arg1 = *(PS3TrophiesInstalled_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GlobalStatsReceived_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GlobalStatsReceived_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GlobalStatsReceived_t_m_nGameID_set_steam_fb253aa6b5654893(GlobalStatsReceived_t *_swig_go_0, long long _swig_go_1) {
  GlobalStatsReceived_t *arg1 = (GlobalStatsReceived_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(GlobalStatsReceived_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_nGameID = arg2;
  
}


long long _wrap_GlobalStatsReceived_t_m_nGameID_get_steam_fb253aa6b5654893(GlobalStatsReceived_t *_swig_go_0) {
  GlobalStatsReceived_t *arg1 = (GlobalStatsReceived_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(GlobalStatsReceived_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_nGameID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GlobalStatsReceived_t_m_eResult_set_steam_fb253aa6b5654893(GlobalStatsReceived_t *_swig_go_0, intgo _swig_go_1) {
  GlobalStatsReceived_t *arg1 = (GlobalStatsReceived_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(GlobalStatsReceived_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_GlobalStatsReceived_t_m_eResult_get_steam_fb253aa6b5654893(GlobalStatsReceived_t *_swig_go_0) {
  GlobalStatsReceived_t *arg1 = (GlobalStatsReceived_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(GlobalStatsReceived_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


GlobalStatsReceived_t *_wrap_new_GlobalStatsReceived_t_steam_fb253aa6b5654893() {
  GlobalStatsReceived_t *result = 0 ;
  GlobalStatsReceived_t *_swig_go_result;
  
  
  result = (GlobalStatsReceived_t *)new GlobalStatsReceived_t();
  *(GlobalStatsReceived_t **)&_swig_go_result = (GlobalStatsReceived_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GlobalStatsReceived_t_steam_fb253aa6b5654893(GlobalStatsReceived_t *_swig_go_0) {
  GlobalStatsReceived_t *arg1 = (GlobalStatsReceived_t *) 0 ;
  
  arg1 = *(GlobalStatsReceived_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_cubAppProofOfPurchaseKeyMax_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cubAppProofOfPurchaseKeyMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamApps_BIsSubscribed_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsSubscribed();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamApps_BIsLowViolence_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsLowViolence();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamApps_BIsCybercafe_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsCybercafe();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamApps_BIsVACBanned_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsVACBanned();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamApps_GetCurrentGameLanguage_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (char *)(arg1)->GetCurrentGameLanguage();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamApps_GetAvailableGameLanguages_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (char *)(arg1)->GetAvailableGameLanguages();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


bool _wrap_ISteamApps_BIsSubscribedApp_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  result = (bool)(arg1)->BIsSubscribedApp(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamApps_BIsDlcInstalled_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  result = (bool)(arg1)->BIsDlcInstalled(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamApps_GetEarliestPurchaseUnixTime_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  result = (uint32)(arg1)->GetEarliestPurchaseUnixTime(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamApps_BIsSubscribedFromFreeWeekend_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsSubscribedFromFreeWeekend();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamApps_GetDLCCount_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (int)(arg1)->GetDLCCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamApps_BGetDLCDataByIndex_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, bool *_swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  int arg2 ;
  AppId_t *arg3 = (AppId_t *) 0 ;
  bool *arg4 = (bool *) 0 ;
  char *arg5 = (char *) 0 ;
  int arg6 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(AppId_t **)&_swig_go_2; 
  arg4 = *(bool **)&_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (int)_swig_go_5; 
  
  result = (bool)(arg1)->BGetDLCDataByIndex(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg5); 
  return _swig_go_result;
}


void _wrap_ISteamApps_InstallDLC_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  (arg1)->InstallDLC(arg2);
  
}


void _wrap_ISteamApps_UninstallDLC_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  (arg1)->UninstallDLC(arg2);
  
}


void _wrap_ISteamApps_RequestAppProofOfPurchaseKey_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  (arg1)->RequestAppProofOfPurchaseKey(arg2);
  
}


bool _wrap_ISteamApps_GetCurrentBetaName_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->GetCurrentBetaName(arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamApps_MarkContentCorrupt_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, bool _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->MarkContentCorrupt(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamApps_GetInstalledDepots_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  DepotId_t *arg3 = (DepotId_t *) 0 ;
  uint32 arg4 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = *(DepotId_t **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (uint32)(arg1)->GetInstalledDepots(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamApps_GetAppInstallDir_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  char *arg3 = (char *) 0 ;
  uint32 arg4 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (uint32)_swig_go_3; 
  
  result = (uint32)(arg1)->GetAppInstallDir(arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamApps_BIsAppInstalled_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  result = (bool)(arg1)->BIsAppInstalled(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


CSteamID *_wrap_ISteamApps_GetAppOwner_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  CSteamID result;
  CSteamID *_swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (arg1)->GetAppOwner();
  *(CSteamID **)&_swig_go_result = new CSteamID(result); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamApps_GetLaunchQueryParam_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (char *)(arg1)->GetLaunchQueryParam((char const *)arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamApps_GetDlcDownloadProgress_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, intgo _swig_go_1, long long *_swig_go_2, long long *_swig_go_3) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  AppId_t arg2 ;
  uint64 *arg3 = (uint64 *) 0 ;
  uint64 *arg4 = (uint64 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = *(uint64 **)&_swig_go_2; 
  arg4 = *(uint64 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetDlcDownloadProgress(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamApps_GetAppBuildId_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  result = (int)(arg1)->GetAppBuildId();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamApps_RequestAllProofOfPurchaseKeys_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  (arg1)->RequestAllProofOfPurchaseKeys();
  
}


long long _wrap_ISteamApps_GetFileDetails_steam_fb253aa6b5654893(ISteamApps *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  char *arg2 = (char *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (SteamAPICall_t)(arg1)->GetFileDetails((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_delete_ISteamApps_steam_fb253aa6b5654893(ISteamApps *_swig_go_0) {
  ISteamApps *arg1 = (ISteamApps *) 0 ;
  
  arg1 = *(ISteamApps **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_DlcInstalled_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = DlcInstalled_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_DlcInstalled_t_m_nAppID_set_steam_fb253aa6b5654893(DlcInstalled_t *_swig_go_0, intgo _swig_go_1) {
  DlcInstalled_t *arg1 = (DlcInstalled_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(DlcInstalled_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_DlcInstalled_t_m_nAppID_get_steam_fb253aa6b5654893(DlcInstalled_t *_swig_go_0) {
  DlcInstalled_t *arg1 = (DlcInstalled_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(DlcInstalled_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


DlcInstalled_t *_wrap_new_DlcInstalled_t_steam_fb253aa6b5654893() {
  DlcInstalled_t *result = 0 ;
  DlcInstalled_t *_swig_go_result;
  
  
  result = (DlcInstalled_t *)new DlcInstalled_t();
  *(DlcInstalled_t **)&_swig_go_result = (DlcInstalled_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_DlcInstalled_t_steam_fb253aa6b5654893(DlcInstalled_t *_swig_go_0) {
  DlcInstalled_t *arg1 = (DlcInstalled_t *) 0 ;
  
  arg1 = *(DlcInstalled_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_ERegisterActivationCodeResultOK_steam_fb253aa6b5654893() {
  ERegisterActivationCodeResult result;
  intgo _swig_go_result;
  
  
  result = k_ERegisterActivationCodeResultOK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERegisterActivationCodeResultFail_steam_fb253aa6b5654893() {
  ERegisterActivationCodeResult result;
  intgo _swig_go_result;
  
  
  result = k_ERegisterActivationCodeResultFail;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERegisterActivationCodeResultAlreadyRegistered_steam_fb253aa6b5654893() {
  ERegisterActivationCodeResult result;
  intgo _swig_go_result;
  
  
  result = k_ERegisterActivationCodeResultAlreadyRegistered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERegisterActivationCodeResultTimeout_steam_fb253aa6b5654893() {
  ERegisterActivationCodeResult result;
  intgo _swig_go_result;
  
  
  result = k_ERegisterActivationCodeResultTimeout;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ERegisterActivationCodeAlreadyOwned_steam_fb253aa6b5654893() {
  ERegisterActivationCodeResult result;
  intgo _swig_go_result;
  
  
  result = k_ERegisterActivationCodeAlreadyOwned;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_iCallback_RegisterActivationCodeResponse_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RegisterActivationCodeResponse_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RegisterActivationCodeResponse_t_m_eResult_set_steam_fb253aa6b5654893(RegisterActivationCodeResponse_t *_swig_go_0, intgo _swig_go_1) {
  RegisterActivationCodeResponse_t *arg1 = (RegisterActivationCodeResponse_t *) 0 ;
  ERegisterActivationCodeResult arg2 ;
  
  arg1 = *(RegisterActivationCodeResponse_t **)&_swig_go_0; 
  arg2 = (ERegisterActivationCodeResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RegisterActivationCodeResponse_t_m_eResult_get_steam_fb253aa6b5654893(RegisterActivationCodeResponse_t *_swig_go_0) {
  RegisterActivationCodeResponse_t *arg1 = (RegisterActivationCodeResponse_t *) 0 ;
  ERegisterActivationCodeResult result;
  intgo _swig_go_result;
  
  arg1 = *(RegisterActivationCodeResponse_t **)&_swig_go_0; 
  
  result = (ERegisterActivationCodeResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RegisterActivationCodeResponse_t_m_unPackageRegistered_set_steam_fb253aa6b5654893(RegisterActivationCodeResponse_t *_swig_go_0, intgo _swig_go_1) {
  RegisterActivationCodeResponse_t *arg1 = (RegisterActivationCodeResponse_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(RegisterActivationCodeResponse_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unPackageRegistered = arg2;
  
}


intgo _wrap_RegisterActivationCodeResponse_t_m_unPackageRegistered_get_steam_fb253aa6b5654893(RegisterActivationCodeResponse_t *_swig_go_0) {
  RegisterActivationCodeResponse_t *arg1 = (RegisterActivationCodeResponse_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(RegisterActivationCodeResponse_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unPackageRegistered);
  _swig_go_result = result; 
  return _swig_go_result;
}


RegisterActivationCodeResponse_t *_wrap_new_RegisterActivationCodeResponse_t_steam_fb253aa6b5654893() {
  RegisterActivationCodeResponse_t *result = 0 ;
  RegisterActivationCodeResponse_t *_swig_go_result;
  
  
  result = (RegisterActivationCodeResponse_t *)new RegisterActivationCodeResponse_t();
  *(RegisterActivationCodeResponse_t **)&_swig_go_result = (RegisterActivationCodeResponse_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RegisterActivationCodeResponse_t_steam_fb253aa6b5654893(RegisterActivationCodeResponse_t *_swig_go_0) {
  RegisterActivationCodeResponse_t *arg1 = (RegisterActivationCodeResponse_t *) 0 ;
  
  arg1 = *(RegisterActivationCodeResponse_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_NewLaunchQueryParameters_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = NewLaunchQueryParameters_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


NewLaunchQueryParameters_t *_wrap_new_NewLaunchQueryParameters_t_steam_fb253aa6b5654893() {
  NewLaunchQueryParameters_t *result = 0 ;
  NewLaunchQueryParameters_t *_swig_go_result;
  
  
  result = (NewLaunchQueryParameters_t *)new NewLaunchQueryParameters_t();
  *(NewLaunchQueryParameters_t **)&_swig_go_result = (NewLaunchQueryParameters_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_NewLaunchQueryParameters_t_steam_fb253aa6b5654893(NewLaunchQueryParameters_t *_swig_go_0) {
  NewLaunchQueryParameters_t *arg1 = (NewLaunchQueryParameters_t *) 0 ;
  
  arg1 = *(NewLaunchQueryParameters_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_AppProofOfPurchaseKeyResponse_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = AppProofOfPurchaseKeyResponse_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_AppProofOfPurchaseKeyResponse_t_m_eResult_set_steam_fb253aa6b5654893(AppProofOfPurchaseKeyResponse_t *_swig_go_0, intgo _swig_go_1) {
  AppProofOfPurchaseKeyResponse_t *arg1 = (AppProofOfPurchaseKeyResponse_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_AppProofOfPurchaseKeyResponse_t_m_eResult_get_steam_fb253aa6b5654893(AppProofOfPurchaseKeyResponse_t *_swig_go_0) {
  AppProofOfPurchaseKeyResponse_t *arg1 = (AppProofOfPurchaseKeyResponse_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_AppProofOfPurchaseKeyResponse_t_m_nAppID_set_steam_fb253aa6b5654893(AppProofOfPurchaseKeyResponse_t *_swig_go_0, intgo _swig_go_1) {
  AppProofOfPurchaseKeyResponse_t *arg1 = (AppProofOfPurchaseKeyResponse_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_AppProofOfPurchaseKeyResponse_t_m_nAppID_get_steam_fb253aa6b5654893(AppProofOfPurchaseKeyResponse_t *_swig_go_0) {
  AppProofOfPurchaseKeyResponse_t *arg1 = (AppProofOfPurchaseKeyResponse_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AppProofOfPurchaseKeyResponse_t_m_cchKeyLength_set_steam_fb253aa6b5654893(AppProofOfPurchaseKeyResponse_t *_swig_go_0, intgo _swig_go_1) {
  AppProofOfPurchaseKeyResponse_t *arg1 = (AppProofOfPurchaseKeyResponse_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_cchKeyLength = arg2;
  
}


intgo _wrap_AppProofOfPurchaseKeyResponse_t_m_cchKeyLength_get_steam_fb253aa6b5654893(AppProofOfPurchaseKeyResponse_t *_swig_go_0) {
  AppProofOfPurchaseKeyResponse_t *arg1 = (AppProofOfPurchaseKeyResponse_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_cchKeyLength);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AppProofOfPurchaseKeyResponse_t_m_rgchKey_set_steam_fb253aa6b5654893(AppProofOfPurchaseKeyResponse_t *_swig_go_0, _gostring_ _swig_go_1) {
  AppProofOfPurchaseKeyResponse_t *arg1 = (AppProofOfPurchaseKeyResponse_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchKey, (const char *)arg2, k_cubAppProofOfPurchaseKeyMax-1);
      arg1->m_rgchKey[k_cubAppProofOfPurchaseKeyMax-1] = 0;
    } else {
      arg1->m_rgchKey[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_AppProofOfPurchaseKeyResponse_t_m_rgchKey_get_steam_fb253aa6b5654893(AppProofOfPurchaseKeyResponse_t *_swig_go_0) {
  AppProofOfPurchaseKeyResponse_t *arg1 = (AppProofOfPurchaseKeyResponse_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchKey);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


AppProofOfPurchaseKeyResponse_t *_wrap_new_AppProofOfPurchaseKeyResponse_t_steam_fb253aa6b5654893() {
  AppProofOfPurchaseKeyResponse_t *result = 0 ;
  AppProofOfPurchaseKeyResponse_t *_swig_go_result;
  
  
  result = (AppProofOfPurchaseKeyResponse_t *)new AppProofOfPurchaseKeyResponse_t();
  *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_result = (AppProofOfPurchaseKeyResponse_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_AppProofOfPurchaseKeyResponse_t_steam_fb253aa6b5654893(AppProofOfPurchaseKeyResponse_t *_swig_go_0) {
  AppProofOfPurchaseKeyResponse_t *arg1 = (AppProofOfPurchaseKeyResponse_t *) 0 ;
  
  arg1 = *(AppProofOfPurchaseKeyResponse_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_FileDetailsResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = FileDetailsResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FileDetailsResult_t_m_eResult_set_steam_fb253aa6b5654893(FileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  FileDetailsResult_t *arg1 = (FileDetailsResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(FileDetailsResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_FileDetailsResult_t_m_eResult_get_steam_fb253aa6b5654893(FileDetailsResult_t *_swig_go_0) {
  FileDetailsResult_t *arg1 = (FileDetailsResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(FileDetailsResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_FileDetailsResult_t_m_ulFileSize_set_steam_fb253aa6b5654893(FileDetailsResult_t *_swig_go_0, long long _swig_go_1) {
  FileDetailsResult_t *arg1 = (FileDetailsResult_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(FileDetailsResult_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulFileSize = arg2;
  
}


long long _wrap_FileDetailsResult_t_m_ulFileSize_get_steam_fb253aa6b5654893(FileDetailsResult_t *_swig_go_0) {
  FileDetailsResult_t *arg1 = (FileDetailsResult_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(FileDetailsResult_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulFileSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FileDetailsResult_t_m_FileSHA_set_steam_fb253aa6b5654893(FileDetailsResult_t *_swig_go_0, char *_swig_go_1) {
  FileDetailsResult_t *arg1 = (FileDetailsResult_t *) 0 ;
  uint8 *arg2 ;
  
  arg1 = *(FileDetailsResult_t **)&_swig_go_0; 
  arg2 = *(uint8 **)&_swig_go_1; 
  
  {
    size_t ii;
    uint8 *b = (uint8 *) arg1->m_FileSHA;
    for (ii = 0; ii < (size_t)20; ii++) b[ii] = *((uint8 *) arg2 + ii);
  }
  
}


char *_wrap_FileDetailsResult_t_m_FileSHA_get_steam_fb253aa6b5654893(FileDetailsResult_t *_swig_go_0) {
  FileDetailsResult_t *arg1 = (FileDetailsResult_t *) 0 ;
  uint8 *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(FileDetailsResult_t **)&_swig_go_0; 
  
  result = (uint8 *)(uint8 *) ((arg1)->m_FileSHA);
  *(uint8 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FileDetailsResult_t_m_unFlags_set_steam_fb253aa6b5654893(FileDetailsResult_t *_swig_go_0, intgo _swig_go_1) {
  FileDetailsResult_t *arg1 = (FileDetailsResult_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(FileDetailsResult_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unFlags = arg2;
  
}


intgo _wrap_FileDetailsResult_t_m_unFlags_get_steam_fb253aa6b5654893(FileDetailsResult_t *_swig_go_0) {
  FileDetailsResult_t *arg1 = (FileDetailsResult_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(FileDetailsResult_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


FileDetailsResult_t *_wrap_new_FileDetailsResult_t_steam_fb253aa6b5654893() {
  FileDetailsResult_t *result = 0 ;
  FileDetailsResult_t *_swig_go_result;
  
  
  result = (FileDetailsResult_t *)new FileDetailsResult_t();
  *(FileDetailsResult_t **)&_swig_go_result = (FileDetailsResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_FileDetailsResult_t_steam_fb253aa6b5654893(FileDetailsResult_t *_swig_go_0) {
  FileDetailsResult_t *arg1 = (FileDetailsResult_t *) 0 ;
  
  arg1 = *(FileDetailsResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_EP2PSessionErrorNone_steam_fb253aa6b5654893() {
  EP2PSessionError result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSessionErrorNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EP2PSessionErrorNotRunningApp_steam_fb253aa6b5654893() {
  EP2PSessionError result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSessionErrorNotRunningApp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EP2PSessionErrorNoRightsToApp_steam_fb253aa6b5654893() {
  EP2PSessionError result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSessionErrorNoRightsToApp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EP2PSessionErrorDestinationNotLoggedIn_steam_fb253aa6b5654893() {
  EP2PSessionError result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSessionErrorDestinationNotLoggedIn;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EP2PSessionErrorTimeout_steam_fb253aa6b5654893() {
  EP2PSessionError result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSessionErrorTimeout;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EP2PSessionErrorMax_steam_fb253aa6b5654893() {
  EP2PSessionError result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSessionErrorMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EP2PSendUnreliable_steam_fb253aa6b5654893() {
  EP2PSend result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSendUnreliable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EP2PSendUnreliableNoDelay_steam_fb253aa6b5654893() {
  EP2PSend result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSendUnreliableNoDelay;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EP2PSendReliable_steam_fb253aa6b5654893() {
  EP2PSend result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSendReliable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EP2PSendReliableWithBuffering_steam_fb253aa6b5654893() {
  EP2PSend result;
  intgo _swig_go_result;
  
  
  result = k_EP2PSendReliableWithBuffering;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_P2PSessionState_t_m_bConnectionActive_set_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0, char _swig_go_1) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bConnectionActive = arg2;
  
}


char _wrap_P2PSessionState_t_m_bConnectionActive_get_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bConnectionActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_P2PSessionState_t_m_bConnecting_set_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0, char _swig_go_1) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bConnecting = arg2;
  
}


char _wrap_P2PSessionState_t_m_bConnecting_get_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bConnecting);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_P2PSessionState_t_m_eP2PSessionError_set_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0, char _swig_go_1) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_eP2PSessionError = arg2;
  
}


char _wrap_P2PSessionState_t_m_eP2PSessionError_get_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_eP2PSessionError);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_P2PSessionState_t_m_bUsingRelay_set_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0, char _swig_go_1) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_bUsingRelay = arg2;
  
}


char _wrap_P2PSessionState_t_m_bUsingRelay_get_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_bUsingRelay);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_P2PSessionState_t_m_nBytesQueuedForSend_set_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0, intgo _swig_go_1) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nBytesQueuedForSend = arg2;
  
}


intgo _wrap_P2PSessionState_t_m_nBytesQueuedForSend_get_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nBytesQueuedForSend);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_P2PSessionState_t_m_nPacketsQueuedForSend_set_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0, intgo _swig_go_1) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPacketsQueuedForSend = arg2;
  
}


intgo _wrap_P2PSessionState_t_m_nPacketsQueuedForSend_get_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nPacketsQueuedForSend);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_P2PSessionState_t_m_nRemoteIP_set_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0, intgo _swig_go_1) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nRemoteIP = arg2;
  
}


intgo _wrap_P2PSessionState_t_m_nRemoteIP_get_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nRemoteIP);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_P2PSessionState_t_m_nRemotePort_set_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0, short _swig_go_1) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  if (arg1) (arg1)->m_nRemotePort = arg2;
  
}


short _wrap_P2PSessionState_t_m_nRemotePort_get_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  
  result = (uint16) ((arg1)->m_nRemotePort);
  _swig_go_result = result; 
  return _swig_go_result;
}


P2PSessionState_t *_wrap_new_P2PSessionState_t_steam_fb253aa6b5654893() {
  P2PSessionState_t *result = 0 ;
  P2PSessionState_t *_swig_go_result;
  
  
  result = (P2PSessionState_t *)new P2PSessionState_t();
  *(P2PSessionState_t **)&_swig_go_result = (P2PSessionState_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_P2PSessionState_t_steam_fb253aa6b5654893(P2PSessionState_t *_swig_go_0) {
  P2PSessionState_t *arg1 = (P2PSessionState_t *) 0 ;
  
  arg1 = *(P2PSessionState_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_ESNetSocketStateInvalid_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateConnected_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateConnected;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateInitiated_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateInitiated;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateLocalCandidatesFound_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateLocalCandidatesFound;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateReceivedRemoteCandidates_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateReceivedRemoteCandidates;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateChallengeHandshake_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateChallengeHandshake;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateDisconnecting_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateDisconnecting;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateLocalDisconnect_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateLocalDisconnect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateTimeoutDuringConnect_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateTimeoutDuringConnect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateRemoteEndDisconnected_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateRemoteEndDisconnected;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketStateConnectionBroken_steam_fb253aa6b5654893() {
  ESNetSocketState result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketStateConnectionBroken;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketConnectionTypeNotConnected_steam_fb253aa6b5654893() {
  ESNetSocketConnectionType result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketConnectionTypeNotConnected;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketConnectionTypeUDP_steam_fb253aa6b5654893() {
  ESNetSocketConnectionType result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketConnectionTypeUDP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESNetSocketConnectionTypeUDPRelay_steam_fb253aa6b5654893() {
  ESNetSocketConnectionType result;
  intgo _swig_go_result;
  
  
  result = k_ESNetSocketConnectionTypeUDPRelay;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_SendP2PPacket__SWIG_0_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, CSteamID *_swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  CSteamID arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  EP2PSend arg5 ;
  int arg6 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = (EP2PSend)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (bool)(arg1)->SendP2PPacket(arg2,(void const *)arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_SendP2PPacket__SWIG_1_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, CSteamID *_swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  CSteamID arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  EP2PSend arg5 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = (EP2PSend)_swig_go_4; 
  
  result = (bool)(arg1)->SendP2PPacket(arg2,(void const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_IsP2PPacketAvailable__SWIG_0_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  uint32 *arg2 = (uint32 *) 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = *(uint32 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->IsP2PPacketAvailable(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_IsP2PPacketAvailable__SWIG_1_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo *_swig_go_1) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  uint32 *arg2 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = *(uint32 **)&_swig_go_1; 
  
  result = (bool)(arg1)->IsP2PPacketAvailable(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_ReadP2PPacket__SWIG_0_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, intgo *_swig_go_3, CSteamID *_swig_go_4, intgo _swig_go_5) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32 arg3 ;
  uint32 *arg4 = (uint32 *) 0 ;
  CSteamID *arg5 = (CSteamID *) 0 ;
  int arg6 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  arg5 = *(CSteamID **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (bool)(arg1)->ReadP2PPacket(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_ReadP2PPacket__SWIG_1_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, intgo *_swig_go_3, CSteamID *_swig_go_4) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32 arg3 ;
  uint32 *arg4 = (uint32 *) 0 ;
  CSteamID *arg5 = (CSteamID *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  arg5 = *(CSteamID **)&_swig_go_4; 
  
  result = (bool)(arg1)->ReadP2PPacket(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_AcceptP2PSessionWithUser_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (bool)(arg1)->AcceptP2PSessionWithUser(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_CloseP2PSessionWithUser_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (bool)(arg1)->CloseP2PSessionWithUser(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_CloseP2PChannelWithUser_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->CloseP2PChannelWithUser(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_GetP2PSessionState_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, CSteamID *_swig_go_1, P2PSessionState_t *_swig_go_2) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  CSteamID arg2 ;
  P2PSessionState_t *arg3 = (P2PSessionState_t *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = *(P2PSessionState_t **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetP2PSessionState(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_AllowP2PPacketRelay_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, bool _swig_go_1) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->AllowP2PPacketRelay(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamNetworking_CreateListenSocket_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, short _swig_go_3, bool _swig_go_4) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  int arg2 ;
  uint32 arg3 ;
  uint16 arg4 ;
  bool arg5 ;
  SNetListenSocket_t result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint16)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (SNetListenSocket_t)(arg1)->CreateListenSocket(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamNetworking_CreateP2PConnectionSocket_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, CSteamID *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  CSteamID arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  CSteamID *argp2 ;
  SNetSocket_t result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (SNetSocket_t)(arg1)->CreateP2PConnectionSocket(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamNetworking_CreateConnectionSocket_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, short _swig_go_2, intgo _swig_go_3) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  uint32 arg2 ;
  uint16 arg3 ;
  int arg4 ;
  SNetSocket_t result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  arg3 = (uint16)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (SNetSocket_t)(arg1)->CreateConnectionSocket(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_DestroySocket_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetSocket_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetSocket_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->DestroySocket(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_DestroyListenSocket_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetListenSocket_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetListenSocket_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->DestroyListenSocket(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_SendDataOnSocket_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetSocket_t arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  bool arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetSocket_t)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (bool)(arg1)->SendDataOnSocket(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_IsDataAvailableOnSocket_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetSocket_t arg2 ;
  uint32 *arg3 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetSocket_t)_swig_go_1; 
  arg3 = *(uint32 **)&_swig_go_2; 
  
  result = (bool)(arg1)->IsDataAvailableOnSocket(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_RetrieveDataFromSocket_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo *_swig_go_4) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetSocket_t arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  uint32 *arg5 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetSocket_t)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  
  result = (bool)(arg1)->RetrieveDataFromSocket(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_IsDataAvailable_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetListenSocket_t arg2 ;
  uint32 *arg3 = (uint32 *) 0 ;
  SNetSocket_t *arg4 = (SNetSocket_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetListenSocket_t)_swig_go_1; 
  arg3 = *(uint32 **)&_swig_go_2; 
  arg4 = *(SNetSocket_t **)&_swig_go_3; 
  
  result = (bool)(arg1)->IsDataAvailable(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_RetrieveData_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo *_swig_go_4, intgo *_swig_go_5) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetListenSocket_t arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  uint32 *arg5 = (uint32 *) 0 ;
  SNetSocket_t *arg6 = (SNetSocket_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetListenSocket_t)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  arg6 = *(SNetSocket_t **)&_swig_go_5; 
  
  result = (bool)(arg1)->RetrieveData(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_GetSocketInfo_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, CSteamID *_swig_go_2, intgo *_swig_go_3, intgo *_swig_go_4, short *_swig_go_5) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetSocket_t arg2 ;
  CSteamID *arg3 = (CSteamID *) 0 ;
  int *arg4 = (int *) 0 ;
  uint32 *arg5 = (uint32 *) 0 ;
  uint16 *arg6 = (uint16 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetSocket_t)_swig_go_1; 
  arg3 = *(CSteamID **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  arg6 = *(uint16 **)&_swig_go_5; 
  
  result = (bool)(arg1)->GetSocketInfo(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamNetworking_GetListenSocketInfo_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, short *_swig_go_3) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetListenSocket_t arg2 ;
  uint32 *arg3 = (uint32 *) 0 ;
  uint16 *arg4 = (uint16 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetListenSocket_t)_swig_go_1; 
  arg3 = *(uint32 **)&_swig_go_2; 
  arg4 = *(uint16 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetListenSocketInfo(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamNetworking_GetSocketConnectionType_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetSocket_t arg2 ;
  ESNetSocketConnectionType result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetSocket_t)_swig_go_1; 
  
  result = (ESNetSocketConnectionType)(arg1)->GetSocketConnectionType(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamNetworking_GetMaxPacketSize_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0, intgo _swig_go_1) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  SNetSocket_t arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  arg2 = (SNetSocket_t)_swig_go_1; 
  
  result = (int)(arg1)->GetMaxPacketSize(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamNetworking_steam_fb253aa6b5654893(ISteamNetworking *_swig_go_0) {
  ISteamNetworking *arg1 = (ISteamNetworking *) 0 ;
  
  arg1 = *(ISteamNetworking **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_P2PSessionRequest_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = P2PSessionRequest_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_P2PSessionRequest_t_m_steamIDRemote_set_steam_fb253aa6b5654893(P2PSessionRequest_t *_swig_go_0, CSteamID *_swig_go_1) {
  P2PSessionRequest_t *arg1 = (P2PSessionRequest_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(P2PSessionRequest_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDRemote = *arg2;
  
}


CSteamID *_wrap_P2PSessionRequest_t_m_steamIDRemote_get_steam_fb253aa6b5654893(P2PSessionRequest_t *_swig_go_0) {
  P2PSessionRequest_t *arg1 = (P2PSessionRequest_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(P2PSessionRequest_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDRemote);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


P2PSessionRequest_t *_wrap_new_P2PSessionRequest_t_steam_fb253aa6b5654893() {
  P2PSessionRequest_t *result = 0 ;
  P2PSessionRequest_t *_swig_go_result;
  
  
  result = (P2PSessionRequest_t *)new P2PSessionRequest_t();
  *(P2PSessionRequest_t **)&_swig_go_result = (P2PSessionRequest_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_P2PSessionRequest_t_steam_fb253aa6b5654893(P2PSessionRequest_t *_swig_go_0) {
  P2PSessionRequest_t *arg1 = (P2PSessionRequest_t *) 0 ;
  
  arg1 = *(P2PSessionRequest_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_P2PSessionConnectFail_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = P2PSessionConnectFail_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_P2PSessionConnectFail_t_m_steamIDRemote_set_steam_fb253aa6b5654893(P2PSessionConnectFail_t *_swig_go_0, CSteamID *_swig_go_1) {
  P2PSessionConnectFail_t *arg1 = (P2PSessionConnectFail_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(P2PSessionConnectFail_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDRemote = *arg2;
  
}


CSteamID *_wrap_P2PSessionConnectFail_t_m_steamIDRemote_get_steam_fb253aa6b5654893(P2PSessionConnectFail_t *_swig_go_0) {
  P2PSessionConnectFail_t *arg1 = (P2PSessionConnectFail_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(P2PSessionConnectFail_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDRemote);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_P2PSessionConnectFail_t_m_eP2PSessionError_set_steam_fb253aa6b5654893(P2PSessionConnectFail_t *_swig_go_0, char _swig_go_1) {
  P2PSessionConnectFail_t *arg1 = (P2PSessionConnectFail_t *) 0 ;
  uint8 arg2 ;
  
  arg1 = *(P2PSessionConnectFail_t **)&_swig_go_0; 
  arg2 = (uint8)_swig_go_1; 
  
  if (arg1) (arg1)->m_eP2PSessionError = arg2;
  
}


char _wrap_P2PSessionConnectFail_t_m_eP2PSessionError_get_steam_fb253aa6b5654893(P2PSessionConnectFail_t *_swig_go_0) {
  P2PSessionConnectFail_t *arg1 = (P2PSessionConnectFail_t *) 0 ;
  uint8 result;
  char _swig_go_result;
  
  arg1 = *(P2PSessionConnectFail_t **)&_swig_go_0; 
  
  result = (uint8) ((arg1)->m_eP2PSessionError);
  _swig_go_result = result; 
  return _swig_go_result;
}


P2PSessionConnectFail_t *_wrap_new_P2PSessionConnectFail_t_steam_fb253aa6b5654893() {
  P2PSessionConnectFail_t *result = 0 ;
  P2PSessionConnectFail_t *_swig_go_result;
  
  
  result = (P2PSessionConnectFail_t *)new P2PSessionConnectFail_t();
  *(P2PSessionConnectFail_t **)&_swig_go_result = (P2PSessionConnectFail_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_P2PSessionConnectFail_t_steam_fb253aa6b5654893(P2PSessionConnectFail_t *_swig_go_0) {
  P2PSessionConnectFail_t *arg1 = (P2PSessionConnectFail_t *) 0 ;
  
  arg1 = *(P2PSessionConnectFail_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SocketStatusCallback_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SocketStatusCallback_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SocketStatusCallback_t_m_hSocket_set_steam_fb253aa6b5654893(SocketStatusCallback_t *_swig_go_0, intgo _swig_go_1) {
  SocketStatusCallback_t *arg1 = (SocketStatusCallback_t *) 0 ;
  SNetSocket_t arg2 ;
  
  arg1 = *(SocketStatusCallback_t **)&_swig_go_0; 
  arg2 = (SNetSocket_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hSocket = arg2;
  
}


intgo _wrap_SocketStatusCallback_t_m_hSocket_get_steam_fb253aa6b5654893(SocketStatusCallback_t *_swig_go_0) {
  SocketStatusCallback_t *arg1 = (SocketStatusCallback_t *) 0 ;
  SNetSocket_t result;
  intgo _swig_go_result;
  
  arg1 = *(SocketStatusCallback_t **)&_swig_go_0; 
  
  result = (SNetSocket_t) ((arg1)->m_hSocket);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SocketStatusCallback_t_m_hListenSocket_set_steam_fb253aa6b5654893(SocketStatusCallback_t *_swig_go_0, intgo _swig_go_1) {
  SocketStatusCallback_t *arg1 = (SocketStatusCallback_t *) 0 ;
  SNetListenSocket_t arg2 ;
  
  arg1 = *(SocketStatusCallback_t **)&_swig_go_0; 
  arg2 = (SNetListenSocket_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hListenSocket = arg2;
  
}


intgo _wrap_SocketStatusCallback_t_m_hListenSocket_get_steam_fb253aa6b5654893(SocketStatusCallback_t *_swig_go_0) {
  SocketStatusCallback_t *arg1 = (SocketStatusCallback_t *) 0 ;
  SNetListenSocket_t result;
  intgo _swig_go_result;
  
  arg1 = *(SocketStatusCallback_t **)&_swig_go_0; 
  
  result = (SNetListenSocket_t) ((arg1)->m_hListenSocket);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SocketStatusCallback_t_m_steamIDRemote_set_steam_fb253aa6b5654893(SocketStatusCallback_t *_swig_go_0, CSteamID *_swig_go_1) {
  SocketStatusCallback_t *arg1 = (SocketStatusCallback_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(SocketStatusCallback_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamIDRemote = *arg2;
  
}


CSteamID *_wrap_SocketStatusCallback_t_m_steamIDRemote_get_steam_fb253aa6b5654893(SocketStatusCallback_t *_swig_go_0) {
  SocketStatusCallback_t *arg1 = (SocketStatusCallback_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(SocketStatusCallback_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamIDRemote);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_SocketStatusCallback_t_m_eSNetSocketState_set_steam_fb253aa6b5654893(SocketStatusCallback_t *_swig_go_0, intgo _swig_go_1) {
  SocketStatusCallback_t *arg1 = (SocketStatusCallback_t *) 0 ;
  int arg2 ;
  
  arg1 = *(SocketStatusCallback_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_eSNetSocketState = arg2;
  
}


intgo _wrap_SocketStatusCallback_t_m_eSNetSocketState_get_steam_fb253aa6b5654893(SocketStatusCallback_t *_swig_go_0) {
  SocketStatusCallback_t *arg1 = (SocketStatusCallback_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SocketStatusCallback_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_eSNetSocketState);
  _swig_go_result = result; 
  return _swig_go_result;
}


SocketStatusCallback_t *_wrap_new_SocketStatusCallback_t_steam_fb253aa6b5654893() {
  SocketStatusCallback_t *result = 0 ;
  SocketStatusCallback_t *_swig_go_result;
  
  
  result = (SocketStatusCallback_t *)new SocketStatusCallback_t();
  *(SocketStatusCallback_t **)&_swig_go_result = (SocketStatusCallback_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SocketStatusCallback_t_steam_fb253aa6b5654893(SocketStatusCallback_t *_swig_go_0) {
  SocketStatusCallback_t *arg1 = (SocketStatusCallback_t *) 0 ;
  
  arg1 = *(SocketStatusCallback_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_nScreenshotMaxTaggedUsers_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_nScreenshotMaxTaggedUsers;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_nScreenshotMaxTaggedPublishedFiles_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_nScreenshotMaxTaggedPublishedFiles;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cubUFSTagTypeMax_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cubUFSTagTypeMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cubUFSTagValueMax_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_cubUFSTagValueMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_ScreenshotThumbWidth_get_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)k_ScreenshotThumbWidth;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_EVRScreenshotType_None_steam_fb253aa6b5654893() {
  EVRScreenshotType result;
  intgo _swig_go_result;
  
  
  result = k_EVRScreenshotType_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVRScreenshotType_Mono_steam_fb253aa6b5654893() {
  EVRScreenshotType result;
  intgo _swig_go_result;
  
  
  result = k_EVRScreenshotType_Mono;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVRScreenshotType_Stereo_steam_fb253aa6b5654893() {
  EVRScreenshotType result;
  intgo _swig_go_result;
  
  
  result = k_EVRScreenshotType_Stereo;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVRScreenshotType_MonoCubemap_steam_fb253aa6b5654893() {
  EVRScreenshotType result;
  intgo _swig_go_result;
  
  
  result = k_EVRScreenshotType_MonoCubemap;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVRScreenshotType_MonoPanorama_steam_fb253aa6b5654893() {
  EVRScreenshotType result;
  intgo _swig_go_result;
  
  
  result = k_EVRScreenshotType_MonoPanorama;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EVRScreenshotType_StereoPanorama_steam_fb253aa6b5654893() {
  EVRScreenshotType result;
  intgo _swig_go_result;
  
  
  result = k_EVRScreenshotType_StereoPanorama;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamScreenshots_WriteScreenshot_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32 arg3 ;
  int arg4 ;
  int arg5 ;
  ScreenshotHandle result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (ScreenshotHandle)(arg1)->WriteScreenshot(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamScreenshots_AddScreenshotToLibrary_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  int arg5 ;
  ScreenshotHandle result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (ScreenshotHandle)(arg1)->AddScreenshotToLibrary((char const *)arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


void _wrap_ISteamScreenshots_TriggerScreenshot_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  
  (arg1)->TriggerScreenshot();
  
}


void _wrap_ISteamScreenshots_HookScreenshots_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0, bool _swig_go_1) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  bool arg2 ;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->HookScreenshots(arg2);
  
}


bool _wrap_ISteamScreenshots_SetLocation_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  ScreenshotHandle arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  arg2 = (ScreenshotHandle)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetLocation(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamScreenshots_TagUser_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0, intgo _swig_go_1, CSteamID *_swig_go_2) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  ScreenshotHandle arg2 ;
  CSteamID arg3 ;
  CSteamID *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  arg2 = (ScreenshotHandle)_swig_go_1; 
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  
  result = (bool)(arg1)->TagUser(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamScreenshots_TagPublishedFile_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0, intgo _swig_go_1, long long _swig_go_2) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  ScreenshotHandle arg2 ;
  PublishedFileId_t arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  arg2 = (ScreenshotHandle)_swig_go_1; 
  arg3 = (PublishedFileId_t)_swig_go_2; 
  
  result = (bool)(arg1)->TagPublishedFile(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamScreenshots_IsScreenshotsHooked_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  
  result = (bool)(arg1)->IsScreenshotsHooked();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamScreenshots_AddVRScreenshotToLibrary_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  EVRScreenshotType arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  ScreenshotHandle result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  arg2 = (EVRScreenshotType)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (ScreenshotHandle)(arg1)->AddVRScreenshotToLibrary(arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


void _wrap_delete_ISteamScreenshots_steam_fb253aa6b5654893(ISteamScreenshots *_swig_go_0) {
  ISteamScreenshots *arg1 = (ISteamScreenshots *) 0 ;
  
  arg1 = *(ISteamScreenshots **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_ScreenshotReady_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = ScreenshotReady_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ScreenshotReady_t_m_hLocal_set_steam_fb253aa6b5654893(ScreenshotReady_t *_swig_go_0, intgo _swig_go_1) {
  ScreenshotReady_t *arg1 = (ScreenshotReady_t *) 0 ;
  ScreenshotHandle arg2 ;
  
  arg1 = *(ScreenshotReady_t **)&_swig_go_0; 
  arg2 = (ScreenshotHandle)_swig_go_1; 
  
  if (arg1) (arg1)->m_hLocal = arg2;
  
}


intgo _wrap_ScreenshotReady_t_m_hLocal_get_steam_fb253aa6b5654893(ScreenshotReady_t *_swig_go_0) {
  ScreenshotReady_t *arg1 = (ScreenshotReady_t *) 0 ;
  ScreenshotHandle result;
  intgo _swig_go_result;
  
  arg1 = *(ScreenshotReady_t **)&_swig_go_0; 
  
  result = (ScreenshotHandle) ((arg1)->m_hLocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ScreenshotReady_t_m_eResult_set_steam_fb253aa6b5654893(ScreenshotReady_t *_swig_go_0, intgo _swig_go_1) {
  ScreenshotReady_t *arg1 = (ScreenshotReady_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(ScreenshotReady_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_ScreenshotReady_t_m_eResult_get_steam_fb253aa6b5654893(ScreenshotReady_t *_swig_go_0) {
  ScreenshotReady_t *arg1 = (ScreenshotReady_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(ScreenshotReady_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


ScreenshotReady_t *_wrap_new_ScreenshotReady_t_steam_fb253aa6b5654893() {
  ScreenshotReady_t *result = 0 ;
  ScreenshotReady_t *_swig_go_result;
  
  
  result = (ScreenshotReady_t *)new ScreenshotReady_t();
  *(ScreenshotReady_t **)&_swig_go_result = (ScreenshotReady_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ScreenshotReady_t_steam_fb253aa6b5654893(ScreenshotReady_t *_swig_go_0) {
  ScreenshotReady_t *arg1 = (ScreenshotReady_t *) 0 ;
  
  arg1 = *(ScreenshotReady_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_ScreenshotRequested_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = ScreenshotRequested_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


ScreenshotRequested_t *_wrap_new_ScreenshotRequested_t_steam_fb253aa6b5654893() {
  ScreenshotRequested_t *result = 0 ;
  ScreenshotRequested_t *_swig_go_result;
  
  
  result = (ScreenshotRequested_t *)new ScreenshotRequested_t();
  *(ScreenshotRequested_t **)&_swig_go_result = (ScreenshotRequested_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ScreenshotRequested_t_steam_fb253aa6b5654893(ScreenshotRequested_t *_swig_go_0) {
  ScreenshotRequested_t *arg1 = (ScreenshotRequested_t *) 0 ;
  
  arg1 = *(ScreenshotRequested_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_AudioPlayback_Undefined_steam_fb253aa6b5654893() {
  AudioPlayback_Status result;
  intgo _swig_go_result;
  
  
  result = AudioPlayback_Undefined;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_AudioPlayback_Playing_steam_fb253aa6b5654893() {
  AudioPlayback_Status result;
  intgo _swig_go_result;
  
  
  result = AudioPlayback_Playing;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_AudioPlayback_Paused_steam_fb253aa6b5654893() {
  AudioPlayback_Status result;
  intgo _swig_go_result;
  
  
  result = AudioPlayback_Paused;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_AudioPlayback_Idle_steam_fb253aa6b5654893() {
  AudioPlayback_Status result;
  intgo _swig_go_result;
  
  
  result = AudioPlayback_Idle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusic_BIsEnabled_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusic_BIsPlaying_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsPlaying();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamMusic_GetPlaybackStatus_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  AudioPlayback_Status result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  
  result = (AudioPlayback_Status)(arg1)->GetPlaybackStatus();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ISteamMusic_Play_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  
  (arg1)->Play();
  
}


void _wrap_ISteamMusic_Pause_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  
  (arg1)->Pause();
  
}


void _wrap_ISteamMusic_PlayPrevious_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  
  (arg1)->PlayPrevious();
  
}


void _wrap_ISteamMusic_PlayNext_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  
  (arg1)->PlayNext();
  
}


void _wrap_ISteamMusic_SetVolume_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0, float _swig_go_1) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  float arg2 ;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->SetVolume(arg2);
  
}


float _wrap_ISteamMusic_GetVolume_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  
  result = (float)(arg1)->GetVolume();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamMusic_steam_fb253aa6b5654893(ISteamMusic *_swig_go_0) {
  ISteamMusic *arg1 = (ISteamMusic *) 0 ;
  
  arg1 = *(ISteamMusic **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_PlaybackStatusHasChanged_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = PlaybackStatusHasChanged_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


PlaybackStatusHasChanged_t *_wrap_new_PlaybackStatusHasChanged_t_steam_fb253aa6b5654893() {
  PlaybackStatusHasChanged_t *result = 0 ;
  PlaybackStatusHasChanged_t *_swig_go_result;
  
  
  result = (PlaybackStatusHasChanged_t *)new PlaybackStatusHasChanged_t();
  *(PlaybackStatusHasChanged_t **)&_swig_go_result = (PlaybackStatusHasChanged_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_PlaybackStatusHasChanged_t_steam_fb253aa6b5654893(PlaybackStatusHasChanged_t *_swig_go_0) {
  PlaybackStatusHasChanged_t *arg1 = (PlaybackStatusHasChanged_t *) 0 ;
  
  arg1 = *(PlaybackStatusHasChanged_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_VolumeHasChanged_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = VolumeHasChanged_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_VolumeHasChanged_t_m_flNewVolume_set_steam_fb253aa6b5654893(VolumeHasChanged_t *_swig_go_0, float _swig_go_1) {
  VolumeHasChanged_t *arg1 = (VolumeHasChanged_t *) 0 ;
  float arg2 ;
  
  arg1 = *(VolumeHasChanged_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_flNewVolume = arg2;
  
}


float _wrap_VolumeHasChanged_t_m_flNewVolume_get_steam_fb253aa6b5654893(VolumeHasChanged_t *_swig_go_0) {
  VolumeHasChanged_t *arg1 = (VolumeHasChanged_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(VolumeHasChanged_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_flNewVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


VolumeHasChanged_t *_wrap_new_VolumeHasChanged_t_steam_fb253aa6b5654893() {
  VolumeHasChanged_t *result = 0 ;
  VolumeHasChanged_t *_swig_go_result;
  
  
  result = (VolumeHasChanged_t *)new VolumeHasChanged_t();
  *(VolumeHasChanged_t **)&_swig_go_result = (VolumeHasChanged_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_VolumeHasChanged_t_steam_fb253aa6b5654893(VolumeHasChanged_t *_swig_go_0) {
  VolumeHasChanged_t *arg1 = (VolumeHasChanged_t *) 0 ;
  
  arg1 = *(VolumeHasChanged_t **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_ISteamMusicRemote_RegisterSteamMusicRemote_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->RegisterSteamMusicRemote((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_DeregisterSteamMusicRemote_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->DeregisterSteamMusicRemote();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_BIsCurrentMusicRemote_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsCurrentMusicRemote();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_BActivationSuccess_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->BActivationSuccess(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_SetDisplayName_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->SetDisplayName((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_SetPNGIcon_64x64_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, void *_swig_go_1, intgo _swig_go_2) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (bool)(arg1)->SetPNGIcon_64x64(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_EnablePlayPrevious_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->EnablePlayPrevious(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_EnablePlayNext_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->EnablePlayNext(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_EnableShuffled_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->EnableShuffled(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_EnableLooped_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->EnableLooped(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_EnableQueue_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->EnableQueue(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_EnablePlaylists_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->EnablePlaylists(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_UpdatePlaybackStatus_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, intgo _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  AudioPlayback_Status arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (AudioPlayback_Status)_swig_go_1; 
  
  result = (bool)(arg1)->UpdatePlaybackStatus(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_UpdateShuffled_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->UpdateShuffled(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_UpdateLooped_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->UpdateLooped(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_UpdateVolume_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, float _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  float arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (bool)(arg1)->UpdateVolume(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_CurrentEntryWillChange_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->CurrentEntryWillChange();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_CurrentEntryIsAvailable_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, bool _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)(arg1)->CurrentEntryIsAvailable(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_UpdateCurrentEntryText_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->UpdateCurrentEntryText((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_UpdateCurrentEntryElapsedSeconds_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, intgo _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)(arg1)->UpdateCurrentEntryElapsedSeconds(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_UpdateCurrentEntryCoverArt_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, void *_swig_go_1, intgo _swig_go_2) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  void *arg2 = (void *) 0 ;
  uint32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (bool)(arg1)->UpdateCurrentEntryCoverArt(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_CurrentEntryDidChange_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->CurrentEntryDidChange();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_QueueWillChange_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->QueueWillChange();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_ResetQueueEntries_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->ResetQueueEntries();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_SetQueueEntry_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  int arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->SetQueueEntry(arg2,arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_SetCurrentQueueEntry_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, intgo _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)(arg1)->SetCurrentQueueEntry(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_QueueDidChange_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->QueueDidChange();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_PlaylistWillChange_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->PlaylistWillChange();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_ResetPlaylistEntries_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->ResetPlaylistEntries();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_SetPlaylistEntry_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  int arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->SetPlaylistEntry(arg2,arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_SetCurrentPlaylistEntry_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0, intgo _swig_go_1) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)(arg1)->SetCurrentPlaylistEntry(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamMusicRemote_PlaylistDidChange_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  result = (bool)(arg1)->PlaylistDidChange();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamMusicRemote_steam_fb253aa6b5654893(ISteamMusicRemote *_swig_go_0) {
  ISteamMusicRemote *arg1 = (ISteamMusicRemote *) 0 ;
  
  arg1 = *(ISteamMusicRemote **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerRemoteWillActivate_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerRemoteWillActivate_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


MusicPlayerRemoteWillActivate_t *_wrap_new_MusicPlayerRemoteWillActivate_t_steam_fb253aa6b5654893() {
  MusicPlayerRemoteWillActivate_t *result = 0 ;
  MusicPlayerRemoteWillActivate_t *_swig_go_result;
  
  
  result = (MusicPlayerRemoteWillActivate_t *)new MusicPlayerRemoteWillActivate_t();
  *(MusicPlayerRemoteWillActivate_t **)&_swig_go_result = (MusicPlayerRemoteWillActivate_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerRemoteWillActivate_t_steam_fb253aa6b5654893(MusicPlayerRemoteWillActivate_t *_swig_go_0) {
  MusicPlayerRemoteWillActivate_t *arg1 = (MusicPlayerRemoteWillActivate_t *) 0 ;
  
  arg1 = *(MusicPlayerRemoteWillActivate_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerRemoteWillDeactivate_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerRemoteWillDeactivate_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


MusicPlayerRemoteWillDeactivate_t *_wrap_new_MusicPlayerRemoteWillDeactivate_t_steam_fb253aa6b5654893() {
  MusicPlayerRemoteWillDeactivate_t *result = 0 ;
  MusicPlayerRemoteWillDeactivate_t *_swig_go_result;
  
  
  result = (MusicPlayerRemoteWillDeactivate_t *)new MusicPlayerRemoteWillDeactivate_t();
  *(MusicPlayerRemoteWillDeactivate_t **)&_swig_go_result = (MusicPlayerRemoteWillDeactivate_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerRemoteWillDeactivate_t_steam_fb253aa6b5654893(MusicPlayerRemoteWillDeactivate_t *_swig_go_0) {
  MusicPlayerRemoteWillDeactivate_t *arg1 = (MusicPlayerRemoteWillDeactivate_t *) 0 ;
  
  arg1 = *(MusicPlayerRemoteWillDeactivate_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerRemoteToFront_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerRemoteToFront_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


MusicPlayerRemoteToFront_t *_wrap_new_MusicPlayerRemoteToFront_t_steam_fb253aa6b5654893() {
  MusicPlayerRemoteToFront_t *result = 0 ;
  MusicPlayerRemoteToFront_t *_swig_go_result;
  
  
  result = (MusicPlayerRemoteToFront_t *)new MusicPlayerRemoteToFront_t();
  *(MusicPlayerRemoteToFront_t **)&_swig_go_result = (MusicPlayerRemoteToFront_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerRemoteToFront_t_steam_fb253aa6b5654893(MusicPlayerRemoteToFront_t *_swig_go_0) {
  MusicPlayerRemoteToFront_t *arg1 = (MusicPlayerRemoteToFront_t *) 0 ;
  
  arg1 = *(MusicPlayerRemoteToFront_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerWillQuit_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerWillQuit_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


MusicPlayerWillQuit_t *_wrap_new_MusicPlayerWillQuit_t_steam_fb253aa6b5654893() {
  MusicPlayerWillQuit_t *result = 0 ;
  MusicPlayerWillQuit_t *_swig_go_result;
  
  
  result = (MusicPlayerWillQuit_t *)new MusicPlayerWillQuit_t();
  *(MusicPlayerWillQuit_t **)&_swig_go_result = (MusicPlayerWillQuit_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerWillQuit_t_steam_fb253aa6b5654893(MusicPlayerWillQuit_t *_swig_go_0) {
  MusicPlayerWillQuit_t *arg1 = (MusicPlayerWillQuit_t *) 0 ;
  
  arg1 = *(MusicPlayerWillQuit_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerWantsPlay_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerWantsPlay_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


MusicPlayerWantsPlay_t *_wrap_new_MusicPlayerWantsPlay_t_steam_fb253aa6b5654893() {
  MusicPlayerWantsPlay_t *result = 0 ;
  MusicPlayerWantsPlay_t *_swig_go_result;
  
  
  result = (MusicPlayerWantsPlay_t *)new MusicPlayerWantsPlay_t();
  *(MusicPlayerWantsPlay_t **)&_swig_go_result = (MusicPlayerWantsPlay_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerWantsPlay_t_steam_fb253aa6b5654893(MusicPlayerWantsPlay_t *_swig_go_0) {
  MusicPlayerWantsPlay_t *arg1 = (MusicPlayerWantsPlay_t *) 0 ;
  
  arg1 = *(MusicPlayerWantsPlay_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerWantsPause_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerWantsPause_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


MusicPlayerWantsPause_t *_wrap_new_MusicPlayerWantsPause_t_steam_fb253aa6b5654893() {
  MusicPlayerWantsPause_t *result = 0 ;
  MusicPlayerWantsPause_t *_swig_go_result;
  
  
  result = (MusicPlayerWantsPause_t *)new MusicPlayerWantsPause_t();
  *(MusicPlayerWantsPause_t **)&_swig_go_result = (MusicPlayerWantsPause_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerWantsPause_t_steam_fb253aa6b5654893(MusicPlayerWantsPause_t *_swig_go_0) {
  MusicPlayerWantsPause_t *arg1 = (MusicPlayerWantsPause_t *) 0 ;
  
  arg1 = *(MusicPlayerWantsPause_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerWantsPlayPrevious_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerWantsPlayPrevious_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


MusicPlayerWantsPlayPrevious_t *_wrap_new_MusicPlayerWantsPlayPrevious_t_steam_fb253aa6b5654893() {
  MusicPlayerWantsPlayPrevious_t *result = 0 ;
  MusicPlayerWantsPlayPrevious_t *_swig_go_result;
  
  
  result = (MusicPlayerWantsPlayPrevious_t *)new MusicPlayerWantsPlayPrevious_t();
  *(MusicPlayerWantsPlayPrevious_t **)&_swig_go_result = (MusicPlayerWantsPlayPrevious_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerWantsPlayPrevious_t_steam_fb253aa6b5654893(MusicPlayerWantsPlayPrevious_t *_swig_go_0) {
  MusicPlayerWantsPlayPrevious_t *arg1 = (MusicPlayerWantsPlayPrevious_t *) 0 ;
  
  arg1 = *(MusicPlayerWantsPlayPrevious_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerWantsPlayNext_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerWantsPlayNext_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


MusicPlayerWantsPlayNext_t *_wrap_new_MusicPlayerWantsPlayNext_t_steam_fb253aa6b5654893() {
  MusicPlayerWantsPlayNext_t *result = 0 ;
  MusicPlayerWantsPlayNext_t *_swig_go_result;
  
  
  result = (MusicPlayerWantsPlayNext_t *)new MusicPlayerWantsPlayNext_t();
  *(MusicPlayerWantsPlayNext_t **)&_swig_go_result = (MusicPlayerWantsPlayNext_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerWantsPlayNext_t_steam_fb253aa6b5654893(MusicPlayerWantsPlayNext_t *_swig_go_0) {
  MusicPlayerWantsPlayNext_t *arg1 = (MusicPlayerWantsPlayNext_t *) 0 ;
  
  arg1 = *(MusicPlayerWantsPlayNext_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerWantsShuffled_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerWantsShuffled_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_MusicPlayerWantsShuffled_t_m_bShuffled_set_steam_fb253aa6b5654893(MusicPlayerWantsShuffled_t *_swig_go_0, bool _swig_go_1) {
  MusicPlayerWantsShuffled_t *arg1 = (MusicPlayerWantsShuffled_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(MusicPlayerWantsShuffled_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bShuffled = arg2;
  
}


bool _wrap_MusicPlayerWantsShuffled_t_m_bShuffled_get_steam_fb253aa6b5654893(MusicPlayerWantsShuffled_t *_swig_go_0) {
  MusicPlayerWantsShuffled_t *arg1 = (MusicPlayerWantsShuffled_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(MusicPlayerWantsShuffled_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bShuffled);
  _swig_go_result = result; 
  return _swig_go_result;
}


MusicPlayerWantsShuffled_t *_wrap_new_MusicPlayerWantsShuffled_t_steam_fb253aa6b5654893() {
  MusicPlayerWantsShuffled_t *result = 0 ;
  MusicPlayerWantsShuffled_t *_swig_go_result;
  
  
  result = (MusicPlayerWantsShuffled_t *)new MusicPlayerWantsShuffled_t();
  *(MusicPlayerWantsShuffled_t **)&_swig_go_result = (MusicPlayerWantsShuffled_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerWantsShuffled_t_steam_fb253aa6b5654893(MusicPlayerWantsShuffled_t *_swig_go_0) {
  MusicPlayerWantsShuffled_t *arg1 = (MusicPlayerWantsShuffled_t *) 0 ;
  
  arg1 = *(MusicPlayerWantsShuffled_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerWantsLooped_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerWantsLooped_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_MusicPlayerWantsLooped_t_m_bLooped_set_steam_fb253aa6b5654893(MusicPlayerWantsLooped_t *_swig_go_0, bool _swig_go_1) {
  MusicPlayerWantsLooped_t *arg1 = (MusicPlayerWantsLooped_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(MusicPlayerWantsLooped_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bLooped = arg2;
  
}


bool _wrap_MusicPlayerWantsLooped_t_m_bLooped_get_steam_fb253aa6b5654893(MusicPlayerWantsLooped_t *_swig_go_0) {
  MusicPlayerWantsLooped_t *arg1 = (MusicPlayerWantsLooped_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(MusicPlayerWantsLooped_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bLooped);
  _swig_go_result = result; 
  return _swig_go_result;
}


MusicPlayerWantsLooped_t *_wrap_new_MusicPlayerWantsLooped_t_steam_fb253aa6b5654893() {
  MusicPlayerWantsLooped_t *result = 0 ;
  MusicPlayerWantsLooped_t *_swig_go_result;
  
  
  result = (MusicPlayerWantsLooped_t *)new MusicPlayerWantsLooped_t();
  *(MusicPlayerWantsLooped_t **)&_swig_go_result = (MusicPlayerWantsLooped_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerWantsLooped_t_steam_fb253aa6b5654893(MusicPlayerWantsLooped_t *_swig_go_0) {
  MusicPlayerWantsLooped_t *arg1 = (MusicPlayerWantsLooped_t *) 0 ;
  
  arg1 = *(MusicPlayerWantsLooped_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerWantsVolume_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerWantsVolume_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_MusicPlayerWantsVolume_t_m_flNewVolume_set_steam_fb253aa6b5654893(MusicPlayerWantsVolume_t *_swig_go_0, float _swig_go_1) {
  MusicPlayerWantsVolume_t *arg1 = (MusicPlayerWantsVolume_t *) 0 ;
  float arg2 ;
  
  arg1 = *(MusicPlayerWantsVolume_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_flNewVolume = arg2;
  
}


float _wrap_MusicPlayerWantsVolume_t_m_flNewVolume_get_steam_fb253aa6b5654893(MusicPlayerWantsVolume_t *_swig_go_0) {
  MusicPlayerWantsVolume_t *arg1 = (MusicPlayerWantsVolume_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(MusicPlayerWantsVolume_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_flNewVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


MusicPlayerWantsVolume_t *_wrap_new_MusicPlayerWantsVolume_t_steam_fb253aa6b5654893() {
  MusicPlayerWantsVolume_t *result = 0 ;
  MusicPlayerWantsVolume_t *_swig_go_result;
  
  
  result = (MusicPlayerWantsVolume_t *)new MusicPlayerWantsVolume_t();
  *(MusicPlayerWantsVolume_t **)&_swig_go_result = (MusicPlayerWantsVolume_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerWantsVolume_t_steam_fb253aa6b5654893(MusicPlayerWantsVolume_t *_swig_go_0) {
  MusicPlayerWantsVolume_t *arg1 = (MusicPlayerWantsVolume_t *) 0 ;
  
  arg1 = *(MusicPlayerWantsVolume_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerSelectsQueueEntry_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerSelectsQueueEntry_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_MusicPlayerSelectsQueueEntry_t_nID_set_steam_fb253aa6b5654893(MusicPlayerSelectsQueueEntry_t *_swig_go_0, intgo _swig_go_1) {
  MusicPlayerSelectsQueueEntry_t *arg1 = (MusicPlayerSelectsQueueEntry_t *) 0 ;
  int arg2 ;
  
  arg1 = *(MusicPlayerSelectsQueueEntry_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->nID = arg2;
  
}


intgo _wrap_MusicPlayerSelectsQueueEntry_t_nID_get_steam_fb253aa6b5654893(MusicPlayerSelectsQueueEntry_t *_swig_go_0) {
  MusicPlayerSelectsQueueEntry_t *arg1 = (MusicPlayerSelectsQueueEntry_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(MusicPlayerSelectsQueueEntry_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->nID);
  _swig_go_result = result; 
  return _swig_go_result;
}


MusicPlayerSelectsQueueEntry_t *_wrap_new_MusicPlayerSelectsQueueEntry_t_steam_fb253aa6b5654893() {
  MusicPlayerSelectsQueueEntry_t *result = 0 ;
  MusicPlayerSelectsQueueEntry_t *_swig_go_result;
  
  
  result = (MusicPlayerSelectsQueueEntry_t *)new MusicPlayerSelectsQueueEntry_t();
  *(MusicPlayerSelectsQueueEntry_t **)&_swig_go_result = (MusicPlayerSelectsQueueEntry_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerSelectsQueueEntry_t_steam_fb253aa6b5654893(MusicPlayerSelectsQueueEntry_t *_swig_go_0) {
  MusicPlayerSelectsQueueEntry_t *arg1 = (MusicPlayerSelectsQueueEntry_t *) 0 ;
  
  arg1 = *(MusicPlayerSelectsQueueEntry_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerSelectsPlaylistEntry_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerSelectsPlaylistEntry_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_MusicPlayerSelectsPlaylistEntry_t_nID_set_steam_fb253aa6b5654893(MusicPlayerSelectsPlaylistEntry_t *_swig_go_0, intgo _swig_go_1) {
  MusicPlayerSelectsPlaylistEntry_t *arg1 = (MusicPlayerSelectsPlaylistEntry_t *) 0 ;
  int arg2 ;
  
  arg1 = *(MusicPlayerSelectsPlaylistEntry_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->nID = arg2;
  
}


intgo _wrap_MusicPlayerSelectsPlaylistEntry_t_nID_get_steam_fb253aa6b5654893(MusicPlayerSelectsPlaylistEntry_t *_swig_go_0) {
  MusicPlayerSelectsPlaylistEntry_t *arg1 = (MusicPlayerSelectsPlaylistEntry_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(MusicPlayerSelectsPlaylistEntry_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->nID);
  _swig_go_result = result; 
  return _swig_go_result;
}


MusicPlayerSelectsPlaylistEntry_t *_wrap_new_MusicPlayerSelectsPlaylistEntry_t_steam_fb253aa6b5654893() {
  MusicPlayerSelectsPlaylistEntry_t *result = 0 ;
  MusicPlayerSelectsPlaylistEntry_t *_swig_go_result;
  
  
  result = (MusicPlayerSelectsPlaylistEntry_t *)new MusicPlayerSelectsPlaylistEntry_t();
  *(MusicPlayerSelectsPlaylistEntry_t **)&_swig_go_result = (MusicPlayerSelectsPlaylistEntry_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerSelectsPlaylistEntry_t_steam_fb253aa6b5654893(MusicPlayerSelectsPlaylistEntry_t *_swig_go_0) {
  MusicPlayerSelectsPlaylistEntry_t *arg1 = (MusicPlayerSelectsPlaylistEntry_t *) 0 ;
  
  arg1 = *(MusicPlayerSelectsPlaylistEntry_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_MusicPlayerWantsPlayingRepeatStatus_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = MusicPlayerWantsPlayingRepeatStatus_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_MusicPlayerWantsPlayingRepeatStatus_t_m_nPlayingRepeatStatus_set_steam_fb253aa6b5654893(MusicPlayerWantsPlayingRepeatStatus_t *_swig_go_0, intgo _swig_go_1) {
  MusicPlayerWantsPlayingRepeatStatus_t *arg1 = (MusicPlayerWantsPlayingRepeatStatus_t *) 0 ;
  int arg2 ;
  
  arg1 = *(MusicPlayerWantsPlayingRepeatStatus_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPlayingRepeatStatus = arg2;
  
}


intgo _wrap_MusicPlayerWantsPlayingRepeatStatus_t_m_nPlayingRepeatStatus_get_steam_fb253aa6b5654893(MusicPlayerWantsPlayingRepeatStatus_t *_swig_go_0) {
  MusicPlayerWantsPlayingRepeatStatus_t *arg1 = (MusicPlayerWantsPlayingRepeatStatus_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(MusicPlayerWantsPlayingRepeatStatus_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nPlayingRepeatStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


MusicPlayerWantsPlayingRepeatStatus_t *_wrap_new_MusicPlayerWantsPlayingRepeatStatus_t_steam_fb253aa6b5654893() {
  MusicPlayerWantsPlayingRepeatStatus_t *result = 0 ;
  MusicPlayerWantsPlayingRepeatStatus_t *_swig_go_result;
  
  
  result = (MusicPlayerWantsPlayingRepeatStatus_t *)new MusicPlayerWantsPlayingRepeatStatus_t();
  *(MusicPlayerWantsPlayingRepeatStatus_t **)&_swig_go_result = (MusicPlayerWantsPlayingRepeatStatus_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_MusicPlayerWantsPlayingRepeatStatus_t_steam_fb253aa6b5654893(MusicPlayerWantsPlayingRepeatStatus_t *_swig_go_0) {
  MusicPlayerWantsPlayingRepeatStatus_t *arg1 = (MusicPlayerWantsPlayingRepeatStatus_t *) 0 ;
  
  arg1 = *(MusicPlayerWantsPlayingRepeatStatus_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_EHTTPMethodInvalid_steam_fb253aa6b5654893() {
  EHTTPMethod result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPMethodInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPMethodGET_steam_fb253aa6b5654893() {
  EHTTPMethod result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPMethodGET;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPMethodHEAD_steam_fb253aa6b5654893() {
  EHTTPMethod result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPMethodHEAD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPMethodPOST_steam_fb253aa6b5654893() {
  EHTTPMethod result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPMethodPOST;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPMethodPUT_steam_fb253aa6b5654893() {
  EHTTPMethod result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPMethodPUT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPMethodDELETE_steam_fb253aa6b5654893() {
  EHTTPMethod result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPMethodDELETE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPMethodOPTIONS_steam_fb253aa6b5654893() {
  EHTTPMethod result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPMethodOPTIONS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPMethodPATCH_steam_fb253aa6b5654893() {
  EHTTPMethod result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPMethodPATCH;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCodeInvalid_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCodeInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode100Continue_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode100Continue;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode101SwitchingProtocols_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode101SwitchingProtocols;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode200OK_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode200OK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode201Created_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode201Created;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode202Accepted_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode202Accepted;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode203NonAuthoritative_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode203NonAuthoritative;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode204NoContent_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode204NoContent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode205ResetContent_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode205ResetContent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode206PartialContent_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode206PartialContent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode300MultipleChoices_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode300MultipleChoices;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode301MovedPermanently_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode301MovedPermanently;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode302Found_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode302Found;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode303SeeOther_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode303SeeOther;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode304NotModified_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode304NotModified;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode305UseProxy_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode305UseProxy;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode307TemporaryRedirect_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode307TemporaryRedirect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode400BadRequest_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode400BadRequest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode401Unauthorized_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode401Unauthorized;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode402PaymentRequired_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode402PaymentRequired;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode403Forbidden_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode403Forbidden;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode404NotFound_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode404NotFound;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode405MethodNotAllowed_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode405MethodNotAllowed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode406NotAcceptable_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode406NotAcceptable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode407ProxyAuthRequired_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode407ProxyAuthRequired;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode408RequestTimeout_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode408RequestTimeout;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode409Conflict_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode409Conflict;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode410Gone_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode410Gone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode411LengthRequired_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode411LengthRequired;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode412PreconditionFailed_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode412PreconditionFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode413RequestEntityTooLarge_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode413RequestEntityTooLarge;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode414RequestURITooLong_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode414RequestURITooLong;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode415UnsupportedMediaType_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode415UnsupportedMediaType;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode416RequestedRangeNotSatisfiable_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode416RequestedRangeNotSatisfiable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode417ExpectationFailed_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode417ExpectationFailed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode4xxUnknown_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode4xxUnknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode429TooManyRequests_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode429TooManyRequests;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode500InternalServerError_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode500InternalServerError;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode501NotImplemented_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode501NotImplemented;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode502BadGateway_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode502BadGateway;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode503ServiceUnavailable_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode503ServiceUnavailable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode504GatewayTimeout_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode504GatewayTimeout;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode505HTTPVersionNotSupported_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode505HTTPVersionNotSupported;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EHTTPStatusCode5xxUnknown_steam_fb253aa6b5654893() {
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  
  result = k_EHTTPStatusCode5xxUnknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ISteamHTTP_CreateHTTPRequest_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  EHTTPMethod arg2 ;
  char *arg3 = (char *) 0 ;
  HTTPRequestHandle result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (EHTTPMethod)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (HTTPRequestHandle)(arg1)->CreateHTTPRequest(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetHTTPRequestContextValue_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, long long _swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  uint64 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = (uint64)_swig_go_2; 
  
  result = (bool)(arg1)->SetHTTPRequestContextValue(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetHTTPRequestNetworkActivityTimeout_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  uint32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (bool)(arg1)->SetHTTPRequestNetworkActivityTimeout(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetHTTPRequestHeaderValue_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->SetHTTPRequestHeaderValue(arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetHTTPRequestGetOrPostParameter_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->SetHTTPRequestGetOrPostParameter(arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SendHTTPRequest_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, long long *_swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  SteamAPICall_t *arg3 = (SteamAPICall_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = *(SteamAPICall_t **)&_swig_go_2; 
  
  result = (bool)(arg1)->SendHTTPRequest(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SendHTTPRequestAndStreamResponse_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, long long *_swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  SteamAPICall_t *arg3 = (SteamAPICall_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = *(SteamAPICall_t **)&_swig_go_2; 
  
  result = (bool)(arg1)->SendHTTPRequestAndStreamResponse(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_DeferHTTPRequest_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  result = (bool)(arg1)->DeferHTTPRequest(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_PrioritizeHTTPRequest_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  result = (bool)(arg1)->PrioritizeHTTPRequest(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_GetHTTPResponseHeaderSize_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, intgo *_swig_go_3) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  char *arg3 = (char *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(uint32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetHTTPResponseHeaderSize(arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_GetHTTPResponseHeaderValue_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, char *_swig_go_3, intgo _swig_go_4) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  char *arg3 = (char *) 0 ;
  uint8 *arg4 = (uint8 *) 0 ;
  uint32 arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(uint8 **)&_swig_go_3; 
  arg5 = (uint32)_swig_go_4; 
  
  result = (bool)(arg1)->GetHTTPResponseHeaderValue(arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_GetHTTPResponseBodySize_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  uint32 *arg3 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = *(uint32 **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetHTTPResponseBodySize(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_GetHTTPResponseBodyData_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, char *_swig_go_2, intgo _swig_go_3) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  uint8 *arg3 = (uint8 *) 0 ;
  uint32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = *(uint8 **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (bool)(arg1)->GetHTTPResponseBodyData(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_GetHTTPStreamingResponseBodyData_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, char *_swig_go_3, intgo _swig_go_4) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  uint32 arg3 ;
  uint8 *arg4 = (uint8 *) 0 ;
  uint32 arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = *(uint8 **)&_swig_go_3; 
  arg5 = (uint32)_swig_go_4; 
  
  result = (bool)(arg1)->GetHTTPStreamingResponseBodyData(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_ReleaseHTTPRequest_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  result = (bool)(arg1)->ReleaseHTTPRequest(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_GetHTTPDownloadProgressPct_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, float *_swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  float *arg3 = (float *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetHTTPDownloadProgressPct(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetHTTPRequestRawPostBody_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, char *_swig_go_3, intgo _swig_go_4) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  char *arg3 = (char *) 0 ;
  uint8 *arg4 = (uint8 *) 0 ;
  uint32 arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(uint8 **)&_swig_go_3; 
  arg5 = (uint32)_swig_go_4; 
  
  result = (bool)(arg1)->SetHTTPRequestRawPostBody(arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_ISteamHTTP_CreateCookieContainer_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, bool _swig_go_1) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  bool arg2 ;
  HTTPCookieContainerHandle result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (HTTPCookieContainerHandle)(arg1)->CreateCookieContainer(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_ReleaseCookieContainer_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPCookieContainerHandle arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPCookieContainerHandle)_swig_go_1; 
  
  result = (bool)(arg1)->ReleaseCookieContainer(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetCookie_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPCookieContainerHandle arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPCookieContainerHandle)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)(arg1)->SetCookie(arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetHTTPRequestCookieContainer_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  HTTPCookieContainerHandle arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = (HTTPCookieContainerHandle)_swig_go_2; 
  
  result = (bool)(arg1)->SetHTTPRequestCookieContainer(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetHTTPRequestUserAgentInfo_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetHTTPRequestUserAgentInfo(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetHTTPRequestRequiresVerifiedCertificate_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetHTTPRequestRequiresVerifiedCertificate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_SetHTTPRequestAbsoluteTimeoutMS_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  uint32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (bool)(arg1)->SetHTTPRequestAbsoluteTimeoutMS(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTTP_GetHTTPRequestWasTimedOut_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0, intgo _swig_go_1, bool *_swig_go_2) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  HTTPRequestHandle arg2 ;
  bool *arg3 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  arg3 = *(bool **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetHTTPRequestWasTimedOut(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamHTTP_steam_fb253aa6b5654893(ISteamHTTP *_swig_go_0) {
  ISteamHTTP *arg1 = (ISteamHTTP *) 0 ;
  
  arg1 = *(ISteamHTTP **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTTPRequestCompleted_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTTPRequestCompleted_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestCompleted_t_m_hRequest_set_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0, intgo _swig_go_1) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  HTTPRequestHandle arg2 ;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  if (arg1) (arg1)->m_hRequest = arg2;
  
}


intgo _wrap_HTTPRequestCompleted_t_m_hRequest_get_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  HTTPRequestHandle result;
  intgo _swig_go_result;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  
  result = (HTTPRequestHandle) ((arg1)->m_hRequest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestCompleted_t_m_ulContextValue_set_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0, long long _swig_go_1) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulContextValue = arg2;
  
}


long long _wrap_HTTPRequestCompleted_t_m_ulContextValue_get_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulContextValue);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestCompleted_t_m_bRequestSuccessful_set_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0, bool _swig_go_1) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bRequestSuccessful = arg2;
  
}


bool _wrap_HTTPRequestCompleted_t_m_bRequestSuccessful_get_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bRequestSuccessful);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestCompleted_t_m_eStatusCode_set_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0, intgo _swig_go_1) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  EHTTPStatusCode arg2 ;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  arg2 = (EHTTPStatusCode)_swig_go_1; 
  
  if (arg1) (arg1)->m_eStatusCode = arg2;
  
}


intgo _wrap_HTTPRequestCompleted_t_m_eStatusCode_get_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  EHTTPStatusCode result;
  intgo _swig_go_result;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  
  result = (EHTTPStatusCode) ((arg1)->m_eStatusCode);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestCompleted_t_m_unBodySize_set_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0, intgo _swig_go_1) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unBodySize = arg2;
  
}


intgo _wrap_HTTPRequestCompleted_t_m_unBodySize_get_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unBodySize);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTTPRequestCompleted_t *_wrap_new_HTTPRequestCompleted_t_steam_fb253aa6b5654893() {
  HTTPRequestCompleted_t *result = 0 ;
  HTTPRequestCompleted_t *_swig_go_result;
  
  
  result = (HTTPRequestCompleted_t *)new HTTPRequestCompleted_t();
  *(HTTPRequestCompleted_t **)&_swig_go_result = (HTTPRequestCompleted_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTTPRequestCompleted_t_steam_fb253aa6b5654893(HTTPRequestCompleted_t *_swig_go_0) {
  HTTPRequestCompleted_t *arg1 = (HTTPRequestCompleted_t *) 0 ;
  
  arg1 = *(HTTPRequestCompleted_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTTPRequestHeadersReceived_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTTPRequestHeadersReceived_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestHeadersReceived_t_m_hRequest_set_steam_fb253aa6b5654893(HTTPRequestHeadersReceived_t *_swig_go_0, intgo _swig_go_1) {
  HTTPRequestHeadersReceived_t *arg1 = (HTTPRequestHeadersReceived_t *) 0 ;
  HTTPRequestHandle arg2 ;
  
  arg1 = *(HTTPRequestHeadersReceived_t **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  if (arg1) (arg1)->m_hRequest = arg2;
  
}


intgo _wrap_HTTPRequestHeadersReceived_t_m_hRequest_get_steam_fb253aa6b5654893(HTTPRequestHeadersReceived_t *_swig_go_0) {
  HTTPRequestHeadersReceived_t *arg1 = (HTTPRequestHeadersReceived_t *) 0 ;
  HTTPRequestHandle result;
  intgo _swig_go_result;
  
  arg1 = *(HTTPRequestHeadersReceived_t **)&_swig_go_0; 
  
  result = (HTTPRequestHandle) ((arg1)->m_hRequest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestHeadersReceived_t_m_ulContextValue_set_steam_fb253aa6b5654893(HTTPRequestHeadersReceived_t *_swig_go_0, long long _swig_go_1) {
  HTTPRequestHeadersReceived_t *arg1 = (HTTPRequestHeadersReceived_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(HTTPRequestHeadersReceived_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulContextValue = arg2;
  
}


long long _wrap_HTTPRequestHeadersReceived_t_m_ulContextValue_get_steam_fb253aa6b5654893(HTTPRequestHeadersReceived_t *_swig_go_0) {
  HTTPRequestHeadersReceived_t *arg1 = (HTTPRequestHeadersReceived_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(HTTPRequestHeadersReceived_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulContextValue);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTTPRequestHeadersReceived_t *_wrap_new_HTTPRequestHeadersReceived_t_steam_fb253aa6b5654893() {
  HTTPRequestHeadersReceived_t *result = 0 ;
  HTTPRequestHeadersReceived_t *_swig_go_result;
  
  
  result = (HTTPRequestHeadersReceived_t *)new HTTPRequestHeadersReceived_t();
  *(HTTPRequestHeadersReceived_t **)&_swig_go_result = (HTTPRequestHeadersReceived_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTTPRequestHeadersReceived_t_steam_fb253aa6b5654893(HTTPRequestHeadersReceived_t *_swig_go_0) {
  HTTPRequestHeadersReceived_t *arg1 = (HTTPRequestHeadersReceived_t *) 0 ;
  
  arg1 = *(HTTPRequestHeadersReceived_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTTPRequestDataReceived_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTTPRequestDataReceived_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestDataReceived_t_m_hRequest_set_steam_fb253aa6b5654893(HTTPRequestDataReceived_t *_swig_go_0, intgo _swig_go_1) {
  HTTPRequestDataReceived_t *arg1 = (HTTPRequestDataReceived_t *) 0 ;
  HTTPRequestHandle arg2 ;
  
  arg1 = *(HTTPRequestDataReceived_t **)&_swig_go_0; 
  arg2 = (HTTPRequestHandle)_swig_go_1; 
  
  if (arg1) (arg1)->m_hRequest = arg2;
  
}


intgo _wrap_HTTPRequestDataReceived_t_m_hRequest_get_steam_fb253aa6b5654893(HTTPRequestDataReceived_t *_swig_go_0) {
  HTTPRequestDataReceived_t *arg1 = (HTTPRequestDataReceived_t *) 0 ;
  HTTPRequestHandle result;
  intgo _swig_go_result;
  
  arg1 = *(HTTPRequestDataReceived_t **)&_swig_go_0; 
  
  result = (HTTPRequestHandle) ((arg1)->m_hRequest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestDataReceived_t_m_ulContextValue_set_steam_fb253aa6b5654893(HTTPRequestDataReceived_t *_swig_go_0, long long _swig_go_1) {
  HTTPRequestDataReceived_t *arg1 = (HTTPRequestDataReceived_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(HTTPRequestDataReceived_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulContextValue = arg2;
  
}


long long _wrap_HTTPRequestDataReceived_t_m_ulContextValue_get_steam_fb253aa6b5654893(HTTPRequestDataReceived_t *_swig_go_0) {
  HTTPRequestDataReceived_t *arg1 = (HTTPRequestDataReceived_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(HTTPRequestDataReceived_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulContextValue);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestDataReceived_t_m_cOffset_set_steam_fb253aa6b5654893(HTTPRequestDataReceived_t *_swig_go_0, intgo _swig_go_1) {
  HTTPRequestDataReceived_t *arg1 = (HTTPRequestDataReceived_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTTPRequestDataReceived_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_cOffset = arg2;
  
}


intgo _wrap_HTTPRequestDataReceived_t_m_cOffset_get_steam_fb253aa6b5654893(HTTPRequestDataReceived_t *_swig_go_0) {
  HTTPRequestDataReceived_t *arg1 = (HTTPRequestDataReceived_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTTPRequestDataReceived_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_cOffset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTTPRequestDataReceived_t_m_cBytesReceived_set_steam_fb253aa6b5654893(HTTPRequestDataReceived_t *_swig_go_0, intgo _swig_go_1) {
  HTTPRequestDataReceived_t *arg1 = (HTTPRequestDataReceived_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTTPRequestDataReceived_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_cBytesReceived = arg2;
  
}


intgo _wrap_HTTPRequestDataReceived_t_m_cBytesReceived_get_steam_fb253aa6b5654893(HTTPRequestDataReceived_t *_swig_go_0) {
  HTTPRequestDataReceived_t *arg1 = (HTTPRequestDataReceived_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTTPRequestDataReceived_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_cBytesReceived);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTTPRequestDataReceived_t *_wrap_new_HTTPRequestDataReceived_t_steam_fb253aa6b5654893() {
  HTTPRequestDataReceived_t *result = 0 ;
  HTTPRequestDataReceived_t *_swig_go_result;
  
  
  result = (HTTPRequestDataReceived_t *)new HTTPRequestDataReceived_t();
  *(HTTPRequestDataReceived_t **)&_swig_go_result = (HTTPRequestDataReceived_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTTPRequestDataReceived_t_steam_fb253aa6b5654893(HTTPRequestDataReceived_t *_swig_go_0) {
  HTTPRequestDataReceived_t *arg1 = (HTTPRequestDataReceived_t *) 0 ;
  
  arg1 = *(HTTPRequestDataReceived_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_ESteamControllerPad_Left_steam_fb253aa6b5654893() {
  ESteamControllerPad result;
  intgo _swig_go_result;
  
  
  result = k_ESteamControllerPad_Left;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamControllerPad_Right_steam_fb253aa6b5654893() {
  ESteamControllerPad result;
  intgo _swig_go_result;
  
  
  result = k_ESteamControllerPad_Right;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_None_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_LeftTrackpad_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_LeftTrackpad;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_RightTrackpad_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_RightTrackpad;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_Joystick_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_Joystick;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_ABXY_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_ABXY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_Switch_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_Switch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_LeftTrigger_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_LeftTrigger;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_RightTrigger_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_RightTrigger;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_Gyro_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_Gyro;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_CenterTrackpad_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_CenterTrackpad;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_RightJoystick_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_RightJoystick;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_DPad_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_DPad;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_Key_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_Key;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_Mouse_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_Mouse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSource_Count_steam_fb253aa6b5654893() {
  EControllerSource result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSource_Count;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_None_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_Dpad_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_Dpad;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_Buttons_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_Buttons;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_FourButtons_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_FourButtons;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_AbsoluteMouse_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_AbsoluteMouse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_RelativeMouse_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_RelativeMouse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_JoystickMove_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_JoystickMove;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_JoystickMouse_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_JoystickMouse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_JoystickCamera_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_JoystickCamera;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_ScrollWheel_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_ScrollWheel;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_Trigger_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_Trigger;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_TouchMenu_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_TouchMenu;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_MouseJoystick_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_MouseJoystick;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_MouseRegion_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_MouseRegion;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_RadialMenu_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_RadialMenu;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_SingleButton_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_SingleButton;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerSourceMode_Switches_steam_fb253aa6b5654893() {
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  
  result = k_EControllerSourceMode_Switches;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_None_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_A_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_A;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_B_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_B;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_X_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_X;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_Y_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_Y;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftGrip_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftGrip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightGrip_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightGrip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_Start_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_Start;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_Back_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_Back;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftPad_Touch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftPad_Touch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftPad_Swipe_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftPad_Swipe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftPad_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftPad_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftPad_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftPad_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftPad_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftPad_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftPad_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftPad_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftPad_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftPad_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightPad_Touch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightPad_Touch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightPad_Swipe_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightPad_Swipe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightPad_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightPad_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightPad_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightPad_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightPad_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightPad_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightPad_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightPad_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightPad_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightPad_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_RightTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_RightTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftStick_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftStick_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftStick_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftStick_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftStick_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftStick_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftStick_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftStick_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftStick_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftStick_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_LeftStick_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_LeftStick_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_Gyro_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_Gyro_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_Gyro_Pitch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_Gyro_Pitch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_Gyro_Yaw_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_Gyro_Yaw;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_Gyro_Roll_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_Gyro_Roll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_X_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_X;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_Circle_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_Circle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_Triangle_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_Triangle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_Square_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_Square;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_Options_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_Options;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_Share_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_Share;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftPad_Touch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftPad_Touch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftPad_Swipe_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftPad_Swipe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftPad_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftPad_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftPad_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftPad_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftPad_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftPad_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftPad_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftPad_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftPad_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftPad_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightPad_Touch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightPad_Touch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightPad_Swipe_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightPad_Swipe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightPad_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightPad_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightPad_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightPad_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightPad_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightPad_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightPad_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightPad_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightPad_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightPad_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_CenterPad_Touch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_CenterPad_Touch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_CenterPad_Swipe_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_CenterPad_Swipe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_CenterPad_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_CenterPad_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_CenterPad_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_CenterPad_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_CenterPad_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_CenterPad_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_CenterPad_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_CenterPad_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_CenterPad_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_CenterPad_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftStick_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftStick_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftStick_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftStick_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftStick_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftStick_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftStick_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftStick_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftStick_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftStick_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_LeftStick_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_LeftStick_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightStick_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightStick_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightStick_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightStick_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightStick_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightStick_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightStick_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightStick_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightStick_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightStick_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_RightStick_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_RightStick_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_DPad_North_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_DPad_North;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_DPad_South_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_DPad_South;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_DPad_West_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_DPad_West;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_DPad_East_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_DPad_East;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_Gyro_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_Gyro_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_Gyro_Pitch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_Gyro_Pitch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_Gyro_Yaw_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_Gyro_Yaw;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_PS4_Gyro_Roll_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_PS4_Gyro_Roll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_A_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_A;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_B_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_B;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_X_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_X;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_Y_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_Y;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_LeftBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_LeftBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_RightBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_RightBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_Menu_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_Menu;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_View_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_View;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_LeftTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_LeftTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_LeftTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_LeftTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_RightTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_RightTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_RightTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_RightTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_LeftStick_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_LeftStick_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_LeftStick_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_LeftStick_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_LeftStick_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_LeftStick_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_LeftStick_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_LeftStick_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_LeftStick_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_LeftStick_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_LeftStick_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_LeftStick_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_RightStick_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_RightStick_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_RightStick_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_RightStick_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_RightStick_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_RightStick_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_RightStick_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_RightStick_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_RightStick_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_RightStick_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_RightStick_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_RightStick_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_DPad_North_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_DPad_North;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_DPad_South_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_DPad_South;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_DPad_West_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_DPad_West;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBoxOne_DPad_East_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBoxOne_DPad_East;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_A_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_A;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_B_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_B;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_X_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_X;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_Y_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_Y;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_LeftBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_LeftBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_RightBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_RightBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_Start_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_Start;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_Back_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_Back;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_LeftTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_LeftTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_LeftTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_LeftTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_RightTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_RightTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_RightTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_RightTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_LeftStick_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_LeftStick_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_LeftStick_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_LeftStick_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_LeftStick_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_LeftStick_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_LeftStick_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_LeftStick_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_LeftStick_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_LeftStick_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_LeftStick_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_LeftStick_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_RightStick_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_RightStick_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_RightStick_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_RightStick_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_RightStick_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_RightStick_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_RightStick_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_RightStick_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_RightStick_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_RightStick_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_RightStick_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_RightStick_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_DPad_North_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_DPad_North;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_DPad_South_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_DPad_South;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_DPad_West_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_DPad_West;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_XBox360_DPad_East_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_XBox360_DPad_East;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_A_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_A;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_B_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_B;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_X_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_X;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_Y_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_Y;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightBumper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightBumper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftGrip_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftGrip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightGrip_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightGrip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftGrip_Upper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftGrip_Upper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightGrip_Upper_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightGrip_Upper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftBumper_Pressure_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftBumper_Pressure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightBumper_Pressure_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightBumper_Pressure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftGrip_Pressure_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftGrip_Pressure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightGrip_Pressure_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightGrip_Pressure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftGrip_Upper_Pressure_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftGrip_Upper_Pressure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightGrip_Upper_Pressure_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightGrip_Upper_Pressure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_Start_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_Start;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_Back_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_Back;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftPad_Touch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftPad_Touch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftPad_Swipe_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftPad_Swipe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftPad_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftPad_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftPad_Pressure_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftPad_Pressure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftPad_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftPad_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftPad_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftPad_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftPad_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftPad_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftPad_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftPad_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightPad_Touch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightPad_Touch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightPad_Swipe_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightPad_Swipe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightPad_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightPad_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightPad_Pressure_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightPad_Pressure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightPad_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightPad_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightPad_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightPad_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightPad_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightPad_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightPad_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightPad_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightTrigger_Pull_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightTrigger_Pull;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_RightTrigger_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_RightTrigger_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftStick_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftStick_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftStick_Click_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftStick_Click;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftStick_DPadNorth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftStick_DPadNorth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftStick_DPadSouth_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftStick_DPadSouth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftStick_DPadWest_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftStick_DPadWest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_LeftStick_DPadEast_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_LeftStick_DPadEast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_Gyro_Move_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_Gyro_Move;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_Gyro_Pitch_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_Gyro_Pitch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_Gyro_Yaw_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_Gyro_Yaw;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_SteamV2_Gyro_Roll_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_SteamV2_Gyro_Roll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EControllerActionOrigin_Count_steam_fb253aa6b5654893() {
  EControllerActionOrigin result;
  intgo _swig_go_result;
  
  
  result = k_EControllerActionOrigin_Count;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamControllerLEDFlag_SetColor_steam_fb253aa6b5654893() {
  ESteamControllerLEDFlag result;
  intgo _swig_go_result;
  
  
  result = k_ESteamControllerLEDFlag_SetColor;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamControllerLEDFlag_RestoreUserDefault_steam_fb253aa6b5654893() {
  ESteamControllerLEDFlag result;
  intgo _swig_go_result;
  
  
  result = k_ESteamControllerLEDFlag_RestoreUserDefault;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamInputType_Unknown_steam_fb253aa6b5654893() {
  ESteamInputType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamInputType_Unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamInputType_SteamController_steam_fb253aa6b5654893() {
  ESteamInputType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamInputType_SteamController;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamInputType_XBox360Controller_steam_fb253aa6b5654893() {
  ESteamInputType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamInputType_XBox360Controller;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamInputType_XBoxOneController_steam_fb253aa6b5654893() {
  ESteamInputType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamInputType_XBoxOneController;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamInputType_GenericXInput_steam_fb253aa6b5654893() {
  ESteamInputType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamInputType_GenericXInput;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamInputType_PS4Controller_steam_fb253aa6b5654893() {
  ESteamInputType result;
  intgo _swig_go_result;
  
  
  result = k_ESteamInputType_PS4Controller;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ControllerAnalogActionData_t_eMode_set_steam_fb253aa6b5654893(ControllerAnalogActionData_t *_swig_go_0, intgo _swig_go_1) {
  ControllerAnalogActionData_t *arg1 = (ControllerAnalogActionData_t *) 0 ;
  EControllerSourceMode arg2 ;
  
  arg1 = *(ControllerAnalogActionData_t **)&_swig_go_0; 
  arg2 = (EControllerSourceMode)_swig_go_1; 
  
  if (arg1) (arg1)->eMode = arg2;
  
}


intgo _wrap_ControllerAnalogActionData_t_eMode_get_steam_fb253aa6b5654893(ControllerAnalogActionData_t *_swig_go_0) {
  ControllerAnalogActionData_t *arg1 = (ControllerAnalogActionData_t *) 0 ;
  EControllerSourceMode result;
  intgo _swig_go_result;
  
  arg1 = *(ControllerAnalogActionData_t **)&_swig_go_0; 
  
  result = (EControllerSourceMode) ((arg1)->eMode);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ControllerAnalogActionData_t_x_set_steam_fb253aa6b5654893(ControllerAnalogActionData_t *_swig_go_0, float _swig_go_1) {
  ControllerAnalogActionData_t *arg1 = (ControllerAnalogActionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerAnalogActionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->x = arg2;
  
}


float _wrap_ControllerAnalogActionData_t_x_get_steam_fb253aa6b5654893(ControllerAnalogActionData_t *_swig_go_0) {
  ControllerAnalogActionData_t *arg1 = (ControllerAnalogActionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerAnalogActionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->x);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerAnalogActionData_t_y_set_steam_fb253aa6b5654893(ControllerAnalogActionData_t *_swig_go_0, float _swig_go_1) {
  ControllerAnalogActionData_t *arg1 = (ControllerAnalogActionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerAnalogActionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->y = arg2;
  
}


float _wrap_ControllerAnalogActionData_t_y_get_steam_fb253aa6b5654893(ControllerAnalogActionData_t *_swig_go_0) {
  ControllerAnalogActionData_t *arg1 = (ControllerAnalogActionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerAnalogActionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->y);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerAnalogActionData_t_bActive_set_steam_fb253aa6b5654893(ControllerAnalogActionData_t *_swig_go_0, bool _swig_go_1) {
  ControllerAnalogActionData_t *arg1 = (ControllerAnalogActionData_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(ControllerAnalogActionData_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bActive = arg2;
  
}


bool _wrap_ControllerAnalogActionData_t_bActive_get_steam_fb253aa6b5654893(ControllerAnalogActionData_t *_swig_go_0) {
  ControllerAnalogActionData_t *arg1 = (ControllerAnalogActionData_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ControllerAnalogActionData_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


ControllerAnalogActionData_t *_wrap_new_ControllerAnalogActionData_t_steam_fb253aa6b5654893() {
  ControllerAnalogActionData_t *result = 0 ;
  ControllerAnalogActionData_t *_swig_go_result;
  
  
  result = (ControllerAnalogActionData_t *)new ControllerAnalogActionData_t();
  *(ControllerAnalogActionData_t **)&_swig_go_result = (ControllerAnalogActionData_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ControllerAnalogActionData_t_steam_fb253aa6b5654893(ControllerAnalogActionData_t *_swig_go_0) {
  ControllerAnalogActionData_t *arg1 = (ControllerAnalogActionData_t *) 0 ;
  
  arg1 = *(ControllerAnalogActionData_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ControllerDigitalActionData_t_bState_set_steam_fb253aa6b5654893(ControllerDigitalActionData_t *_swig_go_0, bool _swig_go_1) {
  ControllerDigitalActionData_t *arg1 = (ControllerDigitalActionData_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(ControllerDigitalActionData_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bState = arg2;
  
}


bool _wrap_ControllerDigitalActionData_t_bState_get_steam_fb253aa6b5654893(ControllerDigitalActionData_t *_swig_go_0) {
  ControllerDigitalActionData_t *arg1 = (ControllerDigitalActionData_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ControllerDigitalActionData_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bState);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerDigitalActionData_t_bActive_set_steam_fb253aa6b5654893(ControllerDigitalActionData_t *_swig_go_0, bool _swig_go_1) {
  ControllerDigitalActionData_t *arg1 = (ControllerDigitalActionData_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(ControllerDigitalActionData_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bActive = arg2;
  
}


bool _wrap_ControllerDigitalActionData_t_bActive_get_steam_fb253aa6b5654893(ControllerDigitalActionData_t *_swig_go_0) {
  ControllerDigitalActionData_t *arg1 = (ControllerDigitalActionData_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ControllerDigitalActionData_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


ControllerDigitalActionData_t *_wrap_new_ControllerDigitalActionData_t_steam_fb253aa6b5654893() {
  ControllerDigitalActionData_t *result = 0 ;
  ControllerDigitalActionData_t *_swig_go_result;
  
  
  result = (ControllerDigitalActionData_t *)new ControllerDigitalActionData_t();
  *(ControllerDigitalActionData_t **)&_swig_go_result = (ControllerDigitalActionData_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ControllerDigitalActionData_t_steam_fb253aa6b5654893(ControllerDigitalActionData_t *_swig_go_0) {
  ControllerDigitalActionData_t *arg1 = (ControllerDigitalActionData_t *) 0 ;
  
  arg1 = *(ControllerDigitalActionData_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ControllerMotionData_t_rotQuatX_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->rotQuatX = arg2;
  
}


float _wrap_ControllerMotionData_t_rotQuatX_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->rotQuatX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerMotionData_t_rotQuatY_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->rotQuatY = arg2;
  
}


float _wrap_ControllerMotionData_t_rotQuatY_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->rotQuatY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerMotionData_t_rotQuatZ_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->rotQuatZ = arg2;
  
}


float _wrap_ControllerMotionData_t_rotQuatZ_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->rotQuatZ);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerMotionData_t_rotQuatW_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->rotQuatW = arg2;
  
}


float _wrap_ControllerMotionData_t_rotQuatW_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->rotQuatW);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerMotionData_t_posAccelX_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->posAccelX = arg2;
  
}


float _wrap_ControllerMotionData_t_posAccelX_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->posAccelX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerMotionData_t_posAccelY_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->posAccelY = arg2;
  
}


float _wrap_ControllerMotionData_t_posAccelY_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->posAccelY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerMotionData_t_posAccelZ_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->posAccelZ = arg2;
  
}


float _wrap_ControllerMotionData_t_posAccelZ_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->posAccelZ);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerMotionData_t_rotVelX_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->rotVelX = arg2;
  
}


float _wrap_ControllerMotionData_t_rotVelX_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->rotVelX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerMotionData_t_rotVelY_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->rotVelY = arg2;
  
}


float _wrap_ControllerMotionData_t_rotVelY_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->rotVelY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ControllerMotionData_t_rotVelZ_set_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0, float _swig_go_1) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->rotVelZ = arg2;
  
}


float _wrap_ControllerMotionData_t_rotVelZ_get_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->rotVelZ);
  _swig_go_result = result; 
  return _swig_go_result;
}


ControllerMotionData_t *_wrap_new_ControllerMotionData_t_steam_fb253aa6b5654893() {
  ControllerMotionData_t *result = 0 ;
  ControllerMotionData_t *_swig_go_result;
  
  
  result = (ControllerMotionData_t *)new ControllerMotionData_t();
  *(ControllerMotionData_t **)&_swig_go_result = (ControllerMotionData_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ControllerMotionData_t_steam_fb253aa6b5654893(ControllerMotionData_t *_swig_go_0) {
  ControllerMotionData_t *arg1 = (ControllerMotionData_t *) 0 ;
  
  arg1 = *(ControllerMotionData_t **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_ISteamController_Init_steam_fb253aa6b5654893(ISteamController *_swig_go_0) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  
  result = (bool)(arg1)->Init();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamController_Shutdown_steam_fb253aa6b5654893(ISteamController *_swig_go_0) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  
  result = (bool)(arg1)->Shutdown();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamController_RunFrame_steam_fb253aa6b5654893(ISteamController *_swig_go_0) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  
  (arg1)->RunFrame();
  
}


intgo _wrap_ISteamController_GetConnectedControllers_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long *_swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t *arg2 = (ControllerHandle_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = *(ControllerHandle_t **)&_swig_go_1; 
  
  result = (int)(arg1)->GetConnectedControllers(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamController_ShowBindingPanel_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  
  result = (bool)(arg1)->ShowBindingPanel(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamController_GetActionSetHandle_steam_fb253aa6b5654893(ISteamController *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  char *arg2 = (char *) 0 ;
  ControllerActionSetHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (ControllerActionSetHandle_t)(arg1)->GetActionSetHandle((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_ISteamController_ActivateActionSet_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerActionSetHandle_t arg3 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerActionSetHandle_t)_swig_go_2; 
  
  (arg1)->ActivateActionSet(arg2,arg3);
  
}


long long _wrap_ISteamController_GetCurrentActionSet_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerActionSetHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  
  result = (ControllerActionSetHandle_t)(arg1)->GetCurrentActionSet(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamController_ActivateActionSetLayer_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerActionSetHandle_t arg3 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerActionSetHandle_t)_swig_go_2; 
  
  (arg1)->ActivateActionSetLayer(arg2,arg3);
  
}


void _wrap_ISteamController_DeactivateActionSetLayer_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerActionSetHandle_t arg3 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerActionSetHandle_t)_swig_go_2; 
  
  (arg1)->DeactivateActionSetLayer(arg2,arg3);
  
}


void _wrap_ISteamController_DeactivateAllActionSetLayers_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  
  (arg1)->DeactivateAllActionSetLayers(arg2);
  
}


intgo _wrap_ISteamController_GetActiveActionSetLayers_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerActionSetHandle_t *arg3 = (ControllerActionSetHandle_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = *(ControllerActionSetHandle_t **)&_swig_go_2; 
  
  result = (int)(arg1)->GetActiveActionSetLayers(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamController_GetDigitalActionHandle_steam_fb253aa6b5654893(ISteamController *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  char *arg2 = (char *) 0 ;
  ControllerDigitalActionHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (ControllerDigitalActionHandle_t)(arg1)->GetDigitalActionHandle((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


ControllerDigitalActionData_t *_wrap_ISteamController_GetDigitalActionData_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerDigitalActionHandle_t arg3 ;
  ControllerDigitalActionData_t result;
  ControllerDigitalActionData_t *_swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerDigitalActionHandle_t)_swig_go_2; 
  
  result = (arg1)->GetDigitalActionData(arg2,arg3);
  *(ControllerDigitalActionData_t **)&_swig_go_result = new ControllerDigitalActionData_t(result); 
  return _swig_go_result;
}


intgo _wrap_ISteamController_GetDigitalActionOrigins_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, EControllerActionOrigin *_swig_go_4) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerActionSetHandle_t arg3 ;
  ControllerDigitalActionHandle_t arg4 ;
  EControllerActionOrigin *arg5 = (EControllerActionOrigin *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerActionSetHandle_t)_swig_go_2; 
  arg4 = (ControllerDigitalActionHandle_t)_swig_go_3; 
  arg5 = *(EControllerActionOrigin **)&_swig_go_4; 
  
  result = (int)(arg1)->GetDigitalActionOrigins(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamController_GetAnalogActionHandle_steam_fb253aa6b5654893(ISteamController *_swig_go_0, _gostring_ _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  char *arg2 = (char *) 0 ;
  ControllerAnalogActionHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (ControllerAnalogActionHandle_t)(arg1)->GetAnalogActionHandle((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


ControllerAnalogActionData_t *_wrap_ISteamController_GetAnalogActionData_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerAnalogActionHandle_t arg3 ;
  ControllerAnalogActionData_t result;
  ControllerAnalogActionData_t *_swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerAnalogActionHandle_t)_swig_go_2; 
  
  result = (arg1)->GetAnalogActionData(arg2,arg3);
  *(ControllerAnalogActionData_t **)&_swig_go_result = new ControllerAnalogActionData_t(result); 
  return _swig_go_result;
}


intgo _wrap_ISteamController_GetAnalogActionOrigins_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, EControllerActionOrigin *_swig_go_4) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerActionSetHandle_t arg3 ;
  ControllerAnalogActionHandle_t arg4 ;
  EControllerActionOrigin *arg5 = (EControllerActionOrigin *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerActionSetHandle_t)_swig_go_2; 
  arg4 = (ControllerAnalogActionHandle_t)_swig_go_3; 
  arg5 = *(EControllerActionOrigin **)&_swig_go_4; 
  
  result = (int)(arg1)->GetAnalogActionOrigins(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamController_StopAnalogActionMomentum_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerAnalogActionHandle_t arg3 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerAnalogActionHandle_t)_swig_go_2; 
  
  (arg1)->StopAnalogActionMomentum(arg2,arg3);
  
}


void _wrap_ISteamController_TriggerHapticPulse_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, short _swig_go_3) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ESteamControllerPad arg3 ;
  unsigned short arg4 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ESteamControllerPad)_swig_go_2; 
  arg4 = (unsigned short)_swig_go_3; 
  
  (arg1)->TriggerHapticPulse(arg2,arg3,arg4);
  
}


void _wrap_ISteamController_TriggerRepeatedHapticPulse_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, short _swig_go_3, short _swig_go_4, short _swig_go_5, intgo _swig_go_6) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ESteamControllerPad arg3 ;
  unsigned short arg4 ;
  unsigned short arg5 ;
  unsigned short arg6 ;
  unsigned int arg7 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ESteamControllerPad)_swig_go_2; 
  arg4 = (unsigned short)_swig_go_3; 
  arg5 = (unsigned short)_swig_go_4; 
  arg6 = (unsigned short)_swig_go_5; 
  arg7 = (unsigned int)_swig_go_6; 
  
  (arg1)->TriggerRepeatedHapticPulse(arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_ISteamController_TriggerVibration_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, short _swig_go_2, short _swig_go_3) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  unsigned short arg3 ;
  unsigned short arg4 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (unsigned short)_swig_go_2; 
  arg4 = (unsigned short)_swig_go_3; 
  
  (arg1)->TriggerVibration(arg2,arg3,arg4);
  
}


void _wrap_ISteamController_SetLEDColor_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, char _swig_go_2, char _swig_go_3, char _swig_go_4, intgo _swig_go_5) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  uint8 arg3 ;
  uint8 arg4 ;
  uint8 arg5 ;
  unsigned int arg6 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (uint8)_swig_go_2; 
  arg4 = (uint8)_swig_go_3; 
  arg5 = (uint8)_swig_go_4; 
  arg6 = (unsigned int)_swig_go_5; 
  
  (arg1)->SetLEDColor(arg2,arg3,arg4,arg5,arg6);
  
}


intgo _wrap_ISteamController_GetGamepadIndexForController_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  
  result = (int)(arg1)->GetGamepadIndexForController(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamController_GetControllerForGamepadIndex_steam_fb253aa6b5654893(ISteamController *_swig_go_0, intgo _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  int arg2 ;
  ControllerHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (ControllerHandle_t)(arg1)->GetControllerForGamepadIndex(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


ControllerMotionData_t *_wrap_ISteamController_GetMotionData_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerMotionData_t result;
  ControllerMotionData_t *_swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  
  result = (arg1)->GetMotionData(arg2);
  *(ControllerMotionData_t **)&_swig_go_result = new ControllerMotionData_t(result); 
  return _swig_go_result;
}


bool _wrap_ISteamController_ShowDigitalActionOrigins_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerDigitalActionHandle_t arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerDigitalActionHandle_t)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  result = (bool)(arg1)->ShowDigitalActionOrigins(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamController_ShowAnalogActionOrigins_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1, long long _swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ControllerAnalogActionHandle_t arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  arg3 = (ControllerAnalogActionHandle_t)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  result = (bool)(arg1)->ShowAnalogActionOrigins(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamController_GetStringForActionOrigin_steam_fb253aa6b5654893(ISteamController *_swig_go_0, intgo _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  EControllerActionOrigin arg2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (EControllerActionOrigin)_swig_go_1; 
  
  result = (char *)(arg1)->GetStringForActionOrigin(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_ISteamController_GetGlyphForActionOrigin_steam_fb253aa6b5654893(ISteamController *_swig_go_0, intgo _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  EControllerActionOrigin arg2 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (EControllerActionOrigin)_swig_go_1; 
  
  result = (char *)(arg1)->GetGlyphForActionOrigin(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_ISteamController_GetInputTypeForHandle_steam_fb253aa6b5654893(ISteamController *_swig_go_0, long long _swig_go_1) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  ControllerHandle_t arg2 ;
  ESteamInputType result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  arg2 = (ControllerHandle_t)_swig_go_1; 
  
  result = (ESteamInputType)(arg1)->GetInputTypeForHandle(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamController_steam_fb253aa6b5654893(ISteamController *_swig_go_0) {
  ISteamController *arg1 = (ISteamController *) 0 ;
  
  arg1 = *(ISteamController **)&_swig_go_0; 
  
  delete arg1;
  
}


long long _wrap_k_UGCQueryHandleInvalid_get_steam_fb253aa6b5654893() {
  UGCQueryHandle_t result;
  long long _swig_go_result;
  
  
  result = (UGCQueryHandle_t)(UGCQueryHandle_t)k_UGCQueryHandleInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_UGCUpdateHandleInvalid_get_steam_fb253aa6b5654893() {
  UGCUpdateHandle_t result;
  long long _swig_go_result;
  
  
  result = (UGCUpdateHandle_t)(UGCUpdateHandle_t)k_UGCUpdateHandleInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_Items_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_Items;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_Items_Mtx_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_Items_Mtx;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_Items_ReadyToUse_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_Items_ReadyToUse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_Collections_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_Collections;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_Artwork_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_Artwork;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_Videos_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_Videos;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_Screenshots_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_Screenshots;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_AllGuides_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_AllGuides;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_WebGuides_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_WebGuides;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_IntegratedGuides_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_IntegratedGuides;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_UsableInGame_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_UsableInGame;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_ControllerBindings_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_ControllerBindings;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_GameManagedItems_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_GameManagedItems;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCMatchingUGCType_All_steam_fb253aa6b5654893() {
  EUGCMatchingUGCType result;
  intgo _swig_go_result;
  
  
  result = k_EUGCMatchingUGCType_All;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCList_Published_steam_fb253aa6b5654893() {
  EUserUGCList result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCList_Published;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCList_VotedOn_steam_fb253aa6b5654893() {
  EUserUGCList result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCList_VotedOn;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCList_VotedUp_steam_fb253aa6b5654893() {
  EUserUGCList result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCList_VotedUp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCList_VotedDown_steam_fb253aa6b5654893() {
  EUserUGCList result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCList_VotedDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCList_WillVoteLater_steam_fb253aa6b5654893() {
  EUserUGCList result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCList_WillVoteLater;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCList_Favorited_steam_fb253aa6b5654893() {
  EUserUGCList result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCList_Favorited;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCList_Subscribed_steam_fb253aa6b5654893() {
  EUserUGCList result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCList_Subscribed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCList_UsedOrPlayed_steam_fb253aa6b5654893() {
  EUserUGCList result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCList_UsedOrPlayed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCList_Followed_steam_fb253aa6b5654893() {
  EUserUGCList result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCList_Followed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCListSortOrder_CreationOrderDesc_steam_fb253aa6b5654893() {
  EUserUGCListSortOrder result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCListSortOrder_CreationOrderDesc;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCListSortOrder_CreationOrderAsc_steam_fb253aa6b5654893() {
  EUserUGCListSortOrder result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCListSortOrder_CreationOrderAsc;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCListSortOrder_TitleAsc_steam_fb253aa6b5654893() {
  EUserUGCListSortOrder result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCListSortOrder_TitleAsc;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCListSortOrder_LastUpdatedDesc_steam_fb253aa6b5654893() {
  EUserUGCListSortOrder result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCListSortOrder_LastUpdatedDesc;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCListSortOrder_SubscriptionDateDesc_steam_fb253aa6b5654893() {
  EUserUGCListSortOrder result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCListSortOrder_SubscriptionDateDesc;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCListSortOrder_VoteScoreDesc_steam_fb253aa6b5654893() {
  EUserUGCListSortOrder result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCListSortOrder_VoteScoreDesc;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUserUGCListSortOrder_ForModeration_steam_fb253aa6b5654893() {
  EUserUGCListSortOrder result;
  intgo _swig_go_result;
  
  
  result = k_EUserUGCListSortOrder_ForModeration;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByVote_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByVote;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByPublicationDate_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByPublicationDate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_AcceptedForGameRankedByAcceptanceDate_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_AcceptedForGameRankedByAcceptanceDate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByTrend_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByTrend;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_FavoritedByFriendsRankedByPublicationDate_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_FavoritedByFriendsRankedByPublicationDate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_CreatedByFriendsRankedByPublicationDate_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_CreatedByFriendsRankedByPublicationDate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByNumTimesReported_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByNumTimesReported;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_CreatedByFollowedUsersRankedByPublicationDate_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_CreatedByFollowedUsersRankedByPublicationDate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_NotYetRated_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_NotYetRated;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByTotalVotesAsc_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByTotalVotesAsc;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByVotesUp_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByVotesUp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByTextSearch_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByTextSearch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByTotalUniqueSubscriptions_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByTotalUniqueSubscriptions;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByPlaytimeTrend_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByPlaytimeTrend;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByTotalPlaytime_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByTotalPlaytime;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByAveragePlaytimeTrend_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByAveragePlaytimeTrend;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByLifetimeAveragePlaytime_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByLifetimeAveragePlaytime;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByPlaytimeSessionsTrend_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByPlaytimeSessionsTrend;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EUGCQuery_RankedByLifetimePlaytimeSessions_steam_fb253aa6b5654893() {
  EUGCQuery result;
  intgo _swig_go_result;
  
  
  result = k_EUGCQuery_RankedByLifetimePlaytimeSessions;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemUpdateStatusInvalid_steam_fb253aa6b5654893() {
  EItemUpdateStatus result;
  intgo _swig_go_result;
  
  
  result = k_EItemUpdateStatusInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemUpdateStatusPreparingConfig_steam_fb253aa6b5654893() {
  EItemUpdateStatus result;
  intgo _swig_go_result;
  
  
  result = k_EItemUpdateStatusPreparingConfig;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemUpdateStatusPreparingContent_steam_fb253aa6b5654893() {
  EItemUpdateStatus result;
  intgo _swig_go_result;
  
  
  result = k_EItemUpdateStatusPreparingContent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemUpdateStatusUploadingContent_steam_fb253aa6b5654893() {
  EItemUpdateStatus result;
  intgo _swig_go_result;
  
  
  result = k_EItemUpdateStatusUploadingContent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemUpdateStatusUploadingPreviewFile_steam_fb253aa6b5654893() {
  EItemUpdateStatus result;
  intgo _swig_go_result;
  
  
  result = k_EItemUpdateStatusUploadingPreviewFile;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemUpdateStatusCommittingChanges_steam_fb253aa6b5654893() {
  EItemUpdateStatus result;
  intgo _swig_go_result;
  
  
  result = k_EItemUpdateStatusCommittingChanges;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStateNone_steam_fb253aa6b5654893() {
  EItemState result;
  intgo _swig_go_result;
  
  
  result = k_EItemStateNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStateSubscribed_steam_fb253aa6b5654893() {
  EItemState result;
  intgo _swig_go_result;
  
  
  result = k_EItemStateSubscribed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStateLegacyItem_steam_fb253aa6b5654893() {
  EItemState result;
  intgo _swig_go_result;
  
  
  result = k_EItemStateLegacyItem;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStateInstalled_steam_fb253aa6b5654893() {
  EItemState result;
  intgo _swig_go_result;
  
  
  result = k_EItemStateInstalled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStateNeedsUpdate_steam_fb253aa6b5654893() {
  EItemState result;
  intgo _swig_go_result;
  
  
  result = k_EItemStateNeedsUpdate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStateDownloading_steam_fb253aa6b5654893() {
  EItemState result;
  intgo _swig_go_result;
  
  
  result = k_EItemStateDownloading;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStateDownloadPending_steam_fb253aa6b5654893() {
  EItemState result;
  intgo _swig_go_result;
  
  
  result = k_EItemStateDownloadPending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumSubscriptions_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumSubscriptions;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumFavorites_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumFavorites;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumFollowers_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumFollowers;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumUniqueSubscriptions_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumUniqueSubscriptions;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumUniqueFavorites_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumUniqueFavorites;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumUniqueFollowers_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumUniqueFollowers;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumUniqueWebsiteViews_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumUniqueWebsiteViews;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_ReportScore_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_ReportScore;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumSecondsPlayed_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumSecondsPlayed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumPlaytimeSessions_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumPlaytimeSessions;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumComments_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumComments;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumSecondsPlayedDuringTimePeriod_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumSecondsPlayedDuringTimePeriod;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemStatistic_NumPlaytimeSessionsDuringTimePeriod_steam_fb253aa6b5654893() {
  EItemStatistic result;
  intgo _swig_go_result;
  
  
  result = k_EItemStatistic_NumPlaytimeSessionsDuringTimePeriod;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemPreviewType_Image_steam_fb253aa6b5654893() {
  EItemPreviewType result;
  intgo _swig_go_result;
  
  
  result = k_EItemPreviewType_Image;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemPreviewType_YouTubeVideo_steam_fb253aa6b5654893() {
  EItemPreviewType result;
  intgo _swig_go_result;
  
  
  result = k_EItemPreviewType_YouTubeVideo;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemPreviewType_Sketchfab_steam_fb253aa6b5654893() {
  EItemPreviewType result;
  intgo _swig_go_result;
  
  
  result = k_EItemPreviewType_Sketchfab;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemPreviewType_EnvironmentMap_HorizontalCross_steam_fb253aa6b5654893() {
  EItemPreviewType result;
  intgo _swig_go_result;
  
  
  result = k_EItemPreviewType_EnvironmentMap_HorizontalCross;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemPreviewType_EnvironmentMap_LatLong_steam_fb253aa6b5654893() {
  EItemPreviewType result;
  intgo _swig_go_result;
  
  
  result = k_EItemPreviewType_EnvironmentMap_LatLong;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EItemPreviewType_ReservedMax_steam_fb253aa6b5654893() {
  EItemPreviewType result;
  intgo _swig_go_result;
  
  
  result = k_EItemPreviewType_ReservedMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kNumUGCResultsPerPage_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)kNumUGCResultsPerPage;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_cchDeveloperMetadataMax_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)k_cchDeveloperMetadataMax;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, long long _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_SteamUGCDetails_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_eResult_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_eResult_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_eFileType_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  EWorkshopFileType arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (EWorkshopFileType)_swig_go_1; 
  
  if (arg1) (arg1)->m_eFileType = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_eFileType_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  EWorkshopFileType result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (EWorkshopFileType) ((arg1)->m_eFileType);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_nCreatorAppID_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nCreatorAppID = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_nCreatorAppID_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nCreatorAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_nConsumerAppID_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nConsumerAppID = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_nConsumerAppID_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nConsumerAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_rgchTitle_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, _gostring_ _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchTitle, (const char *)arg2, k_cchPublishedDocumentTitleMax-1);
      arg1->m_rgchTitle[k_cchPublishedDocumentTitleMax-1] = 0;
    } else {
      arg1->m_rgchTitle[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_SteamUGCDetails_t_m_rgchTitle_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchTitle);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_rgchDescription_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, _gostring_ _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchDescription, (const char *)arg2, k_cchPublishedDocumentDescriptionMax-1);
      arg1->m_rgchDescription[k_cchPublishedDocumentDescriptionMax-1] = 0;
    } else {
      arg1->m_rgchDescription[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_SteamUGCDetails_t_m_rgchDescription_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchDescription);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_ulSteamIDOwner_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, long long _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulSteamIDOwner = arg2;
  
}


long long _wrap_SteamUGCDetails_t_m_ulSteamIDOwner_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulSteamIDOwner);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_rtimeCreated_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_rtimeCreated = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_rtimeCreated_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_rtimeCreated);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_rtimeUpdated_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_rtimeUpdated = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_rtimeUpdated_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_rtimeUpdated);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_rtimeAddedToUserList_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_rtimeAddedToUserList = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_rtimeAddedToUserList_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_rtimeAddedToUserList);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_eVisibility_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  ERemoteStoragePublishedFileVisibility arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (ERemoteStoragePublishedFileVisibility)_swig_go_1; 
  
  if (arg1) (arg1)->m_eVisibility = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_eVisibility_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  ERemoteStoragePublishedFileVisibility result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (ERemoteStoragePublishedFileVisibility) ((arg1)->m_eVisibility);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_bBanned_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, bool _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bBanned = arg2;
  
}


bool _wrap_SteamUGCDetails_t_m_bBanned_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bBanned);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_bAcceptedForUse_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, bool _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bAcceptedForUse = arg2;
  
}


bool _wrap_SteamUGCDetails_t_m_bAcceptedForUse_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bAcceptedForUse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_bTagsTruncated_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, bool _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bTagsTruncated = arg2;
  
}


bool _wrap_SteamUGCDetails_t_m_bTagsTruncated_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bTagsTruncated);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_rgchTags_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, _gostring_ _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchTags, (const char *)arg2, k_cchTagListMax-1);
      arg1->m_rgchTags[k_cchTagListMax-1] = 0;
    } else {
      arg1->m_rgchTags[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_SteamUGCDetails_t_m_rgchTags_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchTags);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_hFile_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, long long _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  UGCHandle_t arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hFile = arg2;
  
}


long long _wrap_SteamUGCDetails_t_m_hFile_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  UGCHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (UGCHandle_t) ((arg1)->m_hFile);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_hPreviewFile_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, long long _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  UGCHandle_t arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (UGCHandle_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_hPreviewFile = arg2;
  
}


long long _wrap_SteamUGCDetails_t_m_hPreviewFile_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  UGCHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (UGCHandle_t) ((arg1)->m_hPreviewFile);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_pchFileName_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, _gostring_ _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pchFileName, (const char *)arg2, k_cchFilenameMax-1);
      arg1->m_pchFileName[k_cchFilenameMax-1] = 0;
    } else {
      arg1->m_pchFileName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_SteamUGCDetails_t_m_pchFileName_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pchFileName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_nFileSize_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nFileSize = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_nFileSize_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nFileSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_nPreviewFileSize_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  int32 arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (int32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPreviewFileSize = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_nPreviewFileSize_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  int32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (int32) ((arg1)->m_nPreviewFileSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_rgchURL_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, _gostring_ _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchURL, (const char *)arg2, k_cchPublishedFileURLMax-1);
      arg1->m_rgchURL[k_cchPublishedFileURLMax-1] = 0;
    } else {
      arg1->m_rgchURL[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_SteamUGCDetails_t_m_rgchURL_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_unVotesUp_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unVotesUp = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_unVotesUp_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unVotesUp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_unVotesDown_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unVotesDown = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_unVotesDown_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unVotesDown);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_flScore_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, float _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  float arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_flScore = arg2;
  
}


float _wrap_SteamUGCDetails_t_m_flScore_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_flScore);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCDetails_t_m_unNumChildren_set_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unNumChildren = arg2;
  
}


intgo _wrap_SteamUGCDetails_t_m_unNumChildren_get_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unNumChildren);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamUGCDetails_t *_wrap_new_SteamUGCDetails_t_steam_fb253aa6b5654893() {
  SteamUGCDetails_t *result = 0 ;
  SteamUGCDetails_t *_swig_go_result;
  
  
  result = (SteamUGCDetails_t *)new SteamUGCDetails_t();
  *(SteamUGCDetails_t **)&_swig_go_result = (SteamUGCDetails_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamUGCDetails_t_steam_fb253aa6b5654893(SteamUGCDetails_t *_swig_go_0) {
  SteamUGCDetails_t *arg1 = (SteamUGCDetails_t *) 0 ;
  
  arg1 = *(SteamUGCDetails_t **)&_swig_go_0; 
  
  delete arg1;
  
}


long long _wrap_ISteamUGC_CreateQueryUserUGCRequest_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6, intgo _swig_go_7) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  AccountID_t arg2 ;
  EUserUGCList arg3 ;
  EUGCMatchingUGCType arg4 ;
  EUserUGCListSortOrder arg5 ;
  AppId_t arg6 ;
  AppId_t arg7 ;
  uint32 arg8 ;
  UGCQueryHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (AccountID_t)_swig_go_1; 
  arg3 = (EUserUGCList)_swig_go_2; 
  arg4 = (EUGCMatchingUGCType)_swig_go_3; 
  arg5 = (EUserUGCListSortOrder)_swig_go_4; 
  arg6 = (AppId_t)_swig_go_5; 
  arg7 = (AppId_t)_swig_go_6; 
  arg8 = (uint32)_swig_go_7; 
  
  result = (UGCQueryHandle_t)(arg1)->CreateQueryUserUGCRequest(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_CreateQueryAllUGCRequest_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  EUGCQuery arg2 ;
  EUGCMatchingUGCType arg3 ;
  AppId_t arg4 ;
  AppId_t arg5 ;
  uint32 arg6 ;
  UGCQueryHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (EUGCQuery)_swig_go_1; 
  arg3 = (EUGCMatchingUGCType)_swig_go_2; 
  arg4 = (AppId_t)_swig_go_3; 
  arg5 = (AppId_t)_swig_go_4; 
  arg6 = (uint32)_swig_go_5; 
  
  result = (UGCQueryHandle_t)(arg1)->CreateQueryAllUGCRequest(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_CreateQueryUGCDetailsRequest_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long *_swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t *arg2 = (PublishedFileId_t *) 0 ;
  uint32 arg3 ;
  UGCQueryHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = *(PublishedFileId_t **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (UGCQueryHandle_t)(arg1)->CreateQueryUGCDetailsRequest(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_SendQueryUGCRequest_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->SendQueryUGCRequest(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_GetQueryUGCResult_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, SteamUGCDetails_t *_swig_go_3) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  SteamUGCDetails_t *arg4 = (SteamUGCDetails_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = *(SteamUGCDetails_t **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetQueryUGCResult(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_GetQueryUGCPreviewURL_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  char *arg4 = (char *) 0 ;
  uint32 arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (uint32)_swig_go_4; 
  
  result = (bool)(arg1)->GetQueryUGCPreviewURL(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_GetQueryUGCMetadata_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  char *arg4 = (char *) 0 ;
  uint32 arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (uint32)_swig_go_4; 
  
  result = (bool)(arg1)->GetQueryUGCMetadata(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_GetQueryUGCChildren_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, long long *_swig_go_3, intgo _swig_go_4) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  PublishedFileId_t *arg4 = (PublishedFileId_t *) 0 ;
  uint32 arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = *(PublishedFileId_t **)&_swig_go_3; 
  arg5 = (uint32)_swig_go_4; 
  
  result = (bool)(arg1)->GetQueryUGCChildren(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_GetQueryUGCStatistic_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, long long *_swig_go_4) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  EItemStatistic arg4 ;
  uint64 *arg5 = (uint64 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (EItemStatistic)_swig_go_3; 
  arg5 = *(uint64 **)&_swig_go_4; 
  
  result = (bool)(arg1)->GetQueryUGCStatistic(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUGC_GetQueryUGCNumAdditionalPreviews_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (uint32)(arg1)->GetQueryUGCNumAdditionalPreviews(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_GetQueryUGCAdditionalPreview_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, intgo _swig_go_7, EItemPreviewType *_swig_go_8) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  uint32 arg4 ;
  char *arg5 = (char *) 0 ;
  uint32 arg6 ;
  char *arg7 = (char *) 0 ;
  uint32 arg8 ;
  EItemPreviewType *arg9 = (EItemPreviewType *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (uint32)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (uint32)_swig_go_7; 
  arg9 = *(EItemPreviewType **)&_swig_go_8; 
  
  result = (bool)(arg1)->GetQueryUGCAdditionalPreview(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  _swig_go_result = result; 
  free(arg5); 
  free(arg7); 
  return _swig_go_result;
}


intgo _wrap_ISteamUGC_GetQueryUGCNumKeyValueTags_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (uint32)(arg1)->GetQueryUGCNumKeyValueTags(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_GetQueryUGCKeyValueTag_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, intgo _swig_go_7) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  uint32 arg4 ;
  char *arg5 = (char *) 0 ;
  uint32 arg6 ;
  char *arg7 = (char *) 0 ;
  uint32 arg8 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (uint32)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (uint32)_swig_go_7; 
  
  result = (bool)(arg1)->GetQueryUGCKeyValueTag(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  free(arg5); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_ReleaseQueryUGCRequest_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  
  result = (bool)(arg1)->ReleaseQueryUGCRequest(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_AddRequiredTag_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->AddRequiredTag(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_AddExcludedTag_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->AddExcludedTag(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetReturnOnlyIDs_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetReturnOnlyIDs(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetReturnKeyValueTags_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetReturnKeyValueTags(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetReturnLongDescription_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetReturnLongDescription(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetReturnMetadata_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetReturnMetadata(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetReturnChildren_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetReturnChildren(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetReturnAdditionalPreviews_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetReturnAdditionalPreviews(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetReturnTotalOnly_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetReturnTotalOnly(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetReturnPlaytimeStats_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (bool)(arg1)->SetReturnPlaytimeStats(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetLanguage_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetLanguage(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetAllowCachedResponse_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (bool)(arg1)->SetAllowCachedResponse(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetCloudFileNameFilter_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetCloudFileNameFilter(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetMatchAnyTag_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->SetMatchAnyTag(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetSearchText_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetSearchText(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetRankedByTrendDays_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  uint32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (bool)(arg1)->SetRankedByTrendDays(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_AddRequiredKeyValueTag_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCQueryHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->AddRequiredKeyValueTag(arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_RequestUGCDetails_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  uint32 arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->RequestUGCDetails(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_CreateItem_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  AppId_t arg2 ;
  EWorkshopFileType arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = (EWorkshopFileType)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->CreateItem(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_StartItemUpdate_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, intgo _swig_go_1, long long _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  AppId_t arg2 ;
  PublishedFileId_t arg3 ;
  UGCUpdateHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = (PublishedFileId_t)_swig_go_2; 
  
  result = (UGCUpdateHandle_t)(arg1)->StartItemUpdate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetItemTitle_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetItemTitle(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetItemDescription_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetItemDescription(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetItemUpdateLanguage_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetItemUpdateLanguage(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetItemMetadata_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetItemMetadata(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetItemVisibility_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  ERemoteStoragePublishedFileVisibility arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  arg3 = (ERemoteStoragePublishedFileVisibility)_swig_go_2; 
  
  result = (bool)(arg1)->SetItemVisibility(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetItemTags_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, SteamParamStringArray_t *_swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  SteamParamStringArray_t *arg3 = (SteamParamStringArray_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  arg3 = *(SteamParamStringArray_t **)&_swig_go_2; 
  
  result = (bool)(arg1)->SetItemTags(arg2,(SteamParamStringArray_t const *)arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetItemContent_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetItemContent(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_SetItemPreview_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->SetItemPreview(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_RemoveItemKeyValueTags_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->RemoveItemKeyValueTags(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_AddItemKeyValueTag_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->AddItemKeyValueTag(arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_AddItemPreviewFile_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  EItemPreviewType arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (EItemPreviewType)_swig_go_3; 
  
  result = (bool)(arg1)->AddItemPreviewFile(arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_AddItemPreviewVideo_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->AddItemPreviewVideo(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_UpdateItemPreviewFile_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  uint32 arg3 ;
  char *arg4 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->UpdateItemPreviewFile(arg2,arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_UpdateItemPreviewVideo_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  uint32 arg3 ;
  char *arg4 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->UpdateItemPreviewVideo(arg2,arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_RemoveItemPreview_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  uint32 arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (bool)(arg1)->RemoveItemPreview(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_SubmitItemUpdate_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  char *arg3 = (char *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (SteamAPICall_t)(arg1)->SubmitItemUpdate(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_ISteamUGC_GetItemUpdateProgress_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, long long *_swig_go_2, long long *_swig_go_3) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  UGCUpdateHandle_t arg2 ;
  uint64 *arg3 = (uint64 *) 0 ;
  uint64 *arg4 = (uint64 *) 0 ;
  EItemUpdateStatus result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (UGCUpdateHandle_t)_swig_go_1; 
  arg3 = *(uint64 **)&_swig_go_2; 
  arg4 = *(uint64 **)&_swig_go_3; 
  
  result = (EItemUpdateStatus)(arg1)->GetItemUpdateProgress(arg2,arg3,arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_SetUserItemVote_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  bool arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->SetUserItemVote(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_GetUserItemVote_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->GetUserItemVote(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_AddItemToFavorites_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, intgo _swig_go_1, long long _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  AppId_t arg2 ;
  PublishedFileId_t arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = (PublishedFileId_t)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->AddItemToFavorites(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_RemoveItemFromFavorites_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, intgo _swig_go_1, long long _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  AppId_t arg2 ;
  PublishedFileId_t arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  arg3 = (PublishedFileId_t)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->RemoveItemFromFavorites(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_SubscribeItem_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->SubscribeItem(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_UnsubscribeItem_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->UnsubscribeItem(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUGC_GetNumSubscribedItems_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetNumSubscribedItems();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUGC_GetSubscribedItems_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long *_swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t *arg2 = (PublishedFileId_t *) 0 ;
  uint32 arg3 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = *(PublishedFileId_t **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (uint32)(arg1)->GetSubscribedItems(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamUGC_GetItemState_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (uint32)(arg1)->GetItemState(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_GetItemInstallInfo_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, long long *_swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4, intgo *_swig_go_5) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  uint64 *arg3 = (uint64 *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32 arg5 ;
  uint32 *arg6 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = *(uint64 **)&_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (uint32)_swig_go_4; 
  arg6 = *(uint32 **)&_swig_go_5; 
  
  result = (bool)(arg1)->GetItemInstallInfo(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_GetItemDownloadInfo_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, long long *_swig_go_2, long long *_swig_go_3) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  uint64 *arg3 = (uint64 *) 0 ;
  uint64 *arg4 = (uint64 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = *(uint64 **)&_swig_go_2; 
  arg4 = *(uint64 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetItemDownloadInfo(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_DownloadItem_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, bool _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)(arg1)->DownloadItem(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamUGC_BInitWorkshopForGameServer_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  DepotId_t arg2 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (DepotId_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)(arg1)->BInitWorkshopForGameServer(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


void _wrap_ISteamUGC_SuspendDownloads_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, bool _swig_go_1) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  bool arg2 ;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->SuspendDownloads(arg2);
  
}


long long _wrap_ISteamUGC_StartPlaytimeTracking_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long *_swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t *arg2 = (PublishedFileId_t *) 0 ;
  uint32 arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = *(PublishedFileId_t **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->StartPlaytimeTracking(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_StopPlaytimeTracking_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long *_swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t *arg2 = (PublishedFileId_t *) 0 ;
  uint32 arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = *(PublishedFileId_t **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->StopPlaytimeTracking(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_StopPlaytimeTrackingForAllItems_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  
  result = (SteamAPICall_t)(arg1)->StopPlaytimeTrackingForAllItems();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_AddDependency_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  PublishedFileId_t arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (PublishedFileId_t)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->AddDependency(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_RemoveDependency_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  PublishedFileId_t arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (PublishedFileId_t)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->RemoveDependency(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_AddAppDependency_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  AppId_t arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (AppId_t)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->AddAppDependency(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_RemoveAppDependency_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  AppId_t arg3 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  arg3 = (AppId_t)_swig_go_2; 
  
  result = (SteamAPICall_t)(arg1)->RemoveAppDependency(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_GetAppDependencies_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->GetAppDependencies(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamUGC_DeleteItem_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0, long long _swig_go_1) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  PublishedFileId_t arg2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  result = (SteamAPICall_t)(arg1)->DeleteItem(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamUGC_steam_fb253aa6b5654893(ISteamUGC *_swig_go_0) {
  ISteamUGC *arg1 = (ISteamUGC *) 0 ;
  
  arg1 = *(ISteamUGC **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamUGCQueryCompleted_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamUGCQueryCompleted_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamUGCQueryCompleted_t_m_handle_set_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0, long long _swig_go_1) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  UGCQueryHandle_t arg2 ;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  arg2 = (UGCQueryHandle_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_handle = arg2;
  
}


long long _wrap_SteamUGCQueryCompleted_t_m_handle_get_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  UGCQueryHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  
  result = (UGCQueryHandle_t) ((arg1)->m_handle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCQueryCompleted_t_m_eResult_set_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_SteamUGCQueryCompleted_t_m_eResult_get_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamUGCQueryCompleted_t_m_unNumResultsReturned_set_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unNumResultsReturned = arg2;
  
}


intgo _wrap_SteamUGCQueryCompleted_t_m_unNumResultsReturned_get_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unNumResultsReturned);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCQueryCompleted_t_m_unTotalMatchingResults_set_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0, intgo _swig_go_1) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_unTotalMatchingResults = arg2;
  
}


intgo _wrap_SteamUGCQueryCompleted_t_m_unTotalMatchingResults_get_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_unTotalMatchingResults);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamUGCQueryCompleted_t_m_bCachedData_set_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0, bool _swig_go_1) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bCachedData = arg2;
  
}


bool _wrap_SteamUGCQueryCompleted_t_m_bCachedData_get_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bCachedData);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamUGCQueryCompleted_t *_wrap_new_SteamUGCQueryCompleted_t_steam_fb253aa6b5654893() {
  SteamUGCQueryCompleted_t *result = 0 ;
  SteamUGCQueryCompleted_t *_swig_go_result;
  
  
  result = (SteamUGCQueryCompleted_t *)new SteamUGCQueryCompleted_t();
  *(SteamUGCQueryCompleted_t **)&_swig_go_result = (SteamUGCQueryCompleted_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamUGCQueryCompleted_t_steam_fb253aa6b5654893(SteamUGCQueryCompleted_t *_swig_go_0) {
  SteamUGCQueryCompleted_t *arg1 = (SteamUGCQueryCompleted_t *) 0 ;
  
  arg1 = *(SteamUGCQueryCompleted_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamUGCRequestUGCDetailsResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamUGCRequestUGCDetailsResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamUGCRequestUGCDetailsResult_t_m_details_set_steam_fb253aa6b5654893(SteamUGCRequestUGCDetailsResult_t *_swig_go_0, SteamUGCDetails_t *_swig_go_1) {
  SteamUGCRequestUGCDetailsResult_t *arg1 = (SteamUGCRequestUGCDetailsResult_t *) 0 ;
  SteamUGCDetails_t *arg2 = (SteamUGCDetails_t *) 0 ;
  
  arg1 = *(SteamUGCRequestUGCDetailsResult_t **)&_swig_go_0; 
  arg2 = *(SteamUGCDetails_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_details = *arg2;
  
}


SteamUGCDetails_t *_wrap_SteamUGCRequestUGCDetailsResult_t_m_details_get_steam_fb253aa6b5654893(SteamUGCRequestUGCDetailsResult_t *_swig_go_0) {
  SteamUGCRequestUGCDetailsResult_t *arg1 = (SteamUGCRequestUGCDetailsResult_t *) 0 ;
  SteamUGCDetails_t *result = 0 ;
  SteamUGCDetails_t *_swig_go_result;
  
  arg1 = *(SteamUGCRequestUGCDetailsResult_t **)&_swig_go_0; 
  
  result = (SteamUGCDetails_t *)& ((arg1)->m_details);
  *(SteamUGCDetails_t **)&_swig_go_result = (SteamUGCDetails_t *)result; 
  return _swig_go_result;
}


void _wrap_SteamUGCRequestUGCDetailsResult_t_m_bCachedData_set_steam_fb253aa6b5654893(SteamUGCRequestUGCDetailsResult_t *_swig_go_0, bool _swig_go_1) {
  SteamUGCRequestUGCDetailsResult_t *arg1 = (SteamUGCRequestUGCDetailsResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SteamUGCRequestUGCDetailsResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bCachedData = arg2;
  
}


bool _wrap_SteamUGCRequestUGCDetailsResult_t_m_bCachedData_get_steam_fb253aa6b5654893(SteamUGCRequestUGCDetailsResult_t *_swig_go_0) {
  SteamUGCRequestUGCDetailsResult_t *arg1 = (SteamUGCRequestUGCDetailsResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SteamUGCRequestUGCDetailsResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bCachedData);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamUGCRequestUGCDetailsResult_t *_wrap_new_SteamUGCRequestUGCDetailsResult_t_steam_fb253aa6b5654893() {
  SteamUGCRequestUGCDetailsResult_t *result = 0 ;
  SteamUGCRequestUGCDetailsResult_t *_swig_go_result;
  
  
  result = (SteamUGCRequestUGCDetailsResult_t *)new SteamUGCRequestUGCDetailsResult_t();
  *(SteamUGCRequestUGCDetailsResult_t **)&_swig_go_result = (SteamUGCRequestUGCDetailsResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamUGCRequestUGCDetailsResult_t_steam_fb253aa6b5654893(SteamUGCRequestUGCDetailsResult_t *_swig_go_0) {
  SteamUGCRequestUGCDetailsResult_t *arg1 = (SteamUGCRequestUGCDetailsResult_t *) 0 ;
  
  arg1 = *(SteamUGCRequestUGCDetailsResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_CreateItemResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = CreateItemResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_CreateItemResult_t_m_eResult_set_steam_fb253aa6b5654893(CreateItemResult_t *_swig_go_0, intgo _swig_go_1) {
  CreateItemResult_t *arg1 = (CreateItemResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(CreateItemResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_CreateItemResult_t_m_eResult_get_steam_fb253aa6b5654893(CreateItemResult_t *_swig_go_0) {
  CreateItemResult_t *arg1 = (CreateItemResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(CreateItemResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_CreateItemResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(CreateItemResult_t *_swig_go_0, long long _swig_go_1) {
  CreateItemResult_t *arg1 = (CreateItemResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(CreateItemResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_CreateItemResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(CreateItemResult_t *_swig_go_0) {
  CreateItemResult_t *arg1 = (CreateItemResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(CreateItemResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CreateItemResult_t_m_bUserNeedsToAcceptWorkshopLegalAgreement_set_steam_fb253aa6b5654893(CreateItemResult_t *_swig_go_0, bool _swig_go_1) {
  CreateItemResult_t *arg1 = (CreateItemResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(CreateItemResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bUserNeedsToAcceptWorkshopLegalAgreement = arg2;
  
}


bool _wrap_CreateItemResult_t_m_bUserNeedsToAcceptWorkshopLegalAgreement_get_steam_fb253aa6b5654893(CreateItemResult_t *_swig_go_0) {
  CreateItemResult_t *arg1 = (CreateItemResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(CreateItemResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bUserNeedsToAcceptWorkshopLegalAgreement);
  _swig_go_result = result; 
  return _swig_go_result;
}


CreateItemResult_t *_wrap_new_CreateItemResult_t_steam_fb253aa6b5654893() {
  CreateItemResult_t *result = 0 ;
  CreateItemResult_t *_swig_go_result;
  
  
  result = (CreateItemResult_t *)new CreateItemResult_t();
  *(CreateItemResult_t **)&_swig_go_result = (CreateItemResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_CreateItemResult_t_steam_fb253aa6b5654893(CreateItemResult_t *_swig_go_0) {
  CreateItemResult_t *arg1 = (CreateItemResult_t *) 0 ;
  
  arg1 = *(CreateItemResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SubmitItemUpdateResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SubmitItemUpdateResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SubmitItemUpdateResult_t_m_eResult_set_steam_fb253aa6b5654893(SubmitItemUpdateResult_t *_swig_go_0, intgo _swig_go_1) {
  SubmitItemUpdateResult_t *arg1 = (SubmitItemUpdateResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SubmitItemUpdateResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_SubmitItemUpdateResult_t_m_eResult_get_steam_fb253aa6b5654893(SubmitItemUpdateResult_t *_swig_go_0) {
  SubmitItemUpdateResult_t *arg1 = (SubmitItemUpdateResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SubmitItemUpdateResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SubmitItemUpdateResult_t_m_bUserNeedsToAcceptWorkshopLegalAgreement_set_steam_fb253aa6b5654893(SubmitItemUpdateResult_t *_swig_go_0, bool _swig_go_1) {
  SubmitItemUpdateResult_t *arg1 = (SubmitItemUpdateResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SubmitItemUpdateResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bUserNeedsToAcceptWorkshopLegalAgreement = arg2;
  
}


bool _wrap_SubmitItemUpdateResult_t_m_bUserNeedsToAcceptWorkshopLegalAgreement_get_steam_fb253aa6b5654893(SubmitItemUpdateResult_t *_swig_go_0) {
  SubmitItemUpdateResult_t *arg1 = (SubmitItemUpdateResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SubmitItemUpdateResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bUserNeedsToAcceptWorkshopLegalAgreement);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SubmitItemUpdateResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(SubmitItemUpdateResult_t *_swig_go_0, long long _swig_go_1) {
  SubmitItemUpdateResult_t *arg1 = (SubmitItemUpdateResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(SubmitItemUpdateResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_SubmitItemUpdateResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(SubmitItemUpdateResult_t *_swig_go_0) {
  SubmitItemUpdateResult_t *arg1 = (SubmitItemUpdateResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(SubmitItemUpdateResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


SubmitItemUpdateResult_t *_wrap_new_SubmitItemUpdateResult_t_steam_fb253aa6b5654893() {
  SubmitItemUpdateResult_t *result = 0 ;
  SubmitItemUpdateResult_t *_swig_go_result;
  
  
  result = (SubmitItemUpdateResult_t *)new SubmitItemUpdateResult_t();
  *(SubmitItemUpdateResult_t **)&_swig_go_result = (SubmitItemUpdateResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SubmitItemUpdateResult_t_steam_fb253aa6b5654893(SubmitItemUpdateResult_t *_swig_go_0) {
  SubmitItemUpdateResult_t *arg1 = (SubmitItemUpdateResult_t *) 0 ;
  
  arg1 = *(SubmitItemUpdateResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_ItemInstalled_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = ItemInstalled_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ItemInstalled_t_m_unAppID_set_steam_fb253aa6b5654893(ItemInstalled_t *_swig_go_0, intgo _swig_go_1) {
  ItemInstalled_t *arg1 = (ItemInstalled_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(ItemInstalled_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_unAppID = arg2;
  
}


intgo _wrap_ItemInstalled_t_m_unAppID_get_steam_fb253aa6b5654893(ItemInstalled_t *_swig_go_0) {
  ItemInstalled_t *arg1 = (ItemInstalled_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(ItemInstalled_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_unAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ItemInstalled_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(ItemInstalled_t *_swig_go_0, long long _swig_go_1) {
  ItemInstalled_t *arg1 = (ItemInstalled_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(ItemInstalled_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_ItemInstalled_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(ItemInstalled_t *_swig_go_0) {
  ItemInstalled_t *arg1 = (ItemInstalled_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(ItemInstalled_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


ItemInstalled_t *_wrap_new_ItemInstalled_t_steam_fb253aa6b5654893() {
  ItemInstalled_t *result = 0 ;
  ItemInstalled_t *_swig_go_result;
  
  
  result = (ItemInstalled_t *)new ItemInstalled_t();
  *(ItemInstalled_t **)&_swig_go_result = (ItemInstalled_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ItemInstalled_t_steam_fb253aa6b5654893(ItemInstalled_t *_swig_go_0) {
  ItemInstalled_t *arg1 = (ItemInstalled_t *) 0 ;
  
  arg1 = *(ItemInstalled_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_DownloadItemResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = DownloadItemResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_DownloadItemResult_t_m_unAppID_set_steam_fb253aa6b5654893(DownloadItemResult_t *_swig_go_0, intgo _swig_go_1) {
  DownloadItemResult_t *arg1 = (DownloadItemResult_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(DownloadItemResult_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_unAppID = arg2;
  
}


intgo _wrap_DownloadItemResult_t_m_unAppID_get_steam_fb253aa6b5654893(DownloadItemResult_t *_swig_go_0) {
  DownloadItemResult_t *arg1 = (DownloadItemResult_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(DownloadItemResult_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_unAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_DownloadItemResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(DownloadItemResult_t *_swig_go_0, long long _swig_go_1) {
  DownloadItemResult_t *arg1 = (DownloadItemResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(DownloadItemResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_DownloadItemResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(DownloadItemResult_t *_swig_go_0) {
  DownloadItemResult_t *arg1 = (DownloadItemResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(DownloadItemResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_DownloadItemResult_t_m_eResult_set_steam_fb253aa6b5654893(DownloadItemResult_t *_swig_go_0, intgo _swig_go_1) {
  DownloadItemResult_t *arg1 = (DownloadItemResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(DownloadItemResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_DownloadItemResult_t_m_eResult_get_steam_fb253aa6b5654893(DownloadItemResult_t *_swig_go_0) {
  DownloadItemResult_t *arg1 = (DownloadItemResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(DownloadItemResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


DownloadItemResult_t *_wrap_new_DownloadItemResult_t_steam_fb253aa6b5654893() {
  DownloadItemResult_t *result = 0 ;
  DownloadItemResult_t *_swig_go_result;
  
  
  result = (DownloadItemResult_t *)new DownloadItemResult_t();
  *(DownloadItemResult_t **)&_swig_go_result = (DownloadItemResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_DownloadItemResult_t_steam_fb253aa6b5654893(DownloadItemResult_t *_swig_go_0) {
  DownloadItemResult_t *arg1 = (DownloadItemResult_t *) 0 ;
  
  arg1 = *(DownloadItemResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_UserFavoriteItemsListChanged_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = UserFavoriteItemsListChanged_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_UserFavoriteItemsListChanged_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(UserFavoriteItemsListChanged_t *_swig_go_0, long long _swig_go_1) {
  UserFavoriteItemsListChanged_t *arg1 = (UserFavoriteItemsListChanged_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(UserFavoriteItemsListChanged_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_UserFavoriteItemsListChanged_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(UserFavoriteItemsListChanged_t *_swig_go_0) {
  UserFavoriteItemsListChanged_t *arg1 = (UserFavoriteItemsListChanged_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(UserFavoriteItemsListChanged_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_UserFavoriteItemsListChanged_t_m_eResult_set_steam_fb253aa6b5654893(UserFavoriteItemsListChanged_t *_swig_go_0, intgo _swig_go_1) {
  UserFavoriteItemsListChanged_t *arg1 = (UserFavoriteItemsListChanged_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(UserFavoriteItemsListChanged_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_UserFavoriteItemsListChanged_t_m_eResult_get_steam_fb253aa6b5654893(UserFavoriteItemsListChanged_t *_swig_go_0) {
  UserFavoriteItemsListChanged_t *arg1 = (UserFavoriteItemsListChanged_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(UserFavoriteItemsListChanged_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_UserFavoriteItemsListChanged_t_m_bWasAddRequest_set_steam_fb253aa6b5654893(UserFavoriteItemsListChanged_t *_swig_go_0, bool _swig_go_1) {
  UserFavoriteItemsListChanged_t *arg1 = (UserFavoriteItemsListChanged_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(UserFavoriteItemsListChanged_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bWasAddRequest = arg2;
  
}


bool _wrap_UserFavoriteItemsListChanged_t_m_bWasAddRequest_get_steam_fb253aa6b5654893(UserFavoriteItemsListChanged_t *_swig_go_0) {
  UserFavoriteItemsListChanged_t *arg1 = (UserFavoriteItemsListChanged_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(UserFavoriteItemsListChanged_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bWasAddRequest);
  _swig_go_result = result; 
  return _swig_go_result;
}


UserFavoriteItemsListChanged_t *_wrap_new_UserFavoriteItemsListChanged_t_steam_fb253aa6b5654893() {
  UserFavoriteItemsListChanged_t *result = 0 ;
  UserFavoriteItemsListChanged_t *_swig_go_result;
  
  
  result = (UserFavoriteItemsListChanged_t *)new UserFavoriteItemsListChanged_t();
  *(UserFavoriteItemsListChanged_t **)&_swig_go_result = (UserFavoriteItemsListChanged_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_UserFavoriteItemsListChanged_t_steam_fb253aa6b5654893(UserFavoriteItemsListChanged_t *_swig_go_0) {
  UserFavoriteItemsListChanged_t *arg1 = (UserFavoriteItemsListChanged_t *) 0 ;
  
  arg1 = *(UserFavoriteItemsListChanged_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SetUserItemVoteResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SetUserItemVoteResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SetUserItemVoteResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(SetUserItemVoteResult_t *_swig_go_0, long long _swig_go_1) {
  SetUserItemVoteResult_t *arg1 = (SetUserItemVoteResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(SetUserItemVoteResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_SetUserItemVoteResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(SetUserItemVoteResult_t *_swig_go_0) {
  SetUserItemVoteResult_t *arg1 = (SetUserItemVoteResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(SetUserItemVoteResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetUserItemVoteResult_t_m_eResult_set_steam_fb253aa6b5654893(SetUserItemVoteResult_t *_swig_go_0, intgo _swig_go_1) {
  SetUserItemVoteResult_t *arg1 = (SetUserItemVoteResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SetUserItemVoteResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_SetUserItemVoteResult_t_m_eResult_get_steam_fb253aa6b5654893(SetUserItemVoteResult_t *_swig_go_0) {
  SetUserItemVoteResult_t *arg1 = (SetUserItemVoteResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SetUserItemVoteResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SetUserItemVoteResult_t_m_bVoteUp_set_steam_fb253aa6b5654893(SetUserItemVoteResult_t *_swig_go_0, bool _swig_go_1) {
  SetUserItemVoteResult_t *arg1 = (SetUserItemVoteResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SetUserItemVoteResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bVoteUp = arg2;
  
}


bool _wrap_SetUserItemVoteResult_t_m_bVoteUp_get_steam_fb253aa6b5654893(SetUserItemVoteResult_t *_swig_go_0) {
  SetUserItemVoteResult_t *arg1 = (SetUserItemVoteResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SetUserItemVoteResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bVoteUp);
  _swig_go_result = result; 
  return _swig_go_result;
}


SetUserItemVoteResult_t *_wrap_new_SetUserItemVoteResult_t_steam_fb253aa6b5654893() {
  SetUserItemVoteResult_t *result = 0 ;
  SetUserItemVoteResult_t *_swig_go_result;
  
  
  result = (SetUserItemVoteResult_t *)new SetUserItemVoteResult_t();
  *(SetUserItemVoteResult_t **)&_swig_go_result = (SetUserItemVoteResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SetUserItemVoteResult_t_steam_fb253aa6b5654893(SetUserItemVoteResult_t *_swig_go_0) {
  SetUserItemVoteResult_t *arg1 = (SetUserItemVoteResult_t *) 0 ;
  
  arg1 = *(SetUserItemVoteResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GetUserItemVoteResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GetUserItemVoteResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GetUserItemVoteResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0, long long _swig_go_1) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_GetUserItemVoteResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GetUserItemVoteResult_t_m_eResult_set_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0, intgo _swig_go_1) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_GetUserItemVoteResult_t_m_eResult_get_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GetUserItemVoteResult_t_m_bVotedUp_set_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0, bool _swig_go_1) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bVotedUp = arg2;
  
}


bool _wrap_GetUserItemVoteResult_t_m_bVotedUp_get_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bVotedUp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GetUserItemVoteResult_t_m_bVotedDown_set_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0, bool _swig_go_1) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bVotedDown = arg2;
  
}


bool _wrap_GetUserItemVoteResult_t_m_bVotedDown_get_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bVotedDown);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GetUserItemVoteResult_t_m_bVoteSkipped_set_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0, bool _swig_go_1) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bVoteSkipped = arg2;
  
}


bool _wrap_GetUserItemVoteResult_t_m_bVoteSkipped_get_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bVoteSkipped);
  _swig_go_result = result; 
  return _swig_go_result;
}


GetUserItemVoteResult_t *_wrap_new_GetUserItemVoteResult_t_steam_fb253aa6b5654893() {
  GetUserItemVoteResult_t *result = 0 ;
  GetUserItemVoteResult_t *_swig_go_result;
  
  
  result = (GetUserItemVoteResult_t *)new GetUserItemVoteResult_t();
  *(GetUserItemVoteResult_t **)&_swig_go_result = (GetUserItemVoteResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GetUserItemVoteResult_t_steam_fb253aa6b5654893(GetUserItemVoteResult_t *_swig_go_0) {
  GetUserItemVoteResult_t *arg1 = (GetUserItemVoteResult_t *) 0 ;
  
  arg1 = *(GetUserItemVoteResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_StartPlaytimeTrackingResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = StartPlaytimeTrackingResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_StartPlaytimeTrackingResult_t_m_eResult_set_steam_fb253aa6b5654893(StartPlaytimeTrackingResult_t *_swig_go_0, intgo _swig_go_1) {
  StartPlaytimeTrackingResult_t *arg1 = (StartPlaytimeTrackingResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(StartPlaytimeTrackingResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_StartPlaytimeTrackingResult_t_m_eResult_get_steam_fb253aa6b5654893(StartPlaytimeTrackingResult_t *_swig_go_0) {
  StartPlaytimeTrackingResult_t *arg1 = (StartPlaytimeTrackingResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(StartPlaytimeTrackingResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


StartPlaytimeTrackingResult_t *_wrap_new_StartPlaytimeTrackingResult_t_steam_fb253aa6b5654893() {
  StartPlaytimeTrackingResult_t *result = 0 ;
  StartPlaytimeTrackingResult_t *_swig_go_result;
  
  
  result = (StartPlaytimeTrackingResult_t *)new StartPlaytimeTrackingResult_t();
  *(StartPlaytimeTrackingResult_t **)&_swig_go_result = (StartPlaytimeTrackingResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_StartPlaytimeTrackingResult_t_steam_fb253aa6b5654893(StartPlaytimeTrackingResult_t *_swig_go_0) {
  StartPlaytimeTrackingResult_t *arg1 = (StartPlaytimeTrackingResult_t *) 0 ;
  
  arg1 = *(StartPlaytimeTrackingResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_StopPlaytimeTrackingResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = StopPlaytimeTrackingResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_StopPlaytimeTrackingResult_t_m_eResult_set_steam_fb253aa6b5654893(StopPlaytimeTrackingResult_t *_swig_go_0, intgo _swig_go_1) {
  StopPlaytimeTrackingResult_t *arg1 = (StopPlaytimeTrackingResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(StopPlaytimeTrackingResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_StopPlaytimeTrackingResult_t_m_eResult_get_steam_fb253aa6b5654893(StopPlaytimeTrackingResult_t *_swig_go_0) {
  StopPlaytimeTrackingResult_t *arg1 = (StopPlaytimeTrackingResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(StopPlaytimeTrackingResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


StopPlaytimeTrackingResult_t *_wrap_new_StopPlaytimeTrackingResult_t_steam_fb253aa6b5654893() {
  StopPlaytimeTrackingResult_t *result = 0 ;
  StopPlaytimeTrackingResult_t *_swig_go_result;
  
  
  result = (StopPlaytimeTrackingResult_t *)new StopPlaytimeTrackingResult_t();
  *(StopPlaytimeTrackingResult_t **)&_swig_go_result = (StopPlaytimeTrackingResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_StopPlaytimeTrackingResult_t_steam_fb253aa6b5654893(StopPlaytimeTrackingResult_t *_swig_go_0) {
  StopPlaytimeTrackingResult_t *arg1 = (StopPlaytimeTrackingResult_t *) 0 ;
  
  arg1 = *(StopPlaytimeTrackingResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_AddUGCDependencyResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = AddUGCDependencyResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_AddUGCDependencyResult_t_m_eResult_set_steam_fb253aa6b5654893(AddUGCDependencyResult_t *_swig_go_0, intgo _swig_go_1) {
  AddUGCDependencyResult_t *arg1 = (AddUGCDependencyResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(AddUGCDependencyResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_AddUGCDependencyResult_t_m_eResult_get_steam_fb253aa6b5654893(AddUGCDependencyResult_t *_swig_go_0) {
  AddUGCDependencyResult_t *arg1 = (AddUGCDependencyResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(AddUGCDependencyResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_AddUGCDependencyResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(AddUGCDependencyResult_t *_swig_go_0, long long _swig_go_1) {
  AddUGCDependencyResult_t *arg1 = (AddUGCDependencyResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(AddUGCDependencyResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_AddUGCDependencyResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(AddUGCDependencyResult_t *_swig_go_0) {
  AddUGCDependencyResult_t *arg1 = (AddUGCDependencyResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(AddUGCDependencyResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AddUGCDependencyResult_t_m_nChildPublishedFileId_set_steam_fb253aa6b5654893(AddUGCDependencyResult_t *_swig_go_0, long long _swig_go_1) {
  AddUGCDependencyResult_t *arg1 = (AddUGCDependencyResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(AddUGCDependencyResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nChildPublishedFileId = arg2;
  
}


long long _wrap_AddUGCDependencyResult_t_m_nChildPublishedFileId_get_steam_fb253aa6b5654893(AddUGCDependencyResult_t *_swig_go_0) {
  AddUGCDependencyResult_t *arg1 = (AddUGCDependencyResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(AddUGCDependencyResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nChildPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


AddUGCDependencyResult_t *_wrap_new_AddUGCDependencyResult_t_steam_fb253aa6b5654893() {
  AddUGCDependencyResult_t *result = 0 ;
  AddUGCDependencyResult_t *_swig_go_result;
  
  
  result = (AddUGCDependencyResult_t *)new AddUGCDependencyResult_t();
  *(AddUGCDependencyResult_t **)&_swig_go_result = (AddUGCDependencyResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_AddUGCDependencyResult_t_steam_fb253aa6b5654893(AddUGCDependencyResult_t *_swig_go_0) {
  AddUGCDependencyResult_t *arg1 = (AddUGCDependencyResult_t *) 0 ;
  
  arg1 = *(AddUGCDependencyResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoveUGCDependencyResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoveUGCDependencyResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoveUGCDependencyResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoveUGCDependencyResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoveUGCDependencyResult_t *arg1 = (RemoveUGCDependencyResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoveUGCDependencyResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoveUGCDependencyResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoveUGCDependencyResult_t *_swig_go_0) {
  RemoveUGCDependencyResult_t *arg1 = (RemoveUGCDependencyResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoveUGCDependencyResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoveUGCDependencyResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoveUGCDependencyResult_t *_swig_go_0, long long _swig_go_1) {
  RemoveUGCDependencyResult_t *arg1 = (RemoveUGCDependencyResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoveUGCDependencyResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoveUGCDependencyResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoveUGCDependencyResult_t *_swig_go_0) {
  RemoveUGCDependencyResult_t *arg1 = (RemoveUGCDependencyResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoveUGCDependencyResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoveUGCDependencyResult_t_m_nChildPublishedFileId_set_steam_fb253aa6b5654893(RemoveUGCDependencyResult_t *_swig_go_0, long long _swig_go_1) {
  RemoveUGCDependencyResult_t *arg1 = (RemoveUGCDependencyResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoveUGCDependencyResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nChildPublishedFileId = arg2;
  
}


long long _wrap_RemoveUGCDependencyResult_t_m_nChildPublishedFileId_get_steam_fb253aa6b5654893(RemoveUGCDependencyResult_t *_swig_go_0) {
  RemoveUGCDependencyResult_t *arg1 = (RemoveUGCDependencyResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoveUGCDependencyResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nChildPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoveUGCDependencyResult_t *_wrap_new_RemoveUGCDependencyResult_t_steam_fb253aa6b5654893() {
  RemoveUGCDependencyResult_t *result = 0 ;
  RemoveUGCDependencyResult_t *_swig_go_result;
  
  
  result = (RemoveUGCDependencyResult_t *)new RemoveUGCDependencyResult_t();
  *(RemoveUGCDependencyResult_t **)&_swig_go_result = (RemoveUGCDependencyResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoveUGCDependencyResult_t_steam_fb253aa6b5654893(RemoveUGCDependencyResult_t *_swig_go_0) {
  RemoveUGCDependencyResult_t *arg1 = (RemoveUGCDependencyResult_t *) 0 ;
  
  arg1 = *(RemoveUGCDependencyResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_AddAppDependencyResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = AddAppDependencyResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_AddAppDependencyResult_t_m_eResult_set_steam_fb253aa6b5654893(AddAppDependencyResult_t *_swig_go_0, intgo _swig_go_1) {
  AddAppDependencyResult_t *arg1 = (AddAppDependencyResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(AddAppDependencyResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_AddAppDependencyResult_t_m_eResult_get_steam_fb253aa6b5654893(AddAppDependencyResult_t *_swig_go_0) {
  AddAppDependencyResult_t *arg1 = (AddAppDependencyResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(AddAppDependencyResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_AddAppDependencyResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(AddAppDependencyResult_t *_swig_go_0, long long _swig_go_1) {
  AddAppDependencyResult_t *arg1 = (AddAppDependencyResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(AddAppDependencyResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_AddAppDependencyResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(AddAppDependencyResult_t *_swig_go_0) {
  AddAppDependencyResult_t *arg1 = (AddAppDependencyResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(AddAppDependencyResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AddAppDependencyResult_t_m_nAppID_set_steam_fb253aa6b5654893(AddAppDependencyResult_t *_swig_go_0, intgo _swig_go_1) {
  AddAppDependencyResult_t *arg1 = (AddAppDependencyResult_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(AddAppDependencyResult_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_AddAppDependencyResult_t_m_nAppID_get_steam_fb253aa6b5654893(AddAppDependencyResult_t *_swig_go_0) {
  AddAppDependencyResult_t *arg1 = (AddAppDependencyResult_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(AddAppDependencyResult_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


AddAppDependencyResult_t *_wrap_new_AddAppDependencyResult_t_steam_fb253aa6b5654893() {
  AddAppDependencyResult_t *result = 0 ;
  AddAppDependencyResult_t *_swig_go_result;
  
  
  result = (AddAppDependencyResult_t *)new AddAppDependencyResult_t();
  *(AddAppDependencyResult_t **)&_swig_go_result = (AddAppDependencyResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_AddAppDependencyResult_t_steam_fb253aa6b5654893(AddAppDependencyResult_t *_swig_go_0) {
  AddAppDependencyResult_t *arg1 = (AddAppDependencyResult_t *) 0 ;
  
  arg1 = *(AddAppDependencyResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_RemoveAppDependencyResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = RemoveAppDependencyResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoveAppDependencyResult_t_m_eResult_set_steam_fb253aa6b5654893(RemoveAppDependencyResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoveAppDependencyResult_t *arg1 = (RemoveAppDependencyResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(RemoveAppDependencyResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_RemoveAppDependencyResult_t_m_eResult_get_steam_fb253aa6b5654893(RemoveAppDependencyResult_t *_swig_go_0) {
  RemoveAppDependencyResult_t *arg1 = (RemoveAppDependencyResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(RemoveAppDependencyResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_RemoveAppDependencyResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(RemoveAppDependencyResult_t *_swig_go_0, long long _swig_go_1) {
  RemoveAppDependencyResult_t *arg1 = (RemoveAppDependencyResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(RemoveAppDependencyResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_RemoveAppDependencyResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(RemoveAppDependencyResult_t *_swig_go_0) {
  RemoveAppDependencyResult_t *arg1 = (RemoveAppDependencyResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(RemoveAppDependencyResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RemoveAppDependencyResult_t_m_nAppID_set_steam_fb253aa6b5654893(RemoveAppDependencyResult_t *_swig_go_0, intgo _swig_go_1) {
  RemoveAppDependencyResult_t *arg1 = (RemoveAppDependencyResult_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(RemoveAppDependencyResult_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_RemoveAppDependencyResult_t_m_nAppID_get_steam_fb253aa6b5654893(RemoveAppDependencyResult_t *_swig_go_0) {
  RemoveAppDependencyResult_t *arg1 = (RemoveAppDependencyResult_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(RemoveAppDependencyResult_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


RemoveAppDependencyResult_t *_wrap_new_RemoveAppDependencyResult_t_steam_fb253aa6b5654893() {
  RemoveAppDependencyResult_t *result = 0 ;
  RemoveAppDependencyResult_t *_swig_go_result;
  
  
  result = (RemoveAppDependencyResult_t *)new RemoveAppDependencyResult_t();
  *(RemoveAppDependencyResult_t **)&_swig_go_result = (RemoveAppDependencyResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_RemoveAppDependencyResult_t_steam_fb253aa6b5654893(RemoveAppDependencyResult_t *_swig_go_0) {
  RemoveAppDependencyResult_t *arg1 = (RemoveAppDependencyResult_t *) 0 ;
  
  arg1 = *(RemoveAppDependencyResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GetAppDependenciesResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GetAppDependenciesResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GetAppDependenciesResult_t_m_eResult_set_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0, intgo _swig_go_1) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_GetAppDependenciesResult_t_m_eResult_get_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GetAppDependenciesResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0, long long _swig_go_1) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_GetAppDependenciesResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GetAppDependenciesResult_t_m_rgAppIDs_set_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0, intgo *_swig_go_1) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  AppId_t *arg2 ;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  arg2 = *(AppId_t **)&_swig_go_1; 
  
  {
    size_t ii;
    AppId_t *b = (AppId_t *) arg1->m_rgAppIDs;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((AppId_t *) arg2 + ii);
  }
  
}


intgo *_wrap_GetAppDependenciesResult_t_m_rgAppIDs_get_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  AppId_t *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  
  result = (AppId_t *)(AppId_t *) ((arg1)->m_rgAppIDs);
  *(AppId_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GetAppDependenciesResult_t_m_nNumAppDependencies_set_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0, intgo _swig_go_1) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nNumAppDependencies = arg2;
  
}


intgo _wrap_GetAppDependenciesResult_t_m_nNumAppDependencies_get_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nNumAppDependencies);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GetAppDependenciesResult_t_m_nTotalNumAppDependencies_set_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0, intgo _swig_go_1) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->m_nTotalNumAppDependencies = arg2;
  
}


intgo _wrap_GetAppDependenciesResult_t_m_nTotalNumAppDependencies_get_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->m_nTotalNumAppDependencies);
  _swig_go_result = result; 
  return _swig_go_result;
}


GetAppDependenciesResult_t *_wrap_new_GetAppDependenciesResult_t_steam_fb253aa6b5654893() {
  GetAppDependenciesResult_t *result = 0 ;
  GetAppDependenciesResult_t *_swig_go_result;
  
  
  result = (GetAppDependenciesResult_t *)new GetAppDependenciesResult_t();
  *(GetAppDependenciesResult_t **)&_swig_go_result = (GetAppDependenciesResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GetAppDependenciesResult_t_steam_fb253aa6b5654893(GetAppDependenciesResult_t *_swig_go_0) {
  GetAppDependenciesResult_t *arg1 = (GetAppDependenciesResult_t *) 0 ;
  
  arg1 = *(GetAppDependenciesResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_DeleteItemResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = DeleteItemResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_DeleteItemResult_t_m_eResult_set_steam_fb253aa6b5654893(DeleteItemResult_t *_swig_go_0, intgo _swig_go_1) {
  DeleteItemResult_t *arg1 = (DeleteItemResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(DeleteItemResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_DeleteItemResult_t_m_eResult_get_steam_fb253aa6b5654893(DeleteItemResult_t *_swig_go_0) {
  DeleteItemResult_t *arg1 = (DeleteItemResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(DeleteItemResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_DeleteItemResult_t_m_nPublishedFileId_set_steam_fb253aa6b5654893(DeleteItemResult_t *_swig_go_0, long long _swig_go_1) {
  DeleteItemResult_t *arg1 = (DeleteItemResult_t *) 0 ;
  PublishedFileId_t arg2 ;
  
  arg1 = *(DeleteItemResult_t **)&_swig_go_0; 
  arg2 = (PublishedFileId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nPublishedFileId = arg2;
  
}


long long _wrap_DeleteItemResult_t_m_nPublishedFileId_get_steam_fb253aa6b5654893(DeleteItemResult_t *_swig_go_0) {
  DeleteItemResult_t *arg1 = (DeleteItemResult_t *) 0 ;
  PublishedFileId_t result;
  long long _swig_go_result;
  
  arg1 = *(DeleteItemResult_t **)&_swig_go_0; 
  
  result = (PublishedFileId_t) ((arg1)->m_nPublishedFileId);
  _swig_go_result = result; 
  return _swig_go_result;
}


DeleteItemResult_t *_wrap_new_DeleteItemResult_t_steam_fb253aa6b5654893() {
  DeleteItemResult_t *result = 0 ;
  DeleteItemResult_t *_swig_go_result;
  
  
  result = (DeleteItemResult_t *)new DeleteItemResult_t();
  *(DeleteItemResult_t **)&_swig_go_result = (DeleteItemResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_DeleteItemResult_t_steam_fb253aa6b5654893(DeleteItemResult_t *_swig_go_0) {
  DeleteItemResult_t *arg1 = (DeleteItemResult_t *) 0 ;
  
  arg1 = *(DeleteItemResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_ISteamAppList_GetNumInstalledApps_steam_fb253aa6b5654893(ISteamAppList *_swig_go_0) {
  ISteamAppList *arg1 = (ISteamAppList *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamAppList **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetNumInstalledApps();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamAppList_GetInstalledApps_steam_fb253aa6b5654893(ISteamAppList *_swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  ISteamAppList *arg1 = (ISteamAppList *) 0 ;
  AppId_t *arg2 = (AppId_t *) 0 ;
  uint32 arg3 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamAppList **)&_swig_go_0; 
  arg2 = *(AppId_t **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  result = (uint32)(arg1)->GetInstalledApps(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamAppList_GetAppName_steam_fb253aa6b5654893(ISteamAppList *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  ISteamAppList *arg1 = (ISteamAppList *) 0 ;
  AppId_t arg2 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamAppList **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  
  result = (int)(arg1)->GetAppName(arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_ISteamAppList_GetAppInstallDir_steam_fb253aa6b5654893(ISteamAppList *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  ISteamAppList *arg1 = (ISteamAppList *) 0 ;
  AppId_t arg2 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamAppList **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  
  result = (int)(arg1)->GetAppInstallDir(arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_ISteamAppList_GetAppBuildId_steam_fb253aa6b5654893(ISteamAppList *_swig_go_0, intgo _swig_go_1) {
  ISteamAppList *arg1 = (ISteamAppList *) 0 ;
  AppId_t arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamAppList **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  result = (int)(arg1)->GetAppBuildId(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamAppList_steam_fb253aa6b5654893(ISteamAppList *_swig_go_0) {
  ISteamAppList *arg1 = (ISteamAppList *) 0 ;
  
  arg1 = *(ISteamAppList **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamAppInstalled_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamAppInstalled_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamAppInstalled_t_m_nAppID_set_steam_fb253aa6b5654893(SteamAppInstalled_t *_swig_go_0, intgo _swig_go_1) {
  SteamAppInstalled_t *arg1 = (SteamAppInstalled_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(SteamAppInstalled_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_SteamAppInstalled_t_m_nAppID_get_steam_fb253aa6b5654893(SteamAppInstalled_t *_swig_go_0) {
  SteamAppInstalled_t *arg1 = (SteamAppInstalled_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(SteamAppInstalled_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamAppInstalled_t *_wrap_new_SteamAppInstalled_t_steam_fb253aa6b5654893() {
  SteamAppInstalled_t *result = 0 ;
  SteamAppInstalled_t *_swig_go_result;
  
  
  result = (SteamAppInstalled_t *)new SteamAppInstalled_t();
  *(SteamAppInstalled_t **)&_swig_go_result = (SteamAppInstalled_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamAppInstalled_t_steam_fb253aa6b5654893(SteamAppInstalled_t *_swig_go_0) {
  SteamAppInstalled_t *arg1 = (SteamAppInstalled_t *) 0 ;
  
  arg1 = *(SteamAppInstalled_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamAppUninstalled_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamAppUninstalled_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamAppUninstalled_t_m_nAppID_set_steam_fb253aa6b5654893(SteamAppUninstalled_t *_swig_go_0, intgo _swig_go_1) {
  SteamAppUninstalled_t *arg1 = (SteamAppUninstalled_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(SteamAppUninstalled_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_nAppID = arg2;
  
}


intgo _wrap_SteamAppUninstalled_t_m_nAppID_get_steam_fb253aa6b5654893(SteamAppUninstalled_t *_swig_go_0) {
  SteamAppUninstalled_t *arg1 = (SteamAppUninstalled_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(SteamAppUninstalled_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_nAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamAppUninstalled_t *_wrap_new_SteamAppUninstalled_t_steam_fb253aa6b5654893() {
  SteamAppUninstalled_t *result = 0 ;
  SteamAppUninstalled_t *_swig_go_result;
  
  
  result = (SteamAppUninstalled_t *)new SteamAppUninstalled_t();
  *(SteamAppUninstalled_t **)&_swig_go_result = (SteamAppUninstalled_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamAppUninstalled_t_steam_fb253aa6b5654893(SteamAppUninstalled_t *_swig_go_0) {
  SteamAppUninstalled_t *arg1 = (SteamAppUninstalled_t *) 0 ;
  
  arg1 = *(SteamAppUninstalled_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_INVALID_HTMLBROWSER_get_steam_fb253aa6b5654893() {
  uint32 result;
  intgo _swig_go_result;
  
  
  result = (uint32)(uint32)INVALID_HTMLBROWSER;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamHTMLSurface_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_ISteamHTMLSurface_Init_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  
  result = (bool)(arg1)->Init();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamHTMLSurface_Shutdown_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  
  result = (bool)(arg1)->Shutdown();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamHTMLSurface_CreateBrowser_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (SteamAPICall_t)(arg1)->CreateBrowser((char const *)arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


void _wrap_ISteamHTMLSurface_RemoveBrowser_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  (arg1)->RemoveBrowser(arg2);
  
}


void _wrap_ISteamHTMLSurface_LoadURL_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  (arg1)->LoadURL(arg2,(char const *)arg3,(char const *)arg4);
  
  free(arg3); 
  free(arg4); 
}


void _wrap_ISteamHTMLSurface_SetSize_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  uint32 arg3 ;
  uint32 arg4 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  (arg1)->SetSize(arg2,arg3,arg4);
  
}


void _wrap_ISteamHTMLSurface_StopLoad_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  (arg1)->StopLoad(arg2);
  
}


void _wrap_ISteamHTMLSurface_Reload_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  (arg1)->Reload(arg2);
  
}


void _wrap_ISteamHTMLSurface_GoBack_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  (arg1)->GoBack(arg2);
  
}


void _wrap_ISteamHTMLSurface_GoForward_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  (arg1)->GoForward(arg2);
  
}


void _wrap_ISteamHTMLSurface_AddHeader_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  (arg1)->AddHeader(arg2,(char const *)arg3,(char const *)arg4);
  
  free(arg3); 
  free(arg4); 
}


void _wrap_ISteamHTMLSurface_ExecuteJavascript_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->ExecuteJavascript(arg2,(char const *)arg3);
  
  free(arg3); 
}


intgo _wrap_eHTMLMouseButton_Left_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EHTMLMouseButton result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::eHTMLMouseButton_Left;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_eHTMLMouseButton_Right_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EHTMLMouseButton result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::eHTMLMouseButton_Right;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_eHTMLMouseButton_Middle_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EHTMLMouseButton result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::eHTMLMouseButton_Middle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ISteamHTMLSurface_MouseUp_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  ISteamHTMLSurface::EHTMLMouseButton arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (ISteamHTMLSurface::EHTMLMouseButton)_swig_go_2; 
  
  (arg1)->MouseUp(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_MouseDown_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  ISteamHTMLSurface::EHTMLMouseButton arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (ISteamHTMLSurface::EHTMLMouseButton)_swig_go_2; 
  
  (arg1)->MouseDown(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_MouseDoubleClick_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  ISteamHTMLSurface::EHTMLMouseButton arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (ISteamHTMLSurface::EHTMLMouseButton)_swig_go_2; 
  
  (arg1)->MouseDoubleClick(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_MouseMove_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->MouseMove(arg2,arg3,arg4);
  
}


void _wrap_ISteamHTMLSurface_MouseWheel_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  int32 arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (int32)_swig_go_2; 
  
  (arg1)->MouseWheel(arg2,arg3);
  
}


intgo _wrap_dc_user_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_user;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_none_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_none;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_arrow_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_arrow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_ibeam_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_ibeam;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_hourglass_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_hourglass;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_waitarrow_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_waitarrow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_crosshair_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_crosshair;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_up_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_up;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizenw_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizenw;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizese_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizese;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizene_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizene;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizesw_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizesw;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizew_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizew;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizee_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizee;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizen_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizen;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizes_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizes;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizewe_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizewe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizens_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizens;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_sizeall_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_sizeall;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_no_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_no;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_hand_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_hand;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_blank_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_blank;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_middle_pan_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_middle_pan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_north_pan_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_north_pan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_north_east_pan_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_north_east_pan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_east_pan_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_east_pan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_south_east_pan_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_south_east_pan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_south_pan_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_south_pan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_south_west_pan_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_south_west_pan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_west_pan_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_west_pan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_north_west_pan_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_north_west_pan;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_alias_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_alias;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_cell_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_cell;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_colresize_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_colresize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_copycur_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_copycur;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_verticaltext_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_verticaltext;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_rowresize_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_rowresize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_zoomin_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_zoomin;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_zoomout_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_zoomout;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_help_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_help;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_custom_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_custom;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_dc_last_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EMouseCursor result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::dc_last;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eHTMLKeyModifier_None_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EHTMLKeyModifiers result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::k_eHTMLKeyModifier_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eHTMLKeyModifier_AltDown_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EHTMLKeyModifiers result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::k_eHTMLKeyModifier_AltDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eHTMLKeyModifier_CtrlDown_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EHTMLKeyModifiers result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::k_eHTMLKeyModifier_CtrlDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_eHTMLKeyModifier_ShiftDown_ISteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface::EHTMLKeyModifiers result;
  intgo _swig_go_result;
  
  
  result = ISteamHTMLSurface::k_eHTMLKeyModifier_ShiftDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ISteamHTMLSurface_KeyDown_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  uint32 arg3 ;
  ISteamHTMLSurface::EHTMLKeyModifiers arg4 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (ISteamHTMLSurface::EHTMLKeyModifiers)_swig_go_3; 
  
  (arg1)->KeyDown(arg2,arg3,arg4);
  
}


void _wrap_ISteamHTMLSurface_KeyUp_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  uint32 arg3 ;
  ISteamHTMLSurface::EHTMLKeyModifiers arg4 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (ISteamHTMLSurface::EHTMLKeyModifiers)_swig_go_3; 
  
  (arg1)->KeyUp(arg2,arg3,arg4);
  
}


void _wrap_ISteamHTMLSurface_KeyChar_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  uint32 arg3 ;
  ISteamHTMLSurface::EHTMLKeyModifiers arg4 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  arg4 = (ISteamHTMLSurface::EHTMLKeyModifiers)_swig_go_3; 
  
  (arg1)->KeyChar(arg2,arg3,arg4);
  
}


void _wrap_ISteamHTMLSurface_SetHorizontalScroll_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  uint32 arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  (arg1)->SetHorizontalScroll(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_SetVerticalScroll_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  uint32 arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  (arg1)->SetVerticalScroll(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_SetKeyFocus_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  bool arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->SetKeyFocus(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_ViewSource_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  (arg1)->ViewSource(arg2);
  
}


void _wrap_ISteamHTMLSurface_CopyToClipboard_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  (arg1)->CopyToClipboard(arg2);
  
}


void _wrap_ISteamHTMLSurface_PasteFromClipboard_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  (arg1)->PasteFromClipboard(arg2);
  
}


void _wrap_ISteamHTMLSurface_Find_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, bool _swig_go_3, bool _swig_go_4) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  bool arg5 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (bool)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->Find(arg2,(char const *)arg3,arg4,arg5);
  
  free(arg3); 
}


void _wrap_ISteamHTMLSurface_StopFind_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  (arg1)->StopFind(arg2);
  
}


void _wrap_ISteamHTMLSurface_GetLinkAtPosition_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->GetLinkAtPosition(arg2,arg3,arg4);
  
}


void _wrap_ISteamHTMLSurface_SetCookie__SWIG_0_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5, bool _swig_go_6, bool _swig_go_7) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  RTime32 arg6 ;
  bool arg7 ;
  bool arg8 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (RTime32)_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  
  (arg1)->SetCookie((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6,arg7,arg8);
  
  free(arg2); 
  free(arg3); 
  free(arg4); 
  free(arg5); 
}


void _wrap_ISteamHTMLSurface_SetCookie__SWIG_1_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5, bool _swig_go_6) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  RTime32 arg6 ;
  bool arg7 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (RTime32)_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  (arg1)->SetCookie((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6,arg7);
  
  free(arg2); 
  free(arg3); 
  free(arg4); 
  free(arg5); 
}


void _wrap_ISteamHTMLSurface_SetCookie__SWIG_2_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  RTime32 arg6 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (RTime32)_swig_go_5; 
  
  (arg1)->SetCookie((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6);
  
  free(arg2); 
  free(arg3); 
  free(arg4); 
  free(arg5); 
}


void _wrap_ISteamHTMLSurface_SetCookie__SWIG_3_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  (arg1)->SetCookie((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  
  free(arg2); 
  free(arg3); 
  free(arg4); 
  free(arg5); 
}


void _wrap_ISteamHTMLSurface_SetCookie__SWIG_4_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  (arg1)->SetCookie((char const *)arg2,(char const *)arg3,(char const *)arg4);
  
  free(arg2); 
  free(arg3); 
  free(arg4); 
}


void _wrap_ISteamHTMLSurface_SetPageScaleFactor_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->SetPageScaleFactor(arg2,arg3,arg4,arg5);
  
}


void _wrap_ISteamHTMLSurface_SetBackgroundMode_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  bool arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->SetBackgroundMode(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_SetDPIScalingFactor_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  float arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  (arg1)->SetDPIScalingFactor(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_AllowStartRequest_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  bool arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->AllowStartRequest(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_JSDialogResponse_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  bool arg3 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->JSDialogResponse(arg2,arg3);
  
}


void _wrap_ISteamHTMLSurface_FileLoadDialogResponse_steam_fb253aa6b5654893(ISteamHTMLSurface *_swig_go_0, intgo _swig_go_1, _gostring_* _swig_go_2) {
  ISteamHTMLSurface *arg1 = (ISteamHTMLSurface *) 0 ;
  HHTMLBrowser arg2 ;
  char **arg3 = (char **) 0 ;
  
  arg1 = *(ISteamHTMLSurface **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  
  (arg1)->FileLoadDialogResponse(arg2,(char const **)arg3);
  
}


intgo _wrap_k_iCallback_HTML_BrowserReady_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_BrowserReady_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_BrowserReady_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_BrowserReady_t *_swig_go_0, intgo _swig_go_1) {
  HTML_BrowserReady_t *arg1 = (HTML_BrowserReady_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_BrowserReady_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_BrowserReady_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_BrowserReady_t *_swig_go_0) {
  HTML_BrowserReady_t *arg1 = (HTML_BrowserReady_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_BrowserReady_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_BrowserReady_t *_wrap_new_HTML_BrowserReady_t_steam_fb253aa6b5654893() {
  HTML_BrowserReady_t *result = 0 ;
  HTML_BrowserReady_t *_swig_go_result;
  
  
  result = (HTML_BrowserReady_t *)new HTML_BrowserReady_t();
  *(HTML_BrowserReady_t **)&_swig_go_result = (HTML_BrowserReady_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_BrowserReady_t_steam_fb253aa6b5654893(HTML_BrowserReady_t *_swig_go_0) {
  HTML_BrowserReady_t *arg1 = (HTML_BrowserReady_t *) 0 ;
  
  arg1 = *(HTML_BrowserReady_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_NeedsPaint_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_NeedsPaint_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_pBGRA_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pBGRA = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pBGRA, (const char *)arg2);
    } else {
      arg1->pBGRA = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_NeedsPaint_t_pBGRA_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pBGRA);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unWide_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unWide = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unWide_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unWide);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unTall_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unTall = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unTall_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unTall);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unUpdateX_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unUpdateX = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unUpdateX_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unUpdateX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unUpdateY_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unUpdateY = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unUpdateY_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unUpdateY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unUpdateWide_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unUpdateWide = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unUpdateWide_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unUpdateWide);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unUpdateTall_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unUpdateTall = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unUpdateTall_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unUpdateTall);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unScrollX_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unScrollX = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unScrollX_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unScrollX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unScrollY_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unScrollY = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unScrollY_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unScrollY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_flPageScale_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, float _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  float arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->flPageScale = arg2;
  
}


float _wrap_HTML_NeedsPaint_t_flPageScale_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->flPageScale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NeedsPaint_t_unPageSerial_set_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unPageSerial = arg2;
  
}


intgo _wrap_HTML_NeedsPaint_t_unPageSerial_get_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unPageSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_NeedsPaint_t *_wrap_new_HTML_NeedsPaint_t_steam_fb253aa6b5654893() {
  HTML_NeedsPaint_t *result = 0 ;
  HTML_NeedsPaint_t *_swig_go_result;
  
  
  result = (HTML_NeedsPaint_t *)new HTML_NeedsPaint_t();
  *(HTML_NeedsPaint_t **)&_swig_go_result = (HTML_NeedsPaint_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_NeedsPaint_t_steam_fb253aa6b5654893(HTML_NeedsPaint_t *_swig_go_0) {
  HTML_NeedsPaint_t *arg1 = (HTML_NeedsPaint_t *) 0 ;
  
  arg1 = *(HTML_NeedsPaint_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_StartRequest_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_StartRequest_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_StartRequest_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0, intgo _swig_go_1) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_StartRequest_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_StartRequest_t_pchURL_set_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchURL = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchURL, (const char *)arg2);
    } else {
      arg1->pchURL = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_StartRequest_t_pchURL_get_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_StartRequest_t_pchTarget_set_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchTarget = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchTarget, (const char *)arg2);
    } else {
      arg1->pchTarget = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_StartRequest_t_pchTarget_get_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchTarget);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_StartRequest_t_pchPostData_set_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchPostData = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchPostData, (const char *)arg2);
    } else {
      arg1->pchPostData = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_StartRequest_t_pchPostData_get_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchPostData);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_StartRequest_t_bIsRedirect_set_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0, bool _swig_go_1) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bIsRedirect = arg2;
  
}


bool _wrap_HTML_StartRequest_t_bIsRedirect_get_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bIsRedirect);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_StartRequest_t *_wrap_new_HTML_StartRequest_t_steam_fb253aa6b5654893() {
  HTML_StartRequest_t *result = 0 ;
  HTML_StartRequest_t *_swig_go_result;
  
  
  result = (HTML_StartRequest_t *)new HTML_StartRequest_t();
  *(HTML_StartRequest_t **)&_swig_go_result = (HTML_StartRequest_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_StartRequest_t_steam_fb253aa6b5654893(HTML_StartRequest_t *_swig_go_0) {
  HTML_StartRequest_t *arg1 = (HTML_StartRequest_t *) 0 ;
  
  arg1 = *(HTML_StartRequest_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_CloseBrowser_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_CloseBrowser_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_CloseBrowser_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_CloseBrowser_t *_swig_go_0, intgo _swig_go_1) {
  HTML_CloseBrowser_t *arg1 = (HTML_CloseBrowser_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_CloseBrowser_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_CloseBrowser_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_CloseBrowser_t *_swig_go_0) {
  HTML_CloseBrowser_t *arg1 = (HTML_CloseBrowser_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_CloseBrowser_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_CloseBrowser_t *_wrap_new_HTML_CloseBrowser_t_steam_fb253aa6b5654893() {
  HTML_CloseBrowser_t *result = 0 ;
  HTML_CloseBrowser_t *_swig_go_result;
  
  
  result = (HTML_CloseBrowser_t *)new HTML_CloseBrowser_t();
  *(HTML_CloseBrowser_t **)&_swig_go_result = (HTML_CloseBrowser_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_CloseBrowser_t_steam_fb253aa6b5654893(HTML_CloseBrowser_t *_swig_go_0) {
  HTML_CloseBrowser_t *arg1 = (HTML_CloseBrowser_t *) 0 ;
  
  arg1 = *(HTML_CloseBrowser_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_URLChanged_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_URLChanged_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_URLChanged_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0, intgo _swig_go_1) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_URLChanged_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_URLChanged_t_pchURL_set_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchURL = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchURL, (const char *)arg2);
    } else {
      arg1->pchURL = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_URLChanged_t_pchURL_get_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_URLChanged_t_pchPostData_set_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchPostData = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchPostData, (const char *)arg2);
    } else {
      arg1->pchPostData = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_URLChanged_t_pchPostData_get_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchPostData);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_URLChanged_t_bIsRedirect_set_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0, bool _swig_go_1) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bIsRedirect = arg2;
  
}


bool _wrap_HTML_URLChanged_t_bIsRedirect_get_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bIsRedirect);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_URLChanged_t_pchPageTitle_set_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchPageTitle = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchPageTitle, (const char *)arg2);
    } else {
      arg1->pchPageTitle = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_URLChanged_t_pchPageTitle_get_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchPageTitle);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_URLChanged_t_bNewNavigation_set_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0, bool _swig_go_1) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bNewNavigation = arg2;
  
}


bool _wrap_HTML_URLChanged_t_bNewNavigation_get_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bNewNavigation);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_URLChanged_t *_wrap_new_HTML_URLChanged_t_steam_fb253aa6b5654893() {
  HTML_URLChanged_t *result = 0 ;
  HTML_URLChanged_t *_swig_go_result;
  
  
  result = (HTML_URLChanged_t *)new HTML_URLChanged_t();
  *(HTML_URLChanged_t **)&_swig_go_result = (HTML_URLChanged_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_URLChanged_t_steam_fb253aa6b5654893(HTML_URLChanged_t *_swig_go_0) {
  HTML_URLChanged_t *arg1 = (HTML_URLChanged_t *) 0 ;
  
  arg1 = *(HTML_URLChanged_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_FinishedRequest_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_FinishedRequest_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_FinishedRequest_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_FinishedRequest_t *_swig_go_0, intgo _swig_go_1) {
  HTML_FinishedRequest_t *arg1 = (HTML_FinishedRequest_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_FinishedRequest_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_FinishedRequest_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_FinishedRequest_t *_swig_go_0) {
  HTML_FinishedRequest_t *arg1 = (HTML_FinishedRequest_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_FinishedRequest_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_FinishedRequest_t_pchURL_set_steam_fb253aa6b5654893(HTML_FinishedRequest_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_FinishedRequest_t *arg1 = (HTML_FinishedRequest_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_FinishedRequest_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchURL = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchURL, (const char *)arg2);
    } else {
      arg1->pchURL = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_FinishedRequest_t_pchURL_get_steam_fb253aa6b5654893(HTML_FinishedRequest_t *_swig_go_0) {
  HTML_FinishedRequest_t *arg1 = (HTML_FinishedRequest_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_FinishedRequest_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_FinishedRequest_t_pchPageTitle_set_steam_fb253aa6b5654893(HTML_FinishedRequest_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_FinishedRequest_t *arg1 = (HTML_FinishedRequest_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_FinishedRequest_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchPageTitle = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchPageTitle, (const char *)arg2);
    } else {
      arg1->pchPageTitle = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_FinishedRequest_t_pchPageTitle_get_steam_fb253aa6b5654893(HTML_FinishedRequest_t *_swig_go_0) {
  HTML_FinishedRequest_t *arg1 = (HTML_FinishedRequest_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_FinishedRequest_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchPageTitle);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


HTML_FinishedRequest_t *_wrap_new_HTML_FinishedRequest_t_steam_fb253aa6b5654893() {
  HTML_FinishedRequest_t *result = 0 ;
  HTML_FinishedRequest_t *_swig_go_result;
  
  
  result = (HTML_FinishedRequest_t *)new HTML_FinishedRequest_t();
  *(HTML_FinishedRequest_t **)&_swig_go_result = (HTML_FinishedRequest_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_FinishedRequest_t_steam_fb253aa6b5654893(HTML_FinishedRequest_t *_swig_go_0) {
  HTML_FinishedRequest_t *arg1 = (HTML_FinishedRequest_t *) 0 ;
  
  arg1 = *(HTML_FinishedRequest_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_OpenLinkInNewTab_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_OpenLinkInNewTab_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_OpenLinkInNewTab_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_OpenLinkInNewTab_t *_swig_go_0, intgo _swig_go_1) {
  HTML_OpenLinkInNewTab_t *arg1 = (HTML_OpenLinkInNewTab_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_OpenLinkInNewTab_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_OpenLinkInNewTab_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_OpenLinkInNewTab_t *_swig_go_0) {
  HTML_OpenLinkInNewTab_t *arg1 = (HTML_OpenLinkInNewTab_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_OpenLinkInNewTab_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_OpenLinkInNewTab_t_pchURL_set_steam_fb253aa6b5654893(HTML_OpenLinkInNewTab_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_OpenLinkInNewTab_t *arg1 = (HTML_OpenLinkInNewTab_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_OpenLinkInNewTab_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchURL = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchURL, (const char *)arg2);
    } else {
      arg1->pchURL = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_OpenLinkInNewTab_t_pchURL_get_steam_fb253aa6b5654893(HTML_OpenLinkInNewTab_t *_swig_go_0) {
  HTML_OpenLinkInNewTab_t *arg1 = (HTML_OpenLinkInNewTab_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_OpenLinkInNewTab_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


HTML_OpenLinkInNewTab_t *_wrap_new_HTML_OpenLinkInNewTab_t_steam_fb253aa6b5654893() {
  HTML_OpenLinkInNewTab_t *result = 0 ;
  HTML_OpenLinkInNewTab_t *_swig_go_result;
  
  
  result = (HTML_OpenLinkInNewTab_t *)new HTML_OpenLinkInNewTab_t();
  *(HTML_OpenLinkInNewTab_t **)&_swig_go_result = (HTML_OpenLinkInNewTab_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_OpenLinkInNewTab_t_steam_fb253aa6b5654893(HTML_OpenLinkInNewTab_t *_swig_go_0) {
  HTML_OpenLinkInNewTab_t *arg1 = (HTML_OpenLinkInNewTab_t *) 0 ;
  
  arg1 = *(HTML_OpenLinkInNewTab_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_ChangedTitle_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_ChangedTitle_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_ChangedTitle_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_ChangedTitle_t *_swig_go_0, intgo _swig_go_1) {
  HTML_ChangedTitle_t *arg1 = (HTML_ChangedTitle_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_ChangedTitle_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_ChangedTitle_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_ChangedTitle_t *_swig_go_0) {
  HTML_ChangedTitle_t *arg1 = (HTML_ChangedTitle_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_ChangedTitle_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_ChangedTitle_t_pchTitle_set_steam_fb253aa6b5654893(HTML_ChangedTitle_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_ChangedTitle_t *arg1 = (HTML_ChangedTitle_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_ChangedTitle_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchTitle = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchTitle, (const char *)arg2);
    } else {
      arg1->pchTitle = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_ChangedTitle_t_pchTitle_get_steam_fb253aa6b5654893(HTML_ChangedTitle_t *_swig_go_0) {
  HTML_ChangedTitle_t *arg1 = (HTML_ChangedTitle_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_ChangedTitle_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchTitle);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


HTML_ChangedTitle_t *_wrap_new_HTML_ChangedTitle_t_steam_fb253aa6b5654893() {
  HTML_ChangedTitle_t *result = 0 ;
  HTML_ChangedTitle_t *_swig_go_result;
  
  
  result = (HTML_ChangedTitle_t *)new HTML_ChangedTitle_t();
  *(HTML_ChangedTitle_t **)&_swig_go_result = (HTML_ChangedTitle_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_ChangedTitle_t_steam_fb253aa6b5654893(HTML_ChangedTitle_t *_swig_go_0) {
  HTML_ChangedTitle_t *arg1 = (HTML_ChangedTitle_t *) 0 ;
  
  arg1 = *(HTML_ChangedTitle_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_SearchResults_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_SearchResults_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_SearchResults_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_SearchResults_t *_swig_go_0, intgo _swig_go_1) {
  HTML_SearchResults_t *arg1 = (HTML_SearchResults_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_SearchResults_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_SearchResults_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_SearchResults_t *_swig_go_0) {
  HTML_SearchResults_t *arg1 = (HTML_SearchResults_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_SearchResults_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_SearchResults_t_unResults_set_steam_fb253aa6b5654893(HTML_SearchResults_t *_swig_go_0, intgo _swig_go_1) {
  HTML_SearchResults_t *arg1 = (HTML_SearchResults_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_SearchResults_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unResults = arg2;
  
}


intgo _wrap_HTML_SearchResults_t_unResults_get_steam_fb253aa6b5654893(HTML_SearchResults_t *_swig_go_0) {
  HTML_SearchResults_t *arg1 = (HTML_SearchResults_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_SearchResults_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unResults);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_SearchResults_t_unCurrentMatch_set_steam_fb253aa6b5654893(HTML_SearchResults_t *_swig_go_0, intgo _swig_go_1) {
  HTML_SearchResults_t *arg1 = (HTML_SearchResults_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_SearchResults_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unCurrentMatch = arg2;
  
}


intgo _wrap_HTML_SearchResults_t_unCurrentMatch_get_steam_fb253aa6b5654893(HTML_SearchResults_t *_swig_go_0) {
  HTML_SearchResults_t *arg1 = (HTML_SearchResults_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_SearchResults_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unCurrentMatch);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_SearchResults_t *_wrap_new_HTML_SearchResults_t_steam_fb253aa6b5654893() {
  HTML_SearchResults_t *result = 0 ;
  HTML_SearchResults_t *_swig_go_result;
  
  
  result = (HTML_SearchResults_t *)new HTML_SearchResults_t();
  *(HTML_SearchResults_t **)&_swig_go_result = (HTML_SearchResults_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_SearchResults_t_steam_fb253aa6b5654893(HTML_SearchResults_t *_swig_go_0) {
  HTML_SearchResults_t *arg1 = (HTML_SearchResults_t *) 0 ;
  
  arg1 = *(HTML_SearchResults_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_CanGoBackAndForward_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_CanGoBackAndForward_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_CanGoBackAndForward_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_CanGoBackAndForward_t *_swig_go_0, intgo _swig_go_1) {
  HTML_CanGoBackAndForward_t *arg1 = (HTML_CanGoBackAndForward_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_CanGoBackAndForward_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_CanGoBackAndForward_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_CanGoBackAndForward_t *_swig_go_0) {
  HTML_CanGoBackAndForward_t *arg1 = (HTML_CanGoBackAndForward_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_CanGoBackAndForward_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_CanGoBackAndForward_t_bCanGoBack_set_steam_fb253aa6b5654893(HTML_CanGoBackAndForward_t *_swig_go_0, bool _swig_go_1) {
  HTML_CanGoBackAndForward_t *arg1 = (HTML_CanGoBackAndForward_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTML_CanGoBackAndForward_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bCanGoBack = arg2;
  
}


bool _wrap_HTML_CanGoBackAndForward_t_bCanGoBack_get_steam_fb253aa6b5654893(HTML_CanGoBackAndForward_t *_swig_go_0) {
  HTML_CanGoBackAndForward_t *arg1 = (HTML_CanGoBackAndForward_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTML_CanGoBackAndForward_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bCanGoBack);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_CanGoBackAndForward_t_bCanGoForward_set_steam_fb253aa6b5654893(HTML_CanGoBackAndForward_t *_swig_go_0, bool _swig_go_1) {
  HTML_CanGoBackAndForward_t *arg1 = (HTML_CanGoBackAndForward_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTML_CanGoBackAndForward_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bCanGoForward = arg2;
  
}


bool _wrap_HTML_CanGoBackAndForward_t_bCanGoForward_get_steam_fb253aa6b5654893(HTML_CanGoBackAndForward_t *_swig_go_0) {
  HTML_CanGoBackAndForward_t *arg1 = (HTML_CanGoBackAndForward_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTML_CanGoBackAndForward_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bCanGoForward);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_CanGoBackAndForward_t *_wrap_new_HTML_CanGoBackAndForward_t_steam_fb253aa6b5654893() {
  HTML_CanGoBackAndForward_t *result = 0 ;
  HTML_CanGoBackAndForward_t *_swig_go_result;
  
  
  result = (HTML_CanGoBackAndForward_t *)new HTML_CanGoBackAndForward_t();
  *(HTML_CanGoBackAndForward_t **)&_swig_go_result = (HTML_CanGoBackAndForward_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_CanGoBackAndForward_t_steam_fb253aa6b5654893(HTML_CanGoBackAndForward_t *_swig_go_0) {
  HTML_CanGoBackAndForward_t *arg1 = (HTML_CanGoBackAndForward_t *) 0 ;
  
  arg1 = *(HTML_CanGoBackAndForward_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_HorizontalScroll_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_HorizontalScroll_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_HorizontalScroll_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0, intgo _swig_go_1) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_HorizontalScroll_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_HorizontalScroll_t_unScrollMax_set_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0, intgo _swig_go_1) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unScrollMax = arg2;
  
}


intgo _wrap_HTML_HorizontalScroll_t_unScrollMax_get_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unScrollMax);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_HorizontalScroll_t_unScrollCurrent_set_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0, intgo _swig_go_1) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unScrollCurrent = arg2;
  
}


intgo _wrap_HTML_HorizontalScroll_t_unScrollCurrent_get_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unScrollCurrent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_HorizontalScroll_t_flPageScale_set_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0, float _swig_go_1) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  float arg2 ;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->flPageScale = arg2;
  
}


float _wrap_HTML_HorizontalScroll_t_flPageScale_get_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->flPageScale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_HorizontalScroll_t_bVisible_set_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0, bool _swig_go_1) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bVisible = arg2;
  
}


bool _wrap_HTML_HorizontalScroll_t_bVisible_get_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bVisible);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_HorizontalScroll_t_unPageSize_set_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0, intgo _swig_go_1) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unPageSize = arg2;
  
}


intgo _wrap_HTML_HorizontalScroll_t_unPageSize_get_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unPageSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_HorizontalScroll_t *_wrap_new_HTML_HorizontalScroll_t_steam_fb253aa6b5654893() {
  HTML_HorizontalScroll_t *result = 0 ;
  HTML_HorizontalScroll_t *_swig_go_result;
  
  
  result = (HTML_HorizontalScroll_t *)new HTML_HorizontalScroll_t();
  *(HTML_HorizontalScroll_t **)&_swig_go_result = (HTML_HorizontalScroll_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_HorizontalScroll_t_steam_fb253aa6b5654893(HTML_HorizontalScroll_t *_swig_go_0) {
  HTML_HorizontalScroll_t *arg1 = (HTML_HorizontalScroll_t *) 0 ;
  
  arg1 = *(HTML_HorizontalScroll_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_VerticalScroll_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_VerticalScroll_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_VerticalScroll_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0, intgo _swig_go_1) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_VerticalScroll_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_VerticalScroll_t_unScrollMax_set_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0, intgo _swig_go_1) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unScrollMax = arg2;
  
}


intgo _wrap_HTML_VerticalScroll_t_unScrollMax_get_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unScrollMax);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_VerticalScroll_t_unScrollCurrent_set_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0, intgo _swig_go_1) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unScrollCurrent = arg2;
  
}


intgo _wrap_HTML_VerticalScroll_t_unScrollCurrent_get_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unScrollCurrent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_VerticalScroll_t_flPageScale_set_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0, float _swig_go_1) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  float arg2 ;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->flPageScale = arg2;
  
}


float _wrap_HTML_VerticalScroll_t_flPageScale_get_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->flPageScale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_VerticalScroll_t_bVisible_set_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0, bool _swig_go_1) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bVisible = arg2;
  
}


bool _wrap_HTML_VerticalScroll_t_bVisible_get_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bVisible);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_VerticalScroll_t_unPageSize_set_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0, intgo _swig_go_1) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unPageSize = arg2;
  
}


intgo _wrap_HTML_VerticalScroll_t_unPageSize_get_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unPageSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_VerticalScroll_t *_wrap_new_HTML_VerticalScroll_t_steam_fb253aa6b5654893() {
  HTML_VerticalScroll_t *result = 0 ;
  HTML_VerticalScroll_t *_swig_go_result;
  
  
  result = (HTML_VerticalScroll_t *)new HTML_VerticalScroll_t();
  *(HTML_VerticalScroll_t **)&_swig_go_result = (HTML_VerticalScroll_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_VerticalScroll_t_steam_fb253aa6b5654893(HTML_VerticalScroll_t *_swig_go_0) {
  HTML_VerticalScroll_t *arg1 = (HTML_VerticalScroll_t *) 0 ;
  
  arg1 = *(HTML_VerticalScroll_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_LinkAtPosition_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_LinkAtPosition_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_LinkAtPosition_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0, intgo _swig_go_1) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_LinkAtPosition_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_LinkAtPosition_t_x_set_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0, intgo _swig_go_1) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->x = arg2;
  
}


intgo _wrap_HTML_LinkAtPosition_t_x_get_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->x);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_LinkAtPosition_t_y_set_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0, intgo _swig_go_1) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->y = arg2;
  
}


intgo _wrap_HTML_LinkAtPosition_t_y_get_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->y);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_LinkAtPosition_t_pchURL_set_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchURL = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchURL, (const char *)arg2);
    } else {
      arg1->pchURL = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_LinkAtPosition_t_pchURL_get_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_LinkAtPosition_t_bInput_set_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0, bool _swig_go_1) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bInput = arg2;
  
}


bool _wrap_HTML_LinkAtPosition_t_bInput_get_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bInput);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_LinkAtPosition_t_bLiveLink_set_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0, bool _swig_go_1) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bLiveLink = arg2;
  
}


bool _wrap_HTML_LinkAtPosition_t_bLiveLink_get_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bLiveLink);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_LinkAtPosition_t *_wrap_new_HTML_LinkAtPosition_t_steam_fb253aa6b5654893() {
  HTML_LinkAtPosition_t *result = 0 ;
  HTML_LinkAtPosition_t *_swig_go_result;
  
  
  result = (HTML_LinkAtPosition_t *)new HTML_LinkAtPosition_t();
  *(HTML_LinkAtPosition_t **)&_swig_go_result = (HTML_LinkAtPosition_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_LinkAtPosition_t_steam_fb253aa6b5654893(HTML_LinkAtPosition_t *_swig_go_0) {
  HTML_LinkAtPosition_t *arg1 = (HTML_LinkAtPosition_t *) 0 ;
  
  arg1 = *(HTML_LinkAtPosition_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_JSAlert_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_JSAlert_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_JSAlert_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_JSAlert_t *_swig_go_0, intgo _swig_go_1) {
  HTML_JSAlert_t *arg1 = (HTML_JSAlert_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_JSAlert_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_JSAlert_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_JSAlert_t *_swig_go_0) {
  HTML_JSAlert_t *arg1 = (HTML_JSAlert_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_JSAlert_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_JSAlert_t_pchMessage_set_steam_fb253aa6b5654893(HTML_JSAlert_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_JSAlert_t *arg1 = (HTML_JSAlert_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_JSAlert_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchMessage = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchMessage, (const char *)arg2);
    } else {
      arg1->pchMessage = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_JSAlert_t_pchMessage_get_steam_fb253aa6b5654893(HTML_JSAlert_t *_swig_go_0) {
  HTML_JSAlert_t *arg1 = (HTML_JSAlert_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_JSAlert_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchMessage);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


HTML_JSAlert_t *_wrap_new_HTML_JSAlert_t_steam_fb253aa6b5654893() {
  HTML_JSAlert_t *result = 0 ;
  HTML_JSAlert_t *_swig_go_result;
  
  
  result = (HTML_JSAlert_t *)new HTML_JSAlert_t();
  *(HTML_JSAlert_t **)&_swig_go_result = (HTML_JSAlert_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_JSAlert_t_steam_fb253aa6b5654893(HTML_JSAlert_t *_swig_go_0) {
  HTML_JSAlert_t *arg1 = (HTML_JSAlert_t *) 0 ;
  
  arg1 = *(HTML_JSAlert_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_JSConfirm_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_JSConfirm_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_JSConfirm_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_JSConfirm_t *_swig_go_0, intgo _swig_go_1) {
  HTML_JSConfirm_t *arg1 = (HTML_JSConfirm_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_JSConfirm_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_JSConfirm_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_JSConfirm_t *_swig_go_0) {
  HTML_JSConfirm_t *arg1 = (HTML_JSConfirm_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_JSConfirm_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_JSConfirm_t_pchMessage_set_steam_fb253aa6b5654893(HTML_JSConfirm_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_JSConfirm_t *arg1 = (HTML_JSConfirm_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_JSConfirm_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchMessage = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchMessage, (const char *)arg2);
    } else {
      arg1->pchMessage = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_JSConfirm_t_pchMessage_get_steam_fb253aa6b5654893(HTML_JSConfirm_t *_swig_go_0) {
  HTML_JSConfirm_t *arg1 = (HTML_JSConfirm_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_JSConfirm_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchMessage);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


HTML_JSConfirm_t *_wrap_new_HTML_JSConfirm_t_steam_fb253aa6b5654893() {
  HTML_JSConfirm_t *result = 0 ;
  HTML_JSConfirm_t *_swig_go_result;
  
  
  result = (HTML_JSConfirm_t *)new HTML_JSConfirm_t();
  *(HTML_JSConfirm_t **)&_swig_go_result = (HTML_JSConfirm_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_JSConfirm_t_steam_fb253aa6b5654893(HTML_JSConfirm_t *_swig_go_0) {
  HTML_JSConfirm_t *arg1 = (HTML_JSConfirm_t *) 0 ;
  
  arg1 = *(HTML_JSConfirm_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_FileOpenDialog_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_FileOpenDialog_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_FileOpenDialog_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_FileOpenDialog_t *_swig_go_0, intgo _swig_go_1) {
  HTML_FileOpenDialog_t *arg1 = (HTML_FileOpenDialog_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_FileOpenDialog_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_FileOpenDialog_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_FileOpenDialog_t *_swig_go_0) {
  HTML_FileOpenDialog_t *arg1 = (HTML_FileOpenDialog_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_FileOpenDialog_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_FileOpenDialog_t_pchTitle_set_steam_fb253aa6b5654893(HTML_FileOpenDialog_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_FileOpenDialog_t *arg1 = (HTML_FileOpenDialog_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_FileOpenDialog_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchTitle = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchTitle, (const char *)arg2);
    } else {
      arg1->pchTitle = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_FileOpenDialog_t_pchTitle_get_steam_fb253aa6b5654893(HTML_FileOpenDialog_t *_swig_go_0) {
  HTML_FileOpenDialog_t *arg1 = (HTML_FileOpenDialog_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_FileOpenDialog_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchTitle);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_FileOpenDialog_t_pchInitialFile_set_steam_fb253aa6b5654893(HTML_FileOpenDialog_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_FileOpenDialog_t *arg1 = (HTML_FileOpenDialog_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_FileOpenDialog_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchInitialFile = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchInitialFile, (const char *)arg2);
    } else {
      arg1->pchInitialFile = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_FileOpenDialog_t_pchInitialFile_get_steam_fb253aa6b5654893(HTML_FileOpenDialog_t *_swig_go_0) {
  HTML_FileOpenDialog_t *arg1 = (HTML_FileOpenDialog_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_FileOpenDialog_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchInitialFile);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


HTML_FileOpenDialog_t *_wrap_new_HTML_FileOpenDialog_t_steam_fb253aa6b5654893() {
  HTML_FileOpenDialog_t *result = 0 ;
  HTML_FileOpenDialog_t *_swig_go_result;
  
  
  result = (HTML_FileOpenDialog_t *)new HTML_FileOpenDialog_t();
  *(HTML_FileOpenDialog_t **)&_swig_go_result = (HTML_FileOpenDialog_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_FileOpenDialog_t_steam_fb253aa6b5654893(HTML_FileOpenDialog_t *_swig_go_0) {
  HTML_FileOpenDialog_t *arg1 = (HTML_FileOpenDialog_t *) 0 ;
  
  arg1 = *(HTML_FileOpenDialog_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_NewWindow_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_NewWindow_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_NewWindow_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_NewWindow_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NewWindow_t_pchURL_set_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchURL = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchURL, (const char *)arg2);
    } else {
      arg1->pchURL = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_NewWindow_t_pchURL_get_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_HTML_NewWindow_t_unX_set_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unX = arg2;
  
}


intgo _wrap_HTML_NewWindow_t_unX_get_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NewWindow_t_unY_set_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unY = arg2;
  
}


intgo _wrap_HTML_NewWindow_t_unY_get_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NewWindow_t_unWide_set_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unWide = arg2;
  
}


intgo _wrap_HTML_NewWindow_t_unWide_get_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unWide);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NewWindow_t_unTall_set_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->unTall = arg2;
  
}


intgo _wrap_HTML_NewWindow_t_unTall_get_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->unTall);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_NewWindow_t_unNewWindow_BrowserHandle_set_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0, intgo _swig_go_1) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unNewWindow_BrowserHandle = arg2;
  
}


intgo _wrap_HTML_NewWindow_t_unNewWindow_BrowserHandle_get_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unNewWindow_BrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_NewWindow_t *_wrap_new_HTML_NewWindow_t_steam_fb253aa6b5654893() {
  HTML_NewWindow_t *result = 0 ;
  HTML_NewWindow_t *_swig_go_result;
  
  
  result = (HTML_NewWindow_t *)new HTML_NewWindow_t();
  *(HTML_NewWindow_t **)&_swig_go_result = (HTML_NewWindow_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_NewWindow_t_steam_fb253aa6b5654893(HTML_NewWindow_t *_swig_go_0) {
  HTML_NewWindow_t *arg1 = (HTML_NewWindow_t *) 0 ;
  
  arg1 = *(HTML_NewWindow_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_SetCursor_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_SetCursor_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_SetCursor_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_SetCursor_t *_swig_go_0, intgo _swig_go_1) {
  HTML_SetCursor_t *arg1 = (HTML_SetCursor_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_SetCursor_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_SetCursor_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_SetCursor_t *_swig_go_0) {
  HTML_SetCursor_t *arg1 = (HTML_SetCursor_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_SetCursor_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_SetCursor_t_eMouseCursor_set_steam_fb253aa6b5654893(HTML_SetCursor_t *_swig_go_0, intgo _swig_go_1) {
  HTML_SetCursor_t *arg1 = (HTML_SetCursor_t *) 0 ;
  uint32 arg2 ;
  
  arg1 = *(HTML_SetCursor_t **)&_swig_go_0; 
  arg2 = (uint32)_swig_go_1; 
  
  if (arg1) (arg1)->eMouseCursor = arg2;
  
}


intgo _wrap_HTML_SetCursor_t_eMouseCursor_get_steam_fb253aa6b5654893(HTML_SetCursor_t *_swig_go_0) {
  HTML_SetCursor_t *arg1 = (HTML_SetCursor_t *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_SetCursor_t **)&_swig_go_0; 
  
  result = (uint32) ((arg1)->eMouseCursor);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_SetCursor_t *_wrap_new_HTML_SetCursor_t_steam_fb253aa6b5654893() {
  HTML_SetCursor_t *result = 0 ;
  HTML_SetCursor_t *_swig_go_result;
  
  
  result = (HTML_SetCursor_t *)new HTML_SetCursor_t();
  *(HTML_SetCursor_t **)&_swig_go_result = (HTML_SetCursor_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_SetCursor_t_steam_fb253aa6b5654893(HTML_SetCursor_t *_swig_go_0) {
  HTML_SetCursor_t *arg1 = (HTML_SetCursor_t *) 0 ;
  
  arg1 = *(HTML_SetCursor_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_StatusText_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_StatusText_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_StatusText_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_StatusText_t *_swig_go_0, intgo _swig_go_1) {
  HTML_StatusText_t *arg1 = (HTML_StatusText_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_StatusText_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_StatusText_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_StatusText_t *_swig_go_0) {
  HTML_StatusText_t *arg1 = (HTML_StatusText_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_StatusText_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_StatusText_t_pchMsg_set_steam_fb253aa6b5654893(HTML_StatusText_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_StatusText_t *arg1 = (HTML_StatusText_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_StatusText_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchMsg = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchMsg, (const char *)arg2);
    } else {
      arg1->pchMsg = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_StatusText_t_pchMsg_get_steam_fb253aa6b5654893(HTML_StatusText_t *_swig_go_0) {
  HTML_StatusText_t *arg1 = (HTML_StatusText_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_StatusText_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


HTML_StatusText_t *_wrap_new_HTML_StatusText_t_steam_fb253aa6b5654893() {
  HTML_StatusText_t *result = 0 ;
  HTML_StatusText_t *_swig_go_result;
  
  
  result = (HTML_StatusText_t *)new HTML_StatusText_t();
  *(HTML_StatusText_t **)&_swig_go_result = (HTML_StatusText_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_StatusText_t_steam_fb253aa6b5654893(HTML_StatusText_t *_swig_go_0) {
  HTML_StatusText_t *arg1 = (HTML_StatusText_t *) 0 ;
  
  arg1 = *(HTML_StatusText_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_ShowToolTip_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_ShowToolTip_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_ShowToolTip_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_ShowToolTip_t *_swig_go_0, intgo _swig_go_1) {
  HTML_ShowToolTip_t *arg1 = (HTML_ShowToolTip_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_ShowToolTip_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_ShowToolTip_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_ShowToolTip_t *_swig_go_0) {
  HTML_ShowToolTip_t *arg1 = (HTML_ShowToolTip_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_ShowToolTip_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_ShowToolTip_t_pchMsg_set_steam_fb253aa6b5654893(HTML_ShowToolTip_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_ShowToolTip_t *arg1 = (HTML_ShowToolTip_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_ShowToolTip_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchMsg = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchMsg, (const char *)arg2);
    } else {
      arg1->pchMsg = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_ShowToolTip_t_pchMsg_get_steam_fb253aa6b5654893(HTML_ShowToolTip_t *_swig_go_0) {
  HTML_ShowToolTip_t *arg1 = (HTML_ShowToolTip_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_ShowToolTip_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


HTML_ShowToolTip_t *_wrap_new_HTML_ShowToolTip_t_steam_fb253aa6b5654893() {
  HTML_ShowToolTip_t *result = 0 ;
  HTML_ShowToolTip_t *_swig_go_result;
  
  
  result = (HTML_ShowToolTip_t *)new HTML_ShowToolTip_t();
  *(HTML_ShowToolTip_t **)&_swig_go_result = (HTML_ShowToolTip_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_ShowToolTip_t_steam_fb253aa6b5654893(HTML_ShowToolTip_t *_swig_go_0) {
  HTML_ShowToolTip_t *arg1 = (HTML_ShowToolTip_t *) 0 ;
  
  arg1 = *(HTML_ShowToolTip_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_UpdateToolTip_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_UpdateToolTip_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_UpdateToolTip_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_UpdateToolTip_t *_swig_go_0, intgo _swig_go_1) {
  HTML_UpdateToolTip_t *arg1 = (HTML_UpdateToolTip_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_UpdateToolTip_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_UpdateToolTip_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_UpdateToolTip_t *_swig_go_0) {
  HTML_UpdateToolTip_t *arg1 = (HTML_UpdateToolTip_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_UpdateToolTip_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_UpdateToolTip_t_pchMsg_set_steam_fb253aa6b5654893(HTML_UpdateToolTip_t *_swig_go_0, _gostring_ _swig_go_1) {
  HTML_UpdateToolTip_t *arg1 = (HTML_UpdateToolTip_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(HTML_UpdateToolTip_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->pchMsg = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pchMsg, (const char *)arg2);
    } else {
      arg1->pchMsg = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_HTML_UpdateToolTip_t_pchMsg_get_steam_fb253aa6b5654893(HTML_UpdateToolTip_t *_swig_go_0) {
  HTML_UpdateToolTip_t *arg1 = (HTML_UpdateToolTip_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(HTML_UpdateToolTip_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->pchMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


HTML_UpdateToolTip_t *_wrap_new_HTML_UpdateToolTip_t_steam_fb253aa6b5654893() {
  HTML_UpdateToolTip_t *result = 0 ;
  HTML_UpdateToolTip_t *_swig_go_result;
  
  
  result = (HTML_UpdateToolTip_t *)new HTML_UpdateToolTip_t();
  *(HTML_UpdateToolTip_t **)&_swig_go_result = (HTML_UpdateToolTip_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_UpdateToolTip_t_steam_fb253aa6b5654893(HTML_UpdateToolTip_t *_swig_go_0) {
  HTML_UpdateToolTip_t *arg1 = (HTML_UpdateToolTip_t *) 0 ;
  
  arg1 = *(HTML_UpdateToolTip_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_HideToolTip_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_HideToolTip_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_HideToolTip_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_HideToolTip_t *_swig_go_0, intgo _swig_go_1) {
  HTML_HideToolTip_t *arg1 = (HTML_HideToolTip_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_HideToolTip_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_HideToolTip_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_HideToolTip_t *_swig_go_0) {
  HTML_HideToolTip_t *arg1 = (HTML_HideToolTip_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_HideToolTip_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_HideToolTip_t *_wrap_new_HTML_HideToolTip_t_steam_fb253aa6b5654893() {
  HTML_HideToolTip_t *result = 0 ;
  HTML_HideToolTip_t *_swig_go_result;
  
  
  result = (HTML_HideToolTip_t *)new HTML_HideToolTip_t();
  *(HTML_HideToolTip_t **)&_swig_go_result = (HTML_HideToolTip_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_HideToolTip_t_steam_fb253aa6b5654893(HTML_HideToolTip_t *_swig_go_0) {
  HTML_HideToolTip_t *arg1 = (HTML_HideToolTip_t *) 0 ;
  
  arg1 = *(HTML_HideToolTip_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_HTML_BrowserRestarted_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = HTML_BrowserRestarted_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_HTML_BrowserRestarted_t_unBrowserHandle_set_steam_fb253aa6b5654893(HTML_BrowserRestarted_t *_swig_go_0, intgo _swig_go_1) {
  HTML_BrowserRestarted_t *arg1 = (HTML_BrowserRestarted_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_BrowserRestarted_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unBrowserHandle = arg2;
  
}


intgo _wrap_HTML_BrowserRestarted_t_unBrowserHandle_get_steam_fb253aa6b5654893(HTML_BrowserRestarted_t *_swig_go_0) {
  HTML_BrowserRestarted_t *arg1 = (HTML_BrowserRestarted_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_BrowserRestarted_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HTML_BrowserRestarted_t_unOldBrowserHandle_set_steam_fb253aa6b5654893(HTML_BrowserRestarted_t *_swig_go_0, intgo _swig_go_1) {
  HTML_BrowserRestarted_t *arg1 = (HTML_BrowserRestarted_t *) 0 ;
  HHTMLBrowser arg2 ;
  
  arg1 = *(HTML_BrowserRestarted_t **)&_swig_go_0; 
  arg2 = (HHTMLBrowser)_swig_go_1; 
  
  if (arg1) (arg1)->unOldBrowserHandle = arg2;
  
}


intgo _wrap_HTML_BrowserRestarted_t_unOldBrowserHandle_get_steam_fb253aa6b5654893(HTML_BrowserRestarted_t *_swig_go_0) {
  HTML_BrowserRestarted_t *arg1 = (HTML_BrowserRestarted_t *) 0 ;
  HHTMLBrowser result;
  intgo _swig_go_result;
  
  arg1 = *(HTML_BrowserRestarted_t **)&_swig_go_0; 
  
  result = (HHTMLBrowser) ((arg1)->unOldBrowserHandle);
  _swig_go_result = result; 
  return _swig_go_result;
}


HTML_BrowserRestarted_t *_wrap_new_HTML_BrowserRestarted_t_steam_fb253aa6b5654893() {
  HTML_BrowserRestarted_t *result = 0 ;
  HTML_BrowserRestarted_t *_swig_go_result;
  
  
  result = (HTML_BrowserRestarted_t *)new HTML_BrowserRestarted_t();
  *(HTML_BrowserRestarted_t **)&_swig_go_result = (HTML_BrowserRestarted_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_HTML_BrowserRestarted_t_steam_fb253aa6b5654893(HTML_BrowserRestarted_t *_swig_go_0) {
  HTML_BrowserRestarted_t *arg1 = (HTML_BrowserRestarted_t *) 0 ;
  
  arg1 = *(HTML_BrowserRestarted_t **)&_swig_go_0; 
  
  delete arg1;
  
}


long long _wrap_k_SteamItemInstanceIDInvalid_get_steam_fb253aa6b5654893() {
  SteamItemInstanceID_t result;
  long long _swig_go_result;
  
  
  result = (SteamItemInstanceID_t)(SteamItemInstanceID_t)k_SteamItemInstanceIDInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamItemNoTrade_steam_fb253aa6b5654893() {
  ESteamItemFlags result;
  intgo _swig_go_result;
  
  
  result = k_ESteamItemNoTrade;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamItemRemoved_steam_fb253aa6b5654893() {
  ESteamItemFlags result;
  intgo _swig_go_result;
  
  
  result = k_ESteamItemRemoved;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_ESteamItemConsumed_steam_fb253aa6b5654893() {
  ESteamItemFlags result;
  intgo _swig_go_result;
  
  
  result = k_ESteamItemConsumed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamItemDetails_t_m_itemId_set_steam_fb253aa6b5654893(SteamItemDetails_t *_swig_go_0, long long _swig_go_1) {
  SteamItemDetails_t *arg1 = (SteamItemDetails_t *) 0 ;
  SteamItemInstanceID_t arg2 ;
  
  arg1 = *(SteamItemDetails_t **)&_swig_go_0; 
  arg2 = (SteamItemInstanceID_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_itemId = arg2;
  
}


long long _wrap_SteamItemDetails_t_m_itemId_get_steam_fb253aa6b5654893(SteamItemDetails_t *_swig_go_0) {
  SteamItemDetails_t *arg1 = (SteamItemDetails_t *) 0 ;
  SteamItemInstanceID_t result;
  long long _swig_go_result;
  
  arg1 = *(SteamItemDetails_t **)&_swig_go_0; 
  
  result = (SteamItemInstanceID_t) ((arg1)->m_itemId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamItemDetails_t_m_iDefinition_set_steam_fb253aa6b5654893(SteamItemDetails_t *_swig_go_0, intgo _swig_go_1) {
  SteamItemDetails_t *arg1 = (SteamItemDetails_t *) 0 ;
  SteamItemDef_t arg2 ;
  
  arg1 = *(SteamItemDetails_t **)&_swig_go_0; 
  arg2 = (SteamItemDef_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_iDefinition = arg2;
  
}


intgo _wrap_SteamItemDetails_t_m_iDefinition_get_steam_fb253aa6b5654893(SteamItemDetails_t *_swig_go_0) {
  SteamItemDetails_t *arg1 = (SteamItemDetails_t *) 0 ;
  SteamItemDef_t result;
  intgo _swig_go_result;
  
  arg1 = *(SteamItemDetails_t **)&_swig_go_0; 
  
  result = (SteamItemDef_t) ((arg1)->m_iDefinition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamItemDetails_t_m_unQuantity_set_steam_fb253aa6b5654893(SteamItemDetails_t *_swig_go_0, short _swig_go_1) {
  SteamItemDetails_t *arg1 = (SteamItemDetails_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(SteamItemDetails_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  if (arg1) (arg1)->m_unQuantity = arg2;
  
}


short _wrap_SteamItemDetails_t_m_unQuantity_get_steam_fb253aa6b5654893(SteamItemDetails_t *_swig_go_0) {
  SteamItemDetails_t *arg1 = (SteamItemDetails_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(SteamItemDetails_t **)&_swig_go_0; 
  
  result = (uint16) ((arg1)->m_unQuantity);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamItemDetails_t_m_unFlags_set_steam_fb253aa6b5654893(SteamItemDetails_t *_swig_go_0, short _swig_go_1) {
  SteamItemDetails_t *arg1 = (SteamItemDetails_t *) 0 ;
  uint16 arg2 ;
  
  arg1 = *(SteamItemDetails_t **)&_swig_go_0; 
  arg2 = (uint16)_swig_go_1; 
  
  if (arg1) (arg1)->m_unFlags = arg2;
  
}


short _wrap_SteamItemDetails_t_m_unFlags_get_steam_fb253aa6b5654893(SteamItemDetails_t *_swig_go_0) {
  SteamItemDetails_t *arg1 = (SteamItemDetails_t *) 0 ;
  uint16 result;
  short _swig_go_result;
  
  arg1 = *(SteamItemDetails_t **)&_swig_go_0; 
  
  result = (uint16) ((arg1)->m_unFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamItemDetails_t *_wrap_new_SteamItemDetails_t_steam_fb253aa6b5654893() {
  SteamItemDetails_t *result = 0 ;
  SteamItemDetails_t *_swig_go_result;
  
  
  result = (SteamItemDetails_t *)new SteamItemDetails_t();
  *(SteamItemDetails_t **)&_swig_go_result = (SteamItemDetails_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamItemDetails_t_steam_fb253aa6b5654893(SteamItemDetails_t *_swig_go_0) {
  SteamItemDetails_t *arg1 = (SteamItemDetails_t *) 0 ;
  
  arg1 = *(SteamItemDetails_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_SteamInventoryResultInvalid_get_steam_fb253aa6b5654893() {
  SteamInventoryResult_t result;
  intgo _swig_go_result;
  
  
  result = (SteamInventoryResult_t)(SteamInventoryResult_t)k_SteamInventoryResultInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_k_SteamInventoryUpdateHandleInvalid_get_steam_fb253aa6b5654893() {
  SteamInventoryUpdateHandle_t result;
  long long _swig_go_result;
  
  
  result = (SteamInventoryUpdateHandle_t)(SteamInventoryUpdateHandle_t)k_SteamInventoryUpdateHandleInvalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamInventory_GetResultStatus_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo _swig_go_1) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t arg2 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryResult_t)_swig_go_1; 
  
  result = (EResult)(arg1)->GetResultStatus(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GetResultItems_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo _swig_go_1, SteamItemDetails_t *_swig_go_2, intgo *_swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t arg2 ;
  SteamItemDetails_t *arg3 = (SteamItemDetails_t *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryResult_t)_swig_go_1; 
  arg3 = *(SteamItemDetails_t **)&_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetResultItems(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GetResultItemProperty_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4, intgo *_swig_go_5) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t arg2 ;
  uint32 arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  uint32 *arg6 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryResult_t)_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = *(uint32 **)&_swig_go_5; 
  
  result = (bool)(arg1)->GetResultItemProperty(arg2,arg3,(char const *)arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg4); 
  free(arg5); 
  return _swig_go_result;
}


intgo _wrap_ISteamInventory_GetResultTimestamp_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo _swig_go_1) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t arg2 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryResult_t)_swig_go_1; 
  
  result = (uint32)(arg1)->GetResultTimestamp(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_CheckResultSteamID_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo _swig_go_1, CSteamID *_swig_go_2) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t arg2 ;
  CSteamID arg3 ;
  CSteamID *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryResult_t)_swig_go_1; 
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  
  result = (bool)(arg1)->CheckResultSteamID(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamInventory_DestroyResult_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo _swig_go_1) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t arg2 ;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryResult_t)_swig_go_1; 
  
  (arg1)->DestroyResult(arg2);
  
}


bool _wrap_ISteamInventory_GetAllItems_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  
  result = (bool)(arg1)->GetAllItems(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GetItemsByID_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, long long *_swig_go_2, intgo _swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  SteamItemInstanceID_t *arg3 = (SteamItemInstanceID_t *) 0 ;
  uint32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = *(SteamItemInstanceID_t **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (bool)(arg1)->GetItemsByID(arg2,(SteamItemInstanceID_t const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_SerializeResult_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo *_swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t arg2 ;
  void *arg3 = (void *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryResult_t)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->SerializeResult(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_DeserializeResult__SWIG_0_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, void *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  bool arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (bool)(arg1)->DeserializeResult(arg2,(void const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_DeserializeResult__SWIG_1_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  void *arg3 = (void *) 0 ;
  uint32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (bool)(arg1)->DeserializeResult(arg2,(void const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GenerateItems_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3, intgo _swig_go_4) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  SteamItemDef_t *arg3 = (SteamItemDef_t *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  uint32 arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = *(SteamItemDef_t **)&_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  arg5 = (uint32)_swig_go_4; 
  
  result = (bool)(arg1)->GenerateItems(arg2,(SteamItemDef_t const *)arg3,(uint32 const *)arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GrantPromoItems_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  
  result = (bool)(arg1)->GrantPromoItems(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_AddPromoItem_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  SteamItemDef_t arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = (SteamItemDef_t)_swig_go_2; 
  
  result = (bool)(arg1)->AddPromoItem(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_AddPromoItems_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  SteamItemDef_t *arg3 = (SteamItemDef_t *) 0 ;
  uint32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = *(SteamItemDef_t **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (bool)(arg1)->AddPromoItems(arg2,(SteamItemDef_t const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_ConsumeItem_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, long long _swig_go_2, intgo _swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  SteamItemInstanceID_t arg3 ;
  uint32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = (SteamItemInstanceID_t)_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (bool)(arg1)->ConsumeItem(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_ExchangeItems_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3, intgo _swig_go_4, long long *_swig_go_5, intgo *_swig_go_6, intgo _swig_go_7) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  SteamItemDef_t *arg3 = (SteamItemDef_t *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  uint32 arg5 ;
  SteamItemInstanceID_t *arg6 = (SteamItemInstanceID_t *) 0 ;
  uint32 *arg7 = (uint32 *) 0 ;
  uint32 arg8 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = *(SteamItemDef_t **)&_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  arg5 = (uint32)_swig_go_4; 
  arg6 = *(SteamItemInstanceID_t **)&_swig_go_5; 
  arg7 = *(uint32 **)&_swig_go_6; 
  arg8 = (uint32)_swig_go_7; 
  
  result = (bool)(arg1)->ExchangeItems(arg2,(SteamItemDef_t const *)arg3,(uint32 const *)arg4,arg5,(SteamItemInstanceID_t const *)arg6,(uint32 const *)arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_TransferItemQuantity_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, long long _swig_go_2, intgo _swig_go_3, long long _swig_go_4) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  SteamItemInstanceID_t arg3 ;
  uint32 arg4 ;
  SteamItemInstanceID_t arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = (SteamItemInstanceID_t)_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  arg5 = (SteamItemInstanceID_t)_swig_go_4; 
  
  result = (bool)(arg1)->TransferItemQuantity(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamInventory_SendItemDropHeartbeat_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  
  (arg1)->SendItemDropHeartbeat();
  
}


bool _wrap_ISteamInventory_TriggerItemDrop_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  SteamItemDef_t arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  arg3 = (SteamItemDef_t)_swig_go_2; 
  
  result = (bool)(arg1)->TriggerItemDrop(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_TradeItems_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, CSteamID *_swig_go_2, long long *_swig_go_3, intgo *_swig_go_4, intgo _swig_go_5, long long *_swig_go_6, intgo *_swig_go_7, intgo _swig_go_8) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryResult_t *arg2 = (SteamInventoryResult_t *) 0 ;
  CSteamID arg3 ;
  SteamItemInstanceID_t *arg4 = (SteamItemInstanceID_t *) 0 ;
  uint32 *arg5 = (uint32 *) 0 ;
  uint32 arg6 ;
  SteamItemInstanceID_t *arg7 = (SteamItemInstanceID_t *) 0 ;
  uint32 *arg8 = (uint32 *) 0 ;
  uint32 arg9 ;
  CSteamID *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamInventoryResult_t **)&_swig_go_1; 
  
  argp3 = (CSteamID *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg3 = (CSteamID)*argp3;
  
  arg4 = *(SteamItemInstanceID_t **)&_swig_go_3; 
  arg5 = *(uint32 **)&_swig_go_4; 
  arg6 = (uint32)_swig_go_5; 
  arg7 = *(SteamItemInstanceID_t **)&_swig_go_6; 
  arg8 = *(uint32 **)&_swig_go_7; 
  arg9 = (uint32)_swig_go_8; 
  
  result = (bool)(arg1)->TradeItems(arg2,arg3,(SteamItemInstanceID_t const *)arg4,(uint32 const *)arg5,arg6,(SteamItemInstanceID_t const *)arg7,(uint32 const *)arg8,arg9);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_LoadItemDefinitions_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  
  result = (bool)(arg1)->LoadItemDefinitions();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GetItemDefinitionIDs_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamItemDef_t *arg2 = (SteamItemDef_t *) 0 ;
  uint32 *arg3 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamItemDef_t **)&_swig_go_1; 
  arg3 = *(uint32 **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetItemDefinitionIDs(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GetItemDefinitionProperty_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, intgo *_swig_go_4) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamItemDef_t arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  uint32 *arg5 = (uint32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamItemDef_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(uint32 **)&_swig_go_4; 
  
  result = (bool)(arg1)->GetItemDefinitionProperty(arg2,(char const *)arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


long long _wrap_ISteamInventory_RequestEligiblePromoItemDefinitionsIDs_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, CSteamID *_swig_go_1) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  CSteamID arg2 ;
  CSteamID *argp2 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  
  result = (SteamAPICall_t)(arg1)->RequestEligiblePromoItemDefinitionsIDs(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GetEligiblePromoItemDefinitionIDs_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, CSteamID *_swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  CSteamID arg2 ;
  SteamItemDef_t *arg3 = (SteamItemDef_t *) 0 ;
  uint32 *arg4 = (uint32 *) 0 ;
  CSteamID *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  
  argp2 = (CSteamID *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CSteamID");
  }
  arg2 = (CSteamID)*argp2;
  
  arg3 = *(SteamItemDef_t **)&_swig_go_2; 
  arg4 = *(uint32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetEligiblePromoItemDefinitionIDs(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamInventory_StartPurchase_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamItemDef_t *arg2 = (SteamItemDef_t *) 0 ;
  uint32 *arg3 = (uint32 *) 0 ;
  uint32 arg4 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamItemDef_t **)&_swig_go_1; 
  arg3 = *(uint32 **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (SteamAPICall_t)(arg1)->StartPurchase((SteamItemDef_t const *)arg2,(uint32 const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamInventory_RequestPrices_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamAPICall_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  
  result = (SteamAPICall_t)(arg1)->RequestPrices();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ISteamInventory_GetNumItemsWithPrices_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  
  result = (uint32)(arg1)->GetNumItemsWithPrices();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GetItemsWithPrices_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo *_swig_go_1, long long *_swig_go_2, intgo _swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamItemDef_t *arg2 = (SteamItemDef_t *) 0 ;
  uint64 *arg3 = (uint64 *) 0 ;
  uint32 arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = *(SteamItemDef_t **)&_swig_go_1; 
  arg3 = *(uint64 **)&_swig_go_2; 
  arg4 = (uint32)_swig_go_3; 
  
  result = (bool)(arg1)->GetItemsWithPrices(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_GetItemPrice_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, intgo _swig_go_1, long long *_swig_go_2) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamItemDef_t arg2 ;
  uint64 *arg3 = (uint64 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamItemDef_t)_swig_go_1; 
  arg3 = *(uint64 **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetItemPrice(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_ISteamInventory_StartUpdateProperties_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryUpdateHandle_t result;
  long long _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  
  result = (SteamInventoryUpdateHandle_t)(arg1)->StartUpdateProperties();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_RemoveProperty_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, long long _swig_go_1, long long _swig_go_2, _gostring_ _swig_go_3) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryUpdateHandle_t arg2 ;
  SteamItemInstanceID_t arg3 ;
  char *arg4 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryUpdateHandle_t)_swig_go_1; 
  arg3 = (SteamItemInstanceID_t)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  result = (bool)(arg1)->RemoveProperty(arg2,arg3,(char const *)arg4);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_SetProperty__SWIG_0_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, long long _swig_go_1, long long _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryUpdateHandle_t arg2 ;
  SteamItemInstanceID_t arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryUpdateHandle_t)_swig_go_1; 
  arg3 = (SteamItemInstanceID_t)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)(arg1)->SetProperty(arg2,arg3,(char const *)arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg4); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_SetProperty__SWIG_1_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, long long _swig_go_1, long long _swig_go_2, _gostring_ _swig_go_3, bool _swig_go_4) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryUpdateHandle_t arg2 ;
  SteamItemInstanceID_t arg3 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryUpdateHandle_t)_swig_go_1; 
  arg3 = (SteamItemInstanceID_t)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (bool)_swig_go_4; 
  
  result = (bool)(arg1)->SetProperty(arg2,arg3,(char const *)arg4,arg5);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_SetProperty__SWIG_2_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, long long _swig_go_1, long long _swig_go_2, _gostring_ _swig_go_3, long long _swig_go_4) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryUpdateHandle_t arg2 ;
  SteamItemInstanceID_t arg3 ;
  char *arg4 = (char *) 0 ;
  int64 arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryUpdateHandle_t)_swig_go_1; 
  arg3 = (SteamItemInstanceID_t)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (int64)_swig_go_4; 
  
  result = (bool)(arg1)->SetProperty(arg2,arg3,(char const *)arg4,arg5);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_SetProperty__SWIG_3_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, long long _swig_go_1, long long _swig_go_2, _gostring_ _swig_go_3, float _swig_go_4) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryUpdateHandle_t arg2 ;
  SteamItemInstanceID_t arg3 ;
  char *arg4 = (char *) 0 ;
  float arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryUpdateHandle_t)_swig_go_1; 
  arg3 = (SteamItemInstanceID_t)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (float)_swig_go_4; 
  
  result = (bool)(arg1)->SetProperty(arg2,arg3,(char const *)arg4,arg5);
  _swig_go_result = result; 
  free(arg4); 
  return _swig_go_result;
}


bool _wrap_ISteamInventory_SubmitUpdateProperties_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0, long long _swig_go_1, intgo *_swig_go_2) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  SteamInventoryUpdateHandle_t arg2 ;
  SteamInventoryResult_t *arg3 = (SteamInventoryResult_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  arg2 = (SteamInventoryUpdateHandle_t)_swig_go_1; 
  arg3 = *(SteamInventoryResult_t **)&_swig_go_2; 
  
  result = (bool)(arg1)->SubmitUpdateProperties(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamInventory_steam_fb253aa6b5654893(ISteamInventory *_swig_go_0) {
  ISteamInventory *arg1 = (ISteamInventory *) 0 ;
  
  arg1 = *(ISteamInventory **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamInventoryResultReady_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamInventoryResultReady_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryResultReady_t_m_handle_set_steam_fb253aa6b5654893(SteamInventoryResultReady_t *_swig_go_0, intgo _swig_go_1) {
  SteamInventoryResultReady_t *arg1 = (SteamInventoryResultReady_t *) 0 ;
  SteamInventoryResult_t arg2 ;
  
  arg1 = *(SteamInventoryResultReady_t **)&_swig_go_0; 
  arg2 = (SteamInventoryResult_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_handle = arg2;
  
}


intgo _wrap_SteamInventoryResultReady_t_m_handle_get_steam_fb253aa6b5654893(SteamInventoryResultReady_t *_swig_go_0) {
  SteamInventoryResultReady_t *arg1 = (SteamInventoryResultReady_t *) 0 ;
  SteamInventoryResult_t result;
  intgo _swig_go_result;
  
  arg1 = *(SteamInventoryResultReady_t **)&_swig_go_0; 
  
  result = (SteamInventoryResult_t) ((arg1)->m_handle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryResultReady_t_m_result_set_steam_fb253aa6b5654893(SteamInventoryResultReady_t *_swig_go_0, intgo _swig_go_1) {
  SteamInventoryResultReady_t *arg1 = (SteamInventoryResultReady_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SteamInventoryResultReady_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_result = arg2;
  
}


intgo _wrap_SteamInventoryResultReady_t_m_result_get_steam_fb253aa6b5654893(SteamInventoryResultReady_t *_swig_go_0) {
  SteamInventoryResultReady_t *arg1 = (SteamInventoryResultReady_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SteamInventoryResultReady_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_result);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


SteamInventoryResultReady_t *_wrap_new_SteamInventoryResultReady_t_steam_fb253aa6b5654893() {
  SteamInventoryResultReady_t *result = 0 ;
  SteamInventoryResultReady_t *_swig_go_result;
  
  
  result = (SteamInventoryResultReady_t *)new SteamInventoryResultReady_t();
  *(SteamInventoryResultReady_t **)&_swig_go_result = (SteamInventoryResultReady_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamInventoryResultReady_t_steam_fb253aa6b5654893(SteamInventoryResultReady_t *_swig_go_0) {
  SteamInventoryResultReady_t *arg1 = (SteamInventoryResultReady_t *) 0 ;
  
  arg1 = *(SteamInventoryResultReady_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamInventoryFullUpdate_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamInventoryFullUpdate_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryFullUpdate_t_m_handle_set_steam_fb253aa6b5654893(SteamInventoryFullUpdate_t *_swig_go_0, intgo _swig_go_1) {
  SteamInventoryFullUpdate_t *arg1 = (SteamInventoryFullUpdate_t *) 0 ;
  SteamInventoryResult_t arg2 ;
  
  arg1 = *(SteamInventoryFullUpdate_t **)&_swig_go_0; 
  arg2 = (SteamInventoryResult_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_handle = arg2;
  
}


intgo _wrap_SteamInventoryFullUpdate_t_m_handle_get_steam_fb253aa6b5654893(SteamInventoryFullUpdate_t *_swig_go_0) {
  SteamInventoryFullUpdate_t *arg1 = (SteamInventoryFullUpdate_t *) 0 ;
  SteamInventoryResult_t result;
  intgo _swig_go_result;
  
  arg1 = *(SteamInventoryFullUpdate_t **)&_swig_go_0; 
  
  result = (SteamInventoryResult_t) ((arg1)->m_handle);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamInventoryFullUpdate_t *_wrap_new_SteamInventoryFullUpdate_t_steam_fb253aa6b5654893() {
  SteamInventoryFullUpdate_t *result = 0 ;
  SteamInventoryFullUpdate_t *_swig_go_result;
  
  
  result = (SteamInventoryFullUpdate_t *)new SteamInventoryFullUpdate_t();
  *(SteamInventoryFullUpdate_t **)&_swig_go_result = (SteamInventoryFullUpdate_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamInventoryFullUpdate_t_steam_fb253aa6b5654893(SteamInventoryFullUpdate_t *_swig_go_0) {
  SteamInventoryFullUpdate_t *arg1 = (SteamInventoryFullUpdate_t *) 0 ;
  
  arg1 = *(SteamInventoryFullUpdate_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamInventoryDefinitionUpdate_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamInventoryDefinitionUpdate_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


SteamInventoryDefinitionUpdate_t *_wrap_new_SteamInventoryDefinitionUpdate_t_steam_fb253aa6b5654893() {
  SteamInventoryDefinitionUpdate_t *result = 0 ;
  SteamInventoryDefinitionUpdate_t *_swig_go_result;
  
  
  result = (SteamInventoryDefinitionUpdate_t *)new SteamInventoryDefinitionUpdate_t();
  *(SteamInventoryDefinitionUpdate_t **)&_swig_go_result = (SteamInventoryDefinitionUpdate_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamInventoryDefinitionUpdate_t_steam_fb253aa6b5654893(SteamInventoryDefinitionUpdate_t *_swig_go_0) {
  SteamInventoryDefinitionUpdate_t *arg1 = (SteamInventoryDefinitionUpdate_t *) 0 ;
  
  arg1 = *(SteamInventoryDefinitionUpdate_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamInventoryEligiblePromoItemDefIDs_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamInventoryEligiblePromoItemDefIDs_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryEligiblePromoItemDefIDs_t_m_result_set_steam_fb253aa6b5654893(SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_0, intgo _swig_go_1) {
  SteamInventoryEligiblePromoItemDefIDs_t *arg1 = (SteamInventoryEligiblePromoItemDefIDs_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_result = arg2;
  
}


intgo _wrap_SteamInventoryEligiblePromoItemDefIDs_t_m_result_get_steam_fb253aa6b5654893(SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_0) {
  SteamInventoryEligiblePromoItemDefIDs_t *arg1 = (SteamInventoryEligiblePromoItemDefIDs_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_result);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryEligiblePromoItemDefIDs_t_m_steamID_set_steam_fb253aa6b5654893(SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_0, CSteamID *_swig_go_1) {
  SteamInventoryEligiblePromoItemDefIDs_t *arg1 = (SteamInventoryEligiblePromoItemDefIDs_t *) 0 ;
  CSteamID *arg2 = (CSteamID *) 0 ;
  
  arg1 = *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_0; 
  arg2 = *(CSteamID **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_steamID = *arg2;
  
}


CSteamID *_wrap_SteamInventoryEligiblePromoItemDefIDs_t_m_steamID_get_steam_fb253aa6b5654893(SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_0) {
  SteamInventoryEligiblePromoItemDefIDs_t *arg1 = (SteamInventoryEligiblePromoItemDefIDs_t *) 0 ;
  CSteamID *result = 0 ;
  CSteamID *_swig_go_result;
  
  arg1 = *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_0; 
  
  result = (CSteamID *)& ((arg1)->m_steamID);
  *(CSteamID **)&_swig_go_result = (CSteamID *)result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryEligiblePromoItemDefIDs_t_m_numEligiblePromoItemDefs_set_steam_fb253aa6b5654893(SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_0, intgo _swig_go_1) {
  SteamInventoryEligiblePromoItemDefIDs_t *arg1 = (SteamInventoryEligiblePromoItemDefIDs_t *) 0 ;
  int arg2 ;
  
  arg1 = *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numEligiblePromoItemDefs = arg2;
  
}


intgo _wrap_SteamInventoryEligiblePromoItemDefIDs_t_m_numEligiblePromoItemDefs_get_steam_fb253aa6b5654893(SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_0) {
  SteamInventoryEligiblePromoItemDefIDs_t *arg1 = (SteamInventoryEligiblePromoItemDefIDs_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numEligiblePromoItemDefs);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryEligiblePromoItemDefIDs_t_m_bCachedData_set_steam_fb253aa6b5654893(SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_0, bool _swig_go_1) {
  SteamInventoryEligiblePromoItemDefIDs_t *arg1 = (SteamInventoryEligiblePromoItemDefIDs_t *) 0 ;
  bool arg2 ;
  
  arg1 = *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_bCachedData = arg2;
  
}


bool _wrap_SteamInventoryEligiblePromoItemDefIDs_t_m_bCachedData_get_steam_fb253aa6b5654893(SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_0) {
  SteamInventoryEligiblePromoItemDefIDs_t *arg1 = (SteamInventoryEligiblePromoItemDefIDs_t *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_bCachedData);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamInventoryEligiblePromoItemDefIDs_t *_wrap_new_SteamInventoryEligiblePromoItemDefIDs_t_steam_fb253aa6b5654893() {
  SteamInventoryEligiblePromoItemDefIDs_t *result = 0 ;
  SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_result;
  
  
  result = (SteamInventoryEligiblePromoItemDefIDs_t *)new SteamInventoryEligiblePromoItemDefIDs_t();
  *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_result = (SteamInventoryEligiblePromoItemDefIDs_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamInventoryEligiblePromoItemDefIDs_t_steam_fb253aa6b5654893(SteamInventoryEligiblePromoItemDefIDs_t *_swig_go_0) {
  SteamInventoryEligiblePromoItemDefIDs_t *arg1 = (SteamInventoryEligiblePromoItemDefIDs_t *) 0 ;
  
  arg1 = *(SteamInventoryEligiblePromoItemDefIDs_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamInventoryStartPurchaseResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamInventoryStartPurchaseResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryStartPurchaseResult_t_m_result_set_steam_fb253aa6b5654893(SteamInventoryStartPurchaseResult_t *_swig_go_0, intgo _swig_go_1) {
  SteamInventoryStartPurchaseResult_t *arg1 = (SteamInventoryStartPurchaseResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SteamInventoryStartPurchaseResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_result = arg2;
  
}


intgo _wrap_SteamInventoryStartPurchaseResult_t_m_result_get_steam_fb253aa6b5654893(SteamInventoryStartPurchaseResult_t *_swig_go_0) {
  SteamInventoryStartPurchaseResult_t *arg1 = (SteamInventoryStartPurchaseResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SteamInventoryStartPurchaseResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_result);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryStartPurchaseResult_t_m_ulOrderID_set_steam_fb253aa6b5654893(SteamInventoryStartPurchaseResult_t *_swig_go_0, long long _swig_go_1) {
  SteamInventoryStartPurchaseResult_t *arg1 = (SteamInventoryStartPurchaseResult_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(SteamInventoryStartPurchaseResult_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulOrderID = arg2;
  
}


long long _wrap_SteamInventoryStartPurchaseResult_t_m_ulOrderID_get_steam_fb253aa6b5654893(SteamInventoryStartPurchaseResult_t *_swig_go_0) {
  SteamInventoryStartPurchaseResult_t *arg1 = (SteamInventoryStartPurchaseResult_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(SteamInventoryStartPurchaseResult_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulOrderID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryStartPurchaseResult_t_m_ulTransID_set_steam_fb253aa6b5654893(SteamInventoryStartPurchaseResult_t *_swig_go_0, long long _swig_go_1) {
  SteamInventoryStartPurchaseResult_t *arg1 = (SteamInventoryStartPurchaseResult_t *) 0 ;
  uint64 arg2 ;
  
  arg1 = *(SteamInventoryStartPurchaseResult_t **)&_swig_go_0; 
  arg2 = (uint64)_swig_go_1; 
  
  if (arg1) (arg1)->m_ulTransID = arg2;
  
}


long long _wrap_SteamInventoryStartPurchaseResult_t_m_ulTransID_get_steam_fb253aa6b5654893(SteamInventoryStartPurchaseResult_t *_swig_go_0) {
  SteamInventoryStartPurchaseResult_t *arg1 = (SteamInventoryStartPurchaseResult_t *) 0 ;
  uint64 result;
  long long _swig_go_result;
  
  arg1 = *(SteamInventoryStartPurchaseResult_t **)&_swig_go_0; 
  
  result = (uint64) ((arg1)->m_ulTransID);
  _swig_go_result = result; 
  return _swig_go_result;
}


SteamInventoryStartPurchaseResult_t *_wrap_new_SteamInventoryStartPurchaseResult_t_steam_fb253aa6b5654893() {
  SteamInventoryStartPurchaseResult_t *result = 0 ;
  SteamInventoryStartPurchaseResult_t *_swig_go_result;
  
  
  result = (SteamInventoryStartPurchaseResult_t *)new SteamInventoryStartPurchaseResult_t();
  *(SteamInventoryStartPurchaseResult_t **)&_swig_go_result = (SteamInventoryStartPurchaseResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamInventoryStartPurchaseResult_t_steam_fb253aa6b5654893(SteamInventoryStartPurchaseResult_t *_swig_go_0) {
  SteamInventoryStartPurchaseResult_t *arg1 = (SteamInventoryStartPurchaseResult_t *) 0 ;
  
  arg1 = *(SteamInventoryStartPurchaseResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamInventoryRequestPricesResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamInventoryRequestPricesResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryRequestPricesResult_t_m_result_set_steam_fb253aa6b5654893(SteamInventoryRequestPricesResult_t *_swig_go_0, intgo _swig_go_1) {
  SteamInventoryRequestPricesResult_t *arg1 = (SteamInventoryRequestPricesResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(SteamInventoryRequestPricesResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_result = arg2;
  
}


intgo _wrap_SteamInventoryRequestPricesResult_t_m_result_get_steam_fb253aa6b5654893(SteamInventoryRequestPricesResult_t *_swig_go_0) {
  SteamInventoryRequestPricesResult_t *arg1 = (SteamInventoryRequestPricesResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(SteamInventoryRequestPricesResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_result);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SteamInventoryRequestPricesResult_t_m_rgchCurrency_set_steam_fb253aa6b5654893(SteamInventoryRequestPricesResult_t *_swig_go_0, _gostring_ _swig_go_1) {
  SteamInventoryRequestPricesResult_t *arg1 = (SteamInventoryRequestPricesResult_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(SteamInventoryRequestPricesResult_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchCurrency, (const char *)arg2, 4-1);
      arg1->m_rgchCurrency[4-1] = 0;
    } else {
      arg1->m_rgchCurrency[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_SteamInventoryRequestPricesResult_t_m_rgchCurrency_get_steam_fb253aa6b5654893(SteamInventoryRequestPricesResult_t *_swig_go_0) {
  SteamInventoryRequestPricesResult_t *arg1 = (SteamInventoryRequestPricesResult_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(SteamInventoryRequestPricesResult_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchCurrency);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


SteamInventoryRequestPricesResult_t *_wrap_new_SteamInventoryRequestPricesResult_t_steam_fb253aa6b5654893() {
  SteamInventoryRequestPricesResult_t *result = 0 ;
  SteamInventoryRequestPricesResult_t *_swig_go_result;
  
  
  result = (SteamInventoryRequestPricesResult_t *)new SteamInventoryRequestPricesResult_t();
  *(SteamInventoryRequestPricesResult_t **)&_swig_go_result = (SteamInventoryRequestPricesResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamInventoryRequestPricesResult_t_steam_fb253aa6b5654893(SteamInventoryRequestPricesResult_t *_swig_go_0) {
  SteamInventoryRequestPricesResult_t *arg1 = (SteamInventoryRequestPricesResult_t *) 0 ;
  
  arg1 = *(SteamInventoryRequestPricesResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ISteamVideo_GetVideoURL_steam_fb253aa6b5654893(ISteamVideo *_swig_go_0, intgo _swig_go_1) {
  ISteamVideo *arg1 = (ISteamVideo *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(ISteamVideo **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  (arg1)->GetVideoURL(arg2);
  
}


bool _wrap_ISteamVideo_IsBroadcasting_steam_fb253aa6b5654893(ISteamVideo *_swig_go_0, intgo *_swig_go_1) {
  ISteamVideo *arg1 = (ISteamVideo *) 0 ;
  int *arg2 = (int *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamVideo **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)(arg1)->IsBroadcasting(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ISteamVideo_GetOPFSettings_steam_fb253aa6b5654893(ISteamVideo *_swig_go_0, intgo _swig_go_1) {
  ISteamVideo *arg1 = (ISteamVideo *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(ISteamVideo **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  (arg1)->GetOPFSettings(arg2);
  
}


bool _wrap_ISteamVideo_GetOPFStringForApp_steam_fb253aa6b5654893(ISteamVideo *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, intgo *_swig_go_3) {
  ISteamVideo *arg1 = (ISteamVideo *) 0 ;
  AppId_t arg2 ;
  char *arg3 = (char *) 0 ;
  int32 *arg4 = (int32 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamVideo **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(int32 **)&_swig_go_3; 
  
  result = (bool)(arg1)->GetOPFStringForApp(arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


void _wrap_delete_ISteamVideo_steam_fb253aa6b5654893(ISteamVideo *_swig_go_0) {
  ISteamVideo *arg1 = (ISteamVideo *) 0 ;
  
  arg1 = *(ISteamVideo **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_BroadcastUploadStart_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = BroadcastUploadStart_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


BroadcastUploadStart_t *_wrap_new_BroadcastUploadStart_t_steam_fb253aa6b5654893() {
  BroadcastUploadStart_t *result = 0 ;
  BroadcastUploadStart_t *_swig_go_result;
  
  
  result = (BroadcastUploadStart_t *)new BroadcastUploadStart_t();
  *(BroadcastUploadStart_t **)&_swig_go_result = (BroadcastUploadStart_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_BroadcastUploadStart_t_steam_fb253aa6b5654893(BroadcastUploadStart_t *_swig_go_0) {
  BroadcastUploadStart_t *arg1 = (BroadcastUploadStart_t *) 0 ;
  
  arg1 = *(BroadcastUploadStart_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_BroadcastUploadStop_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = BroadcastUploadStop_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_BroadcastUploadStop_t_m_eResult_set_steam_fb253aa6b5654893(BroadcastUploadStop_t *_swig_go_0, intgo _swig_go_1) {
  BroadcastUploadStop_t *arg1 = (BroadcastUploadStop_t *) 0 ;
  EBroadcastUploadResult arg2 ;
  
  arg1 = *(BroadcastUploadStop_t **)&_swig_go_0; 
  arg2 = (EBroadcastUploadResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_BroadcastUploadStop_t_m_eResult_get_steam_fb253aa6b5654893(BroadcastUploadStop_t *_swig_go_0) {
  BroadcastUploadStop_t *arg1 = (BroadcastUploadStop_t *) 0 ;
  EBroadcastUploadResult result;
  intgo _swig_go_result;
  
  arg1 = *(BroadcastUploadStop_t **)&_swig_go_0; 
  
  result = (EBroadcastUploadResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


BroadcastUploadStop_t *_wrap_new_BroadcastUploadStop_t_steam_fb253aa6b5654893() {
  BroadcastUploadStop_t *result = 0 ;
  BroadcastUploadStop_t *_swig_go_result;
  
  
  result = (BroadcastUploadStop_t *)new BroadcastUploadStop_t();
  *(BroadcastUploadStop_t **)&_swig_go_result = (BroadcastUploadStop_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_BroadcastUploadStop_t_steam_fb253aa6b5654893(BroadcastUploadStop_t *_swig_go_0) {
  BroadcastUploadStop_t *arg1 = (BroadcastUploadStop_t *) 0 ;
  
  arg1 = *(BroadcastUploadStop_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GetVideoURLResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GetVideoURLResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GetVideoURLResult_t_m_eResult_set_steam_fb253aa6b5654893(GetVideoURLResult_t *_swig_go_0, intgo _swig_go_1) {
  GetVideoURLResult_t *arg1 = (GetVideoURLResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(GetVideoURLResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_GetVideoURLResult_t_m_eResult_get_steam_fb253aa6b5654893(GetVideoURLResult_t *_swig_go_0) {
  GetVideoURLResult_t *arg1 = (GetVideoURLResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(GetVideoURLResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GetVideoURLResult_t_m_unVideoAppID_set_steam_fb253aa6b5654893(GetVideoURLResult_t *_swig_go_0, intgo _swig_go_1) {
  GetVideoURLResult_t *arg1 = (GetVideoURLResult_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(GetVideoURLResult_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_unVideoAppID = arg2;
  
}


intgo _wrap_GetVideoURLResult_t_m_unVideoAppID_get_steam_fb253aa6b5654893(GetVideoURLResult_t *_swig_go_0) {
  GetVideoURLResult_t *arg1 = (GetVideoURLResult_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(GetVideoURLResult_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_unVideoAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GetVideoURLResult_t_m_rgchURL_set_steam_fb253aa6b5654893(GetVideoURLResult_t *_swig_go_0, _gostring_ _swig_go_1) {
  GetVideoURLResult_t *arg1 = (GetVideoURLResult_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(GetVideoURLResult_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_rgchURL, (const char *)arg2, 256-1);
      arg1->m_rgchURL[256-1] = 0;
    } else {
      arg1->m_rgchURL[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_GetVideoURLResult_t_m_rgchURL_get_steam_fb253aa6b5654893(GetVideoURLResult_t *_swig_go_0) {
  GetVideoURLResult_t *arg1 = (GetVideoURLResult_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(GetVideoURLResult_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_rgchURL);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


GetVideoURLResult_t *_wrap_new_GetVideoURLResult_t_steam_fb253aa6b5654893() {
  GetVideoURLResult_t *result = 0 ;
  GetVideoURLResult_t *_swig_go_result;
  
  
  result = (GetVideoURLResult_t *)new GetVideoURLResult_t();
  *(GetVideoURLResult_t **)&_swig_go_result = (GetVideoURLResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GetVideoURLResult_t_steam_fb253aa6b5654893(GetVideoURLResult_t *_swig_go_0) {
  GetVideoURLResult_t *arg1 = (GetVideoURLResult_t *) 0 ;
  
  arg1 = *(GetVideoURLResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_GetOPFSettingsResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = GetOPFSettingsResult_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GetOPFSettingsResult_t_m_eResult_set_steam_fb253aa6b5654893(GetOPFSettingsResult_t *_swig_go_0, intgo _swig_go_1) {
  GetOPFSettingsResult_t *arg1 = (GetOPFSettingsResult_t *) 0 ;
  EResult arg2 ;
  
  arg1 = *(GetOPFSettingsResult_t **)&_swig_go_0; 
  arg2 = (EResult)_swig_go_1; 
  
  if (arg1) (arg1)->m_eResult = arg2;
  
}


intgo _wrap_GetOPFSettingsResult_t_m_eResult_get_steam_fb253aa6b5654893(GetOPFSettingsResult_t *_swig_go_0) {
  GetOPFSettingsResult_t *arg1 = (GetOPFSettingsResult_t *) 0 ;
  EResult result;
  intgo _swig_go_result;
  
  arg1 = *(GetOPFSettingsResult_t **)&_swig_go_0; 
  
  result = (EResult) ((arg1)->m_eResult);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_GetOPFSettingsResult_t_m_unVideoAppID_set_steam_fb253aa6b5654893(GetOPFSettingsResult_t *_swig_go_0, intgo _swig_go_1) {
  GetOPFSettingsResult_t *arg1 = (GetOPFSettingsResult_t *) 0 ;
  AppId_t arg2 ;
  
  arg1 = *(GetOPFSettingsResult_t **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  if (arg1) (arg1)->m_unVideoAppID = arg2;
  
}


intgo _wrap_GetOPFSettingsResult_t_m_unVideoAppID_get_steam_fb253aa6b5654893(GetOPFSettingsResult_t *_swig_go_0) {
  GetOPFSettingsResult_t *arg1 = (GetOPFSettingsResult_t *) 0 ;
  AppId_t result;
  intgo _swig_go_result;
  
  arg1 = *(GetOPFSettingsResult_t **)&_swig_go_0; 
  
  result = (AppId_t) ((arg1)->m_unVideoAppID);
  _swig_go_result = result; 
  return _swig_go_result;
}


GetOPFSettingsResult_t *_wrap_new_GetOPFSettingsResult_t_steam_fb253aa6b5654893() {
  GetOPFSettingsResult_t *result = 0 ;
  GetOPFSettingsResult_t *_swig_go_result;
  
  
  result = (GetOPFSettingsResult_t *)new GetOPFSettingsResult_t();
  *(GetOPFSettingsResult_t **)&_swig_go_result = (GetOPFSettingsResult_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_GetOPFSettingsResult_t_steam_fb253aa6b5654893(GetOPFSettingsResult_t *_swig_go_0) {
  GetOPFSettingsResult_t *arg1 = (GetOPFSettingsResult_t *) 0 ;
  
  arg1 = *(GetOPFSettingsResult_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_EFeatureInvalid_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureInvalid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureStore_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureStore;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureCommunity_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureCommunity;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureProfile_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureProfile;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureFriends_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureFriends;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureNews_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureNews;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureTrading_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureTrading;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureSettings_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureSettings;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureConsole_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureConsole;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureBrowser_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureBrowser;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureParentalSetup_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureParentalSetup;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureLibrary_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureLibrary;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureTest_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureTest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_k_EFeatureMax_steam_fb253aa6b5654893() {
  EParentalFeature result;
  intgo _swig_go_result;
  
  
  result = k_EFeatureMax;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_ISteamParentalSettings_BIsParentalLockEnabled_steam_fb253aa6b5654893(ISteamParentalSettings *_swig_go_0) {
  ISteamParentalSettings *arg1 = (ISteamParentalSettings *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamParentalSettings **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsParentalLockEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamParentalSettings_BIsParentalLockLocked_steam_fb253aa6b5654893(ISteamParentalSettings *_swig_go_0) {
  ISteamParentalSettings *arg1 = (ISteamParentalSettings *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamParentalSettings **)&_swig_go_0; 
  
  result = (bool)(arg1)->BIsParentalLockLocked();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamParentalSettings_BIsAppBlocked_steam_fb253aa6b5654893(ISteamParentalSettings *_swig_go_0, intgo _swig_go_1) {
  ISteamParentalSettings *arg1 = (ISteamParentalSettings *) 0 ;
  AppId_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamParentalSettings **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  result = (bool)(arg1)->BIsAppBlocked(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamParentalSettings_BIsAppInBlockList_steam_fb253aa6b5654893(ISteamParentalSettings *_swig_go_0, intgo _swig_go_1) {
  ISteamParentalSettings *arg1 = (ISteamParentalSettings *) 0 ;
  AppId_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamParentalSettings **)&_swig_go_0; 
  arg2 = (AppId_t)_swig_go_1; 
  
  result = (bool)(arg1)->BIsAppInBlockList(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamParentalSettings_BIsFeatureBlocked_steam_fb253aa6b5654893(ISteamParentalSettings *_swig_go_0, intgo _swig_go_1) {
  ISteamParentalSettings *arg1 = (ISteamParentalSettings *) 0 ;
  EParentalFeature arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamParentalSettings **)&_swig_go_0; 
  arg2 = (EParentalFeature)_swig_go_1; 
  
  result = (bool)(arg1)->BIsFeatureBlocked(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ISteamParentalSettings_BIsFeatureInBlockList_steam_fb253aa6b5654893(ISteamParentalSettings *_swig_go_0, intgo _swig_go_1) {
  ISteamParentalSettings *arg1 = (ISteamParentalSettings *) 0 ;
  EParentalFeature arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ISteamParentalSettings **)&_swig_go_0; 
  arg2 = (EParentalFeature)_swig_go_1; 
  
  result = (bool)(arg1)->BIsFeatureInBlockList(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ISteamParentalSettings_steam_fb253aa6b5654893(ISteamParentalSettings *_swig_go_0) {
  ISteamParentalSettings *arg1 = (ISteamParentalSettings *) 0 ;
  
  arg1 = *(ISteamParentalSettings **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_k_iCallback_SteamParentalSettingsChanged_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = SteamParentalSettingsChanged_t::k_iCallback;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


SteamParentalSettingsChanged_t *_wrap_new_SteamParentalSettingsChanged_t_steam_fb253aa6b5654893() {
  SteamParentalSettingsChanged_t *result = 0 ;
  SteamParentalSettingsChanged_t *_swig_go_result;
  
  
  result = (SteamParentalSettingsChanged_t *)new SteamParentalSettingsChanged_t();
  *(SteamParentalSettingsChanged_t **)&_swig_go_result = (SteamParentalSettingsChanged_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_SteamParentalSettingsChanged_t_steam_fb253aa6b5654893(SteamParentalSettingsChanged_t *_swig_go_0) {
  SteamParentalSettingsChanged_t *arg1 = (SteamParentalSettingsChanged_t *) 0 ;
  
  arg1 = *(SteamParentalSettingsChanged_t **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_SteamAPI_Init_steam_fb253aa6b5654893() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)SteamAPI_Init();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamAPI_Shutdown_steam_fb253aa6b5654893() {
  SteamAPI_Shutdown();
  
}


bool _wrap_SteamAPI_RestartAppIfNecessary_steam_fb253aa6b5654893(intgo _swig_go_0) {
  uint32 arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (uint32)_swig_go_0; 
  
  result = (bool)SteamAPI_RestartAppIfNecessary(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamAPI_ReleaseCurrentThreadMemory_steam_fb253aa6b5654893() {
  SteamAPI_ReleaseCurrentThreadMemory();
  
}


void _wrap_SteamAPI_WriteMiniDump_steam_fb253aa6b5654893(intgo _swig_go_0, void *_swig_go_1, intgo _swig_go_2) {
  uint32 arg1 ;
  void *arg2 = (void *) 0 ;
  uint32 arg3 ;
  
  arg1 = (uint32)_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (uint32)_swig_go_2; 
  
  SteamAPI_WriteMiniDump(arg1,arg2,arg3);
  
}


void _wrap_SteamAPI_SetMiniDumpComment_steam_fb253aa6b5654893(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  SteamAPI_SetMiniDumpComment((char const *)arg1);
  
  free(arg1); 
}


ISteamClient *_wrap_SteamClient_steam_fb253aa6b5654893() {
  ISteamClient *result = 0 ;
  ISteamClient *_swig_go_result;
  
  
  result = (ISteamClient *)SteamClient();
  *(ISteamClient **)&_swig_go_result = (ISteamClient *)result; 
  return _swig_go_result;
}


ISteamUser *_wrap_SteamUser_steam_fb253aa6b5654893() {
  ISteamUser *result = 0 ;
  ISteamUser *_swig_go_result;
  
  
  result = (ISteamUser *)SteamUser();
  *(ISteamUser **)&_swig_go_result = (ISteamUser *)result; 
  return _swig_go_result;
}


ISteamFriends *_wrap_SteamFriends_steam_fb253aa6b5654893() {
  ISteamFriends *result = 0 ;
  ISteamFriends *_swig_go_result;
  
  
  result = (ISteamFriends *)SteamFriends();
  *(ISteamFriends **)&_swig_go_result = (ISteamFriends *)result; 
  return _swig_go_result;
}


ISteamUtils *_wrap_SteamUtils_steam_fb253aa6b5654893() {
  ISteamUtils *result = 0 ;
  ISteamUtils *_swig_go_result;
  
  
  result = (ISteamUtils *)SteamUtils();
  *(ISteamUtils **)&_swig_go_result = (ISteamUtils *)result; 
  return _swig_go_result;
}


ISteamMatchmaking *_wrap_SteamMatchmaking_steam_fb253aa6b5654893() {
  ISteamMatchmaking *result = 0 ;
  ISteamMatchmaking *_swig_go_result;
  
  
  result = (ISteamMatchmaking *)SteamMatchmaking();
  *(ISteamMatchmaking **)&_swig_go_result = (ISteamMatchmaking *)result; 
  return _swig_go_result;
}


ISteamUserStats *_wrap_SteamUserStats_steam_fb253aa6b5654893() {
  ISteamUserStats *result = 0 ;
  ISteamUserStats *_swig_go_result;
  
  
  result = (ISteamUserStats *)SteamUserStats();
  *(ISteamUserStats **)&_swig_go_result = (ISteamUserStats *)result; 
  return _swig_go_result;
}


ISteamApps *_wrap_SteamApps_steam_fb253aa6b5654893() {
  ISteamApps *result = 0 ;
  ISteamApps *_swig_go_result;
  
  
  result = (ISteamApps *)SteamApps();
  *(ISteamApps **)&_swig_go_result = (ISteamApps *)result; 
  return _swig_go_result;
}


ISteamNetworking *_wrap_SteamNetworking_steam_fb253aa6b5654893() {
  ISteamNetworking *result = 0 ;
  ISteamNetworking *_swig_go_result;
  
  
  result = (ISteamNetworking *)SteamNetworking();
  *(ISteamNetworking **)&_swig_go_result = (ISteamNetworking *)result; 
  return _swig_go_result;
}


ISteamMatchmakingServers *_wrap_SteamMatchmakingServers_steam_fb253aa6b5654893() {
  ISteamMatchmakingServers *result = 0 ;
  ISteamMatchmakingServers *_swig_go_result;
  
  
  result = (ISteamMatchmakingServers *)SteamMatchmakingServers();
  *(ISteamMatchmakingServers **)&_swig_go_result = (ISteamMatchmakingServers *)result; 
  return _swig_go_result;
}


ISteamRemoteStorage *_wrap_SteamRemoteStorage_steam_fb253aa6b5654893() {
  ISteamRemoteStorage *result = 0 ;
  ISteamRemoteStorage *_swig_go_result;
  
  
  result = (ISteamRemoteStorage *)SteamRemoteStorage();
  *(ISteamRemoteStorage **)&_swig_go_result = (ISteamRemoteStorage *)result; 
  return _swig_go_result;
}


ISteamScreenshots *_wrap_SteamScreenshots_steam_fb253aa6b5654893() {
  ISteamScreenshots *result = 0 ;
  ISteamScreenshots *_swig_go_result;
  
  
  result = (ISteamScreenshots *)SteamScreenshots();
  *(ISteamScreenshots **)&_swig_go_result = (ISteamScreenshots *)result; 
  return _swig_go_result;
}


ISteamHTTP *_wrap_SteamHTTP_steam_fb253aa6b5654893() {
  ISteamHTTP *result = 0 ;
  ISteamHTTP *_swig_go_result;
  
  
  result = (ISteamHTTP *)SteamHTTP();
  *(ISteamHTTP **)&_swig_go_result = (ISteamHTTP *)result; 
  return _swig_go_result;
}


ISteamController *_wrap_SteamController_steam_fb253aa6b5654893() {
  ISteamController *result = 0 ;
  ISteamController *_swig_go_result;
  
  
  result = (ISteamController *)SteamController();
  *(ISteamController **)&_swig_go_result = (ISteamController *)result; 
  return _swig_go_result;
}


ISteamUGC *_wrap_SteamUGC_steam_fb253aa6b5654893() {
  ISteamUGC *result = 0 ;
  ISteamUGC *_swig_go_result;
  
  
  result = (ISteamUGC *)SteamUGC();
  *(ISteamUGC **)&_swig_go_result = (ISteamUGC *)result; 
  return _swig_go_result;
}


ISteamAppList *_wrap_SteamAppList_steam_fb253aa6b5654893() {
  ISteamAppList *result = 0 ;
  ISteamAppList *_swig_go_result;
  
  
  result = (ISteamAppList *)SteamAppList();
  *(ISteamAppList **)&_swig_go_result = (ISteamAppList *)result; 
  return _swig_go_result;
}


ISteamMusic *_wrap_SteamMusic_steam_fb253aa6b5654893() {
  ISteamMusic *result = 0 ;
  ISteamMusic *_swig_go_result;
  
  
  result = (ISteamMusic *)SteamMusic();
  *(ISteamMusic **)&_swig_go_result = (ISteamMusic *)result; 
  return _swig_go_result;
}


ISteamMusicRemote *_wrap_SteamMusicRemote_steam_fb253aa6b5654893() {
  ISteamMusicRemote *result = 0 ;
  ISteamMusicRemote *_swig_go_result;
  
  
  result = (ISteamMusicRemote *)SteamMusicRemote();
  *(ISteamMusicRemote **)&_swig_go_result = (ISteamMusicRemote *)result; 
  return _swig_go_result;
}


ISteamHTMLSurface *_wrap_SteamHTMLSurface_steam_fb253aa6b5654893() {
  ISteamHTMLSurface *result = 0 ;
  ISteamHTMLSurface *_swig_go_result;
  
  
  result = (ISteamHTMLSurface *)SteamHTMLSurface();
  *(ISteamHTMLSurface **)&_swig_go_result = (ISteamHTMLSurface *)result; 
  return _swig_go_result;
}


ISteamInventory *_wrap_SteamInventory_steam_fb253aa6b5654893() {
  ISteamInventory *result = 0 ;
  ISteamInventory *_swig_go_result;
  
  
  result = (ISteamInventory *)SteamInventory();
  *(ISteamInventory **)&_swig_go_result = (ISteamInventory *)result; 
  return _swig_go_result;
}


ISteamVideo *_wrap_SteamVideo_steam_fb253aa6b5654893() {
  ISteamVideo *result = 0 ;
  ISteamVideo *_swig_go_result;
  
  
  result = (ISteamVideo *)SteamVideo();
  *(ISteamVideo **)&_swig_go_result = (ISteamVideo *)result; 
  return _swig_go_result;
}


ISteamParentalSettings *_wrap_SteamParentalSettings_steam_fb253aa6b5654893() {
  ISteamParentalSettings *result = 0 ;
  ISteamParentalSettings *_swig_go_result;
  
  
  result = (ISteamParentalSettings *)SteamParentalSettings();
  *(ISteamParentalSettings **)&_swig_go_result = (ISteamParentalSettings *)result; 
  return _swig_go_result;
}


CSteamAPIContext *_wrap_new_CSteamAPIContext_steam_fb253aa6b5654893() {
  CSteamAPIContext *result = 0 ;
  CSteamAPIContext *_swig_go_result;
  
  
  result = (CSteamAPIContext *)new CSteamAPIContext();
  *(CSteamAPIContext **)&_swig_go_result = (CSteamAPIContext *)result; 
  return _swig_go_result;
}


void _wrap_CSteamAPIContext_Clear_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  (arg1)->Clear();
  
}


bool _wrap_CSteamAPIContext_Init_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (bool)(arg1)->Init();
  _swig_go_result = result; 
  return _swig_go_result;
}


ISteamClient *_wrap_CSteamAPIContext_SteamClient_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamClient *result = 0 ;
  ISteamClient *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamClient *)((CSteamAPIContext const *)arg1)->SteamClient();
  *(ISteamClient **)&_swig_go_result = (ISteamClient *)result; 
  return _swig_go_result;
}


ISteamUser *_wrap_CSteamAPIContext_SteamUser_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamUser *result = 0 ;
  ISteamUser *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamUser *)((CSteamAPIContext const *)arg1)->SteamUser();
  *(ISteamUser **)&_swig_go_result = (ISteamUser *)result; 
  return _swig_go_result;
}


ISteamFriends *_wrap_CSteamAPIContext_SteamFriends_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamFriends *result = 0 ;
  ISteamFriends *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamFriends *)((CSteamAPIContext const *)arg1)->SteamFriends();
  *(ISteamFriends **)&_swig_go_result = (ISteamFriends *)result; 
  return _swig_go_result;
}


ISteamUtils *_wrap_CSteamAPIContext_SteamUtils_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamUtils *result = 0 ;
  ISteamUtils *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamUtils *)((CSteamAPIContext const *)arg1)->SteamUtils();
  *(ISteamUtils **)&_swig_go_result = (ISteamUtils *)result; 
  return _swig_go_result;
}


ISteamMatchmaking *_wrap_CSteamAPIContext_SteamMatchmaking_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamMatchmaking *result = 0 ;
  ISteamMatchmaking *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamMatchmaking *)((CSteamAPIContext const *)arg1)->SteamMatchmaking();
  *(ISteamMatchmaking **)&_swig_go_result = (ISteamMatchmaking *)result; 
  return _swig_go_result;
}


ISteamUserStats *_wrap_CSteamAPIContext_SteamUserStats_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamUserStats *result = 0 ;
  ISteamUserStats *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamUserStats *)((CSteamAPIContext const *)arg1)->SteamUserStats();
  *(ISteamUserStats **)&_swig_go_result = (ISteamUserStats *)result; 
  return _swig_go_result;
}


ISteamApps *_wrap_CSteamAPIContext_SteamApps_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamApps *result = 0 ;
  ISteamApps *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamApps *)((CSteamAPIContext const *)arg1)->SteamApps();
  *(ISteamApps **)&_swig_go_result = (ISteamApps *)result; 
  return _swig_go_result;
}


ISteamMatchmakingServers *_wrap_CSteamAPIContext_SteamMatchmakingServers_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamMatchmakingServers *result = 0 ;
  ISteamMatchmakingServers *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamMatchmakingServers *)((CSteamAPIContext const *)arg1)->SteamMatchmakingServers();
  *(ISteamMatchmakingServers **)&_swig_go_result = (ISteamMatchmakingServers *)result; 
  return _swig_go_result;
}


ISteamNetworking *_wrap_CSteamAPIContext_SteamNetworking_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamNetworking *result = 0 ;
  ISteamNetworking *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamNetworking *)((CSteamAPIContext const *)arg1)->SteamNetworking();
  *(ISteamNetworking **)&_swig_go_result = (ISteamNetworking *)result; 
  return _swig_go_result;
}


ISteamRemoteStorage *_wrap_CSteamAPIContext_SteamRemoteStorage_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamRemoteStorage *result = 0 ;
  ISteamRemoteStorage *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamRemoteStorage *)((CSteamAPIContext const *)arg1)->SteamRemoteStorage();
  *(ISteamRemoteStorage **)&_swig_go_result = (ISteamRemoteStorage *)result; 
  return _swig_go_result;
}


ISteamScreenshots *_wrap_CSteamAPIContext_SteamScreenshots_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamScreenshots *result = 0 ;
  ISteamScreenshots *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamScreenshots *)((CSteamAPIContext const *)arg1)->SteamScreenshots();
  *(ISteamScreenshots **)&_swig_go_result = (ISteamScreenshots *)result; 
  return _swig_go_result;
}


ISteamHTTP *_wrap_CSteamAPIContext_SteamHTTP_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamHTTP *result = 0 ;
  ISteamHTTP *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamHTTP *)((CSteamAPIContext const *)arg1)->SteamHTTP();
  *(ISteamHTTP **)&_swig_go_result = (ISteamHTTP *)result; 
  return _swig_go_result;
}


ISteamController *_wrap_CSteamAPIContext_SteamController_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamController *result = 0 ;
  ISteamController *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamController *)((CSteamAPIContext const *)arg1)->SteamController();
  *(ISteamController **)&_swig_go_result = (ISteamController *)result; 
  return _swig_go_result;
}


ISteamUGC *_wrap_CSteamAPIContext_SteamUGC_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamUGC *result = 0 ;
  ISteamUGC *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamUGC *)((CSteamAPIContext const *)arg1)->SteamUGC();
  *(ISteamUGC **)&_swig_go_result = (ISteamUGC *)result; 
  return _swig_go_result;
}


ISteamAppList *_wrap_CSteamAPIContext_SteamAppList_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamAppList *result = 0 ;
  ISteamAppList *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamAppList *)((CSteamAPIContext const *)arg1)->SteamAppList();
  *(ISteamAppList **)&_swig_go_result = (ISteamAppList *)result; 
  return _swig_go_result;
}


ISteamMusic *_wrap_CSteamAPIContext_SteamMusic_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamMusic *result = 0 ;
  ISteamMusic *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamMusic *)((CSteamAPIContext const *)arg1)->SteamMusic();
  *(ISteamMusic **)&_swig_go_result = (ISteamMusic *)result; 
  return _swig_go_result;
}


ISteamMusicRemote *_wrap_CSteamAPIContext_SteamMusicRemote_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamMusicRemote *result = 0 ;
  ISteamMusicRemote *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamMusicRemote *)((CSteamAPIContext const *)arg1)->SteamMusicRemote();
  *(ISteamMusicRemote **)&_swig_go_result = (ISteamMusicRemote *)result; 
  return _swig_go_result;
}


ISteamHTMLSurface *_wrap_CSteamAPIContext_SteamHTMLSurface_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamHTMLSurface *result = 0 ;
  ISteamHTMLSurface *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamHTMLSurface *)((CSteamAPIContext const *)arg1)->SteamHTMLSurface();
  *(ISteamHTMLSurface **)&_swig_go_result = (ISteamHTMLSurface *)result; 
  return _swig_go_result;
}


ISteamInventory *_wrap_CSteamAPIContext_SteamInventory_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamInventory *result = 0 ;
  ISteamInventory *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamInventory *)((CSteamAPIContext const *)arg1)->SteamInventory();
  *(ISteamInventory **)&_swig_go_result = (ISteamInventory *)result; 
  return _swig_go_result;
}


ISteamVideo *_wrap_CSteamAPIContext_SteamVideo_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamVideo *result = 0 ;
  ISteamVideo *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamVideo *)((CSteamAPIContext const *)arg1)->SteamVideo();
  *(ISteamVideo **)&_swig_go_result = (ISteamVideo *)result; 
  return _swig_go_result;
}


ISteamParentalSettings *_wrap_CSteamAPIContext_SteamParentalSettings_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  ISteamParentalSettings *result = 0 ;
  ISteamParentalSettings *_swig_go_result;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  result = (ISteamParentalSettings *)((CSteamAPIContext const *)arg1)->SteamParentalSettings();
  *(ISteamParentalSettings **)&_swig_go_result = (ISteamParentalSettings *)result; 
  return _swig_go_result;
}


void _wrap_delete_CSteamAPIContext_steam_fb253aa6b5654893(CSteamAPIContext *_swig_go_0) {
  CSteamAPIContext *arg1 = (CSteamAPIContext *) 0 ;
  
  arg1 = *(CSteamAPIContext **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SteamAPI_RunCallbacks_steam_fb253aa6b5654893() {
  SteamAPI_RunCallbacks();
  
}


void _wrap_SteamAPI_RegisterCallback_steam_fb253aa6b5654893(CCallbackBase *_swig_go_0, intgo _swig_go_1) {
  CCallbackBase *arg1 = (CCallbackBase *) 0 ;
  int arg2 ;
  
  arg1 = *(CCallbackBase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  SteamAPI_RegisterCallback(arg1,arg2);
  
}


void _wrap_SteamAPI_UnregisterCallback_steam_fb253aa6b5654893(CCallbackBase *_swig_go_0) {
  CCallbackBase *arg1 = (CCallbackBase *) 0 ;
  
  arg1 = *(CCallbackBase **)&_swig_go_0; 
  
  SteamAPI_UnregisterCallback(arg1);
  
}


void _wrap_SteamAPI_RegisterCallResult_steam_fb253aa6b5654893(CCallbackBase *_swig_go_0, long long _swig_go_1) {
  CCallbackBase *arg1 = (CCallbackBase *) 0 ;
  SteamAPICall_t arg2 ;
  
  arg1 = *(CCallbackBase **)&_swig_go_0; 
  arg2 = (SteamAPICall_t)_swig_go_1; 
  
  SteamAPI_RegisterCallResult(arg1,arg2);
  
}


void _wrap_SteamAPI_UnregisterCallResult_steam_fb253aa6b5654893(CCallbackBase *_swig_go_0, long long _swig_go_1) {
  CCallbackBase *arg1 = (CCallbackBase *) 0 ;
  SteamAPICall_t arg2 ;
  
  arg1 = *(CCallbackBase **)&_swig_go_0; 
  arg2 = (SteamAPICall_t)_swig_go_1; 
  
  SteamAPI_UnregisterCallResult(arg1,arg2);
  
}


void _wrap_CCallbackBase_Run__SWIG_0_steam_fb253aa6b5654893(CCallbackBase *_swig_go_0, void *_swig_go_1) {
  CCallbackBase *arg1 = (CCallbackBase *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(CCallbackBase **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->Run(arg2);
  
}


void _wrap_CCallbackBase_Run__SWIG_1_steam_fb253aa6b5654893(CCallbackBase *_swig_go_0, void *_swig_go_1, bool _swig_go_2, long long _swig_go_3) {
  CCallbackBase *arg1 = (CCallbackBase *) 0 ;
  void *arg2 = (void *) 0 ;
  bool arg3 ;
  SteamAPICall_t arg4 ;
  
  arg1 = *(CCallbackBase **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = (SteamAPICall_t)_swig_go_3; 
  
  (arg1)->Run(arg2,arg3,arg4);
  
}


intgo _wrap_CCallbackBase_GetICallback_steam_fb253aa6b5654893(CCallbackBase *_swig_go_0) {
  CCallbackBase *arg1 = (CCallbackBase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CCallbackBase **)&_swig_go_0; 
  
  result = (int)(arg1)->GetICallback();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CCallbackBase_GetCallbackSizeBytes_steam_fb253aa6b5654893(CCallbackBase *_swig_go_0) {
  CCallbackBase *arg1 = (CCallbackBase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CCallbackBase **)&_swig_go_0; 
  
  result = (int)(arg1)->GetCallbackSizeBytes();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_CCallbackBase_steam_fb253aa6b5654893(CCallbackBase *_swig_go_0) {
  CCallbackBase *arg1 = (CCallbackBase *) 0 ;
  
  arg1 = *(CCallbackBase **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_SteamAPI_IsSteamRunning_steam_fb253aa6b5654893() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)SteamAPI_IsSteamRunning();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Steam_RunCallbacks_steam_fb253aa6b5654893(intgo _swig_go_0, bool _swig_go_1) {
  HSteamPipe arg1 ;
  bool arg2 ;
  
  arg1 = (HSteamPipe)_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  Steam_RunCallbacks(arg1,arg2);
  
}


void _wrap_Steam_RegisterInterfaceFuncs_steam_fb253aa6b5654893(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Steam_RegisterInterfaceFuncs(arg1);
  
}


intgo _wrap_Steam_GetHSteamUserCurrent_steam_fb253aa6b5654893() {
  HSteamUser result;
  intgo _swig_go_result;
  
  
  result = (HSteamUser)Steam_GetHSteamUserCurrent();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_SteamAPI_GetSteamInstallPath_steam_fb253aa6b5654893() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)SteamAPI_GetSteamInstallPath();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_SteamAPI_GetHSteamPipe_steam_fb253aa6b5654893() {
  HSteamPipe result;
  intgo _swig_go_result;
  
  
  result = (HSteamPipe)SteamAPI_GetHSteamPipe();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SteamAPI_SetTryCatchCallbacks_steam_fb253aa6b5654893(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  SteamAPI_SetTryCatchCallbacks(arg1);
  
}


intgo _wrap_GetHSteamPipe_steam_fb253aa6b5654893() {
  HSteamPipe result;
  intgo _swig_go_result;
  
  
  result = (HSteamPipe)GetHSteamPipe();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetHSteamUser_steam_fb253aa6b5654893() {
  HSteamUser result;
  intgo _swig_go_result;
  
  
  result = (HSteamUser)GetHSteamUser();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SteamAPI_GetHSteamUser_steam_fb253aa6b5654893() {
  HSteamUser result;
  intgo _swig_go_result;
  
  
  result = (HSteamUser)SteamAPI_GetHSteamUser();
  _swig_go_result = result; 
  return _swig_go_result;
}


void *_wrap_SteamInternal_ContextInit_steam_fb253aa6b5654893(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  result = (void *)SteamInternal_ContextInit(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void *_wrap_SteamInternal_CreateInterface_steam_fb253aa6b5654893(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (void *)SteamInternal_CreateInterface((char const *)arg1);
  *(void **)&_swig_go_result = (void *)result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_SteamInternal_OnContextInit_steam_fb253aa6b5654893(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  SteamInternal_OnContextInit(arg1);
  
}


CSteamAPIContext *_wrap_SteamInternal_ModuleContext_steam_fb253aa6b5654893() {
  CSteamAPIContext *result = 0 ;
  CSteamAPIContext *_swig_go_result;
  
  
  result = (CSteamAPIContext *) &SteamInternal_ModuleContext();
  *(CSteamAPIContext **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_sizeof_CreateItemResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = sizeof(CreateItemResult_t);
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_sizeof_SubmitItemUpdateResult_t_steam_fb253aa6b5654893() {
  int result;
  intgo _swig_go_result;
  
  
  result = sizeof(SubmitItemUpdateResult_t);
  
  _swig_go_result = result; 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

